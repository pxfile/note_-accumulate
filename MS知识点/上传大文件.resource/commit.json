{"compress":true,"commitItems":[["bd27f035-a411-4da3-b3df-18c48beed634",1520848643186,"",[[1520848597557,["gengmei_pxf@localhost",[[1,0,"上传大文件\n===\n\n\n上传过大文件 100MB以上"]],[0,0],[26,26]]],[1520848599657,["gengmei_pxf@localhost",[[1,12,"\n"]],[10,10],[11,11]]],[1520848600908,["gengmei_pxf@localhost",[[1,11,"## "]],[11,11],[14,14]]],[1520848603525,["gengmei_pxf@localhost",[[1,16,"## "]],[16,16],[19,19]]],[1520848746880,["gengmei_pxf@localhost",[[1,16,"\n"]],[14,14],[15,15]]],[1520848747524,["gengmei_pxf@localhost",[[1,15,"在开发[Android](http://lib.csdn.net/base/android \"Android知识库\")应用时，会经常上传图片到服务器，会经常出现上传图片失败和时间过长的问题\n\n为了解决这个问题，决定把照片进行压缩后上保存后本地缓存文件夹后再上传\n\n使用方法：\n\n//压缩后得到新的图片路径\n\n1.  BitmapUtils.compressImageUpload    \n\n// 上传成功后删除缓存文件\n\nBitmapUtils.deleteCacheFile()\n\nimport java.io.ByteArrayInputStream;\nimport java.io.ByteArrayOutputStream;\nimport java.io.File;\nimport java.io.FileNotFoundException;\nimport java.io.FileOutputStream;\nimport java.io.IOException;\n\nimport android.graphics.Bitmap;\nimport android.graphics.Bitmap.Config;\nimport android.graphics.BitmapFactory;\n\n/**\n * Image compress factory class\n * \n * @author \n *\n */\npublic class BitmapUtils {\n\n    /**\n     * 质量压缩方法\n     * \n     * @param image\n     * @return\n     */\n    private static Bitmap compressImage(Bitmap image) {\n\n        ByteArrayOutputStream baos = new ByteArrayOutputStream();\n        image.compress(Bitmap.CompressFormat.JPEG, 100, baos);\n        int options = 100;\n        while (baos.toByteArray().length / 1024 > 100) { \n            baos.reset();\n            image.compress(Bitmap.CompressFormat.JPEG, options, baos);\n            options -= 10;\n        }\n        ByteArrayInputStream isBm = new ByteArrayInputStream(baos.toByteArray());\n        Bitmap bitmap = BitmapFactory.decodeStream(isBm, null, null);\n        return bitmap;\n    }\n\n    /**\n     * 图片按比例大小压缩方法（根据路径获取图片并压缩）\n     * \n     * @param srcPath\n     * @return\n     */\n    private static Bitmap getImage(String srcPath) {\n        BitmapFactory.Options newOpts = new BitmapFactory.Options();\n        newOpts.inJustDecodeBounds = true;\n        Bitmap bitmap = BitmapFactory.decodeFile(srcPath, newOpts);// 此时返回bm为空\n\n        newOpts.inJustDecodeBounds = false;\n        int w = newOpts.outWidth;\n        int h = newOpts.outHeight;\n        // 现在主流手机比较多是800*480分辨率，所以高和宽我们设置为\n        float hh = 800f;// 这里设置高度为800f\n        float ww = 480f;// 这里设置宽度为480f\n        // 缩放比。由于是固定比例缩放，只用高或者宽其中一个数据进行计算即可\n        int be = 1;// be=1表示不缩放\n        if (w > h && w > ww) {// 如果宽度大的话根据宽度固定大小缩放\n            be = (int) (newOpts.outWidth / ww);\n        } else if (w < h && h > hh) {// 如果高度高的话根据宽度固定大小缩放\n            be = (int) (newOpts.outHeight / hh);\n        }\n        if (be <= 0)\n            be = 1;\n        newOpts.inSampleSize = be;// 设置缩放比例\n        // 重新读入图片，注意此时已经把options.inJustDecodeBounds 设回false了\n        bitmap = BitmapFactory.decodeFile(srcPath, newOpts);\n        return compressImage(bitmap);// 压缩好比例大小后再进行质量压缩\n    }\n\n    /**\n     * 将压缩的bitmap保存到SDCard卡临时文件夹，用于上传\n     * \n     * @param filename\n     * @param bit\n     * @return\n     */\n    private static String saveMyBitmap(String filename, Bitmap bit) {\n        String baseDir = Environment.getExternalStorageDirectory().getAbsolutePath()+\"/laopai/\";\n        String filePath = baseDir + filename;\n        File dir = new File(baseDir);\n        if (!dir.exists()) {\n            dir.mkdir();\n        }\n\n        File f = new File(filePath);\n        try {\n            f.createNewFile();\n            FileOutputStream fOut = null;\n            fOut = new FileOutputStream(f);\n            bit.compress(Bitmap.CompressFormat.PNG, 100, fOut);\n            fOut.flush();\n            fOut.close();\n        } catch (IOException e1) {\n            e1.printStackTrace();\n        }\n\n        return filePath;\n    }\n\n    /**\n     * 压缩上传路径\n     * @param path\n     * @return\n     */\n    public static String compressImageUpload(String path) {\n        String filename = path.substring(path.lastIndexOf(\"/\") + 1);\n        Bitmap image = getImage(path);\n        return saveMyBitmap(filename, image);\n    }\n\n    /**\n     * 清除缓存文件\n     */\n    public static void deleteCacheFile(){\n        File file = new File(Environment.getExternalStorageDirectory().getAbsolutePath()+\"/laopai/\");\n        RecursionDeleteFile(file);\n    }\n    /**\n     * 递归删除\n     */\n    private static void RecursionDeleteFile(File file){\n        if(file.isFile()){\n            file.delete();\n            return;\n        }\n        if(file.isDirectory()){\n            File[] childFile = file.listFiles();\n            if(childFile == null || childFile.length == 0){\n                file.delete();\n                return;\n            }\n            for(File f : childFile){\n                RecursionDeleteFile(f);\n            }\n            file.delete();\n        }\n    }\n}"]],[15,15],[4288,4288]]],[1520848751042,["gengmei_pxf@localhost",[[-1,14,""],[1,14,"大图"],[-1,204,"    "],[1,208,"    "],[-1,568," "],[1,569," "],[-1,600," * \n "],[1,605," * \n "],[-1,614," \n *\n "],[1,620," \n *\n "],[-1,651,"    "],[1,655,"    "],[-1,659,"    "],[1,663,"    "],[-1,673,"     * \n    "],[1,685,"     * \n    "],[-1,701,"    "],[1,705,"    "],[-1,716,"    "],[1,720,"    "],[-1,724,"   "],[1,727,"   "],[-1,781,"        "],[1,789,"        "],[-1,847,"        "],[1,855,"        "],[-1,910,"        "],[1,918,"        "],[-1,937,"        "],[1,945,"        "],[-1,993," \n            "],[1,1007," \n            "],[-1,1021,"            "],[1,1033,"            "],[-1,1092,"            "],[1,1104,"            "],[-1,1119,"        }\n        "],[1,1137,"        }\n        "],[-1,1211,"        "],[1,1219,"        "],[-1,1281,"        "],[1,1289,"        "],[-1,1304,"    }\n\n    "],[1,1315,"    }\n\n    "],[-1,1319,"    "],[1,1323,"    "],[-1,1351,"     * \n    "],[1,1363,"     * \n    "],[-1,1381,"    "],[1,1385,"    "],[-1,1396,"    "],[1,1400,"    "],[-1,1404,"   "],[1,1407,"   "],[-1,1457,"        "],[1,1465,"        "],[-1,1526,"        "],[1,1534,"        "],[-1,1569,"        "],[1,1577,"        "],[-1,1649,"        "],[1,1657,"        "],[-1,1693,"        "],[1,1701,"        "],[-1,1727,"        "],[1,1735,"        "],[-1,1762,"        "],[1,1770,"        "],[-1,1805,"        "],[1,1813,"        "],[-1,1844,"        "],[1,1852,"        "],[-1,1883,"        "],[1,1891,"        "],[-1,1927,"        "],[1,1935,"        "],[-1,1959,"        "],[1,1967,"        "],[-1,2010,"            "],[1,2022,"            "],[-1,2058,"        "],[1,2066,"        "],[-1,2116,"            "],[1,2128,"            "],[-1,2165,"        }\n        "],[1,2183,"        }\n        "],[-1,2196,"            "],[1,2208,"            "],[-1,2216,"        "],[1,2224,"        "],[-1,2260,"        "],[1,2268,"        "],[-1,2321,"        "],[1,2329,"        "],[-1,2382,"        "],[1,2390,"        "],[-1,2438,"    }\n\n    "],[1,2449,"    }\n\n    "],[-1,2453,"    "],[1,2457,"    "],[-1,2491,"     * \n    "],[1,2503,"     * \n    "],[-1,2522,"    "],[1,2526,"    "],[-1,2540,"    "],[1,2544,"    "],[-1,2555,"    "],[1,2559,"    "],[-1,2563,"   "],[1,2566,"   "],[-1,2633,"        "],[1,2641,"        "],[-1,2730,"       "],[1,2737,"       "],[-1,2776,"        "],[1,2784,"        "],[-1,2814,"        "],[1,2822,"        "],[-1,2843,"            "],[1,2855,"            "],[-1,2868,"        }\n\n        "],[1,2887,"        }\n\n        "],[-1,2916,"        "],[1,2924,"        "],[-1,2930,"            "],[1,2942,"            "],[-1,2961,"            "],[1,2973,"            "],[-1,3003,"            "],[1,3015,"            "],[-1,3047,"            "],[1,3059,"            "],[-1,3111,"            "],[1,3123,"            "],[-1,3137,"            "],[1,3149,"            "],[-1,3163,"        "],[1,3171,"        "],[-1,3198,"           "],[1,3209,"           "],[-1,3232,"        }\n\n        "],[1,3251,"        }\n\n        "],[-1,3268,"    }\n\n   "],[1,3278,"    }\n\n   "],[-1,3283,"    "],[1,3287,"    "],[-1,3297,"    "],[1,3301,"    "],[-1,3316,"    "],[1,3320,"    "],[-1,3331,"    "],[1,3335,"    "],[-1,3339,"    "],[1,3343,"    "],[-1,3399,"        "],[1,3407,"        "],[-1,3468,"        "],[1,3476,"        "],[-1,3507,"        "],[1,3515,"        "],[-1,3553,"    }\n\n   "],[1,3563,"    }\n\n   "],[-1,3568,"    "],[1,3572,"    "],[-1,3582,"    "],[1,3586,"    "],[-1,3590,"   "],[1,3593,"   "],[-1,3632,"       "],[1,3639,"       "],[-1,3734,"       "],[1,3741,"       "],[-1,3769,"    }\n   "],[1,3778,"    }\n   "],[-1,3783,"    "],[1,3787,"    "],[-1,3795,"    "],[1,3799,"    "],[-1,3803,"   "],[1,3806,"   "],[-1,3859,"       "],[1,3866,"       "],[-1,3886,"           "],[1,3897,"           "],[-1,3913,"           "],[1,3924,"           "],[-1,3933,"        }\n       "],[1,3950,"        }\n       "],[-1,3975,"           "],[1,3986,"           "],[-1,4024,"           "],[1,4035,"           "],[-1,4084,"               "],[1,4099,"               "],[-1,4115,"               "],[1,4130,"               "],[-1,4139,"            }\n           "],[1,4164,"            }\n           "],[-1,4190,"               "],[1,4205,"               "],[-1,4230,"            }\n           "],[1,4255,"            }\n           "],[-1,4271,"        }\n   "],[1,4284,"        }\n   "]],[14,14],[16,16]]],[1520848752463,["gengmei_pxf@localhost",[[-1,15,"图"]],[16,16],[15,15]]],[1520848756985,["gengmei_pxf@localhost",[[1,15,"文件上传"]],[15,15],[19,19]]],[1520848772467,["gengmei_pxf@localhost",[[1,174,"·"]],[174,174],[175,175]]],[1520848773443,["gengmei_pxf@localhost",[[-1,174,"·"]],[175,175],[174,174]]],[1520848774276,["gengmei_pxf@localhost",[[1,174,"`"]],[174,174],[175,175]]],[1520848776251,["gengmei_pxf@localhost",[[1,213,"`"]],[213,213],[214,214]]],[1520848779477,["gengmei_pxf@localhost",[[1,232,"```"]],[232,232],[235,235]]],[1520848786629,["gengmei_pxf@localhost",[[1,4299,"```"]],[4299,4299],[4302,4302]]],[1520848798467,["gengmei_pxf@localhost",[[-1,4312," "]],[4313,4313],[4312,4312]]],[1520848800048,["gengmei_pxf@localhost",[[1,4319,"\n\n"]],[4319,4319],[4320,4320]]],[1520848831376,["gengmei_pxf@localhost",[[1,4321,"\n"]],[4320,4320],[4321,4321]]],[1520848834504,["gengmei_pxf@localhost",[[-1,4321,"\n"],[1,4322,"### f"]],[4321,4321],[4326,4326]]],[1520848835215,["gengmei_pxf@localhost",[[-1,4325,"f"]],[4326,4326],[4325,4325]]],[1520848841058,["gengmei_pxf@localhost",[[1,4325,"分割双穿"]],[4325,4325],[4329,4329]]],[1520848841871,["gengmei_pxf@localhost",[[-1,4327,"双穿"]],[4329,4329],[4327,4327]]],[1520848844409,["gengmei_pxf@localhost",[[1,4327,"上传"]],[4327,4327],[4329,4329]]],[1520848846959,["gengmei_pxf@localhost",[[1,4329,"\n\n"]],[4329,4329],[4330,4330]]],[1520848847399,["gengmei_pxf@localhost",[[1,4331,"\n"]],[4330,4330],[4331,4331]]],[1520848848008,["gengmei_pxf@localhost",[[1,4331,"1.  #### 由于android自身的原因，对大文件(如影视频文件)的操作很容易造成OOM，即：Dalvik堆内存溢出，利用文件分割将大文件分割为小文件可以解决问题。\n\n*   文件分割后分多次请求服务。\n\n     1 //文件分割上传\n     2     public  void cutFileUpload(String fileType,String filePath) 3     {\n     4         try\n     5         {\n     6             FileAccessI fileAccessI = new FileAccessI(filePath, 0);\n     7             Long nStartPos = 0l;\n     8             Long length = fileAccessI.getFileLength(); 9             int mBufferSize = 1024 * 100; //每次处理1024 * 100字节\n    10             byte[] buffer = new byte[mBufferSize]; 11 FileAccessI.Detail detail; 12             long nRead = 0l; 13             String vedioFileName = Usual.f_getUUID(); //分配一个文件名\n    14             long nStart = nStartPos; 15             int i = 0; 16             while (nStart < length) 17 { 18                 detail = fileAccessI.getContent(nStart); 19                 nRead = detail.length; 20                 buffer = detail.b; 21                 JSONObject mInDataJson = new JSONObject(); 22                 mInDataJson.put(\"a\", \"282\"); 23                 mInDataJson.put(\"FileName\", vedioFileName); 24                 mInDataJson.put(\"start\", nStart); //服务端获取开始文章进行写文件\n    25                 mInDataJson.put(\"filetype\", fileType); 26                 nStart += nRead; 27                 nStartPos = nStart; 28                 String url = UsualA.f_getXmlSOAUrl(UsualA.mServiceFastByteUrl, \"n.uploadvedio\", mInDataJson.toString(), 29                         \"282\"); 30                 HttpFastUtil.f_httpPostByte(url, buffer, false); 31 } 32 } 33         catch (Exception e) 34 { 35         }\n\n*   文件分割类\n\n     1 package ishitong.mppsp.android.util; 2 \n     3 import java.io.*;\n     4 \n     5 public class FileAccessI implements Serializable 6 {\n     7 \n     8     RandomAccessFile oSavedFile;\n     9     long nPos; 10 \n    11 \n    12     public FileAccessI() throws IOException 13 { 14         this(\"\", 0); 15 } 16     public FileAccessI(String sName, long nPos) throws IOException 17 { 18         oSavedFile = new RandomAccessFile(sName, \"rw\");//创建一个随机访问文件类，可读写模式\n    19         this.nPos = nPos; 20 oSavedFile.seek(nPos); 21 } 22     public synchronized int write(byte[] b, int nStart, int nLen) 23 { 24         int n = -1; 25         try\n    26 { 27 oSavedFile.write(b, nStart, nLen); 28             n = nLen; 29 } 30         catch (IOException e) 31 { 32 e.printStackTrace(); 33 } 34         return n; 35 } 36     //每次读取102400字节\n    37     public synchronized Detail getContent(long nStart) 38 { 39         Detail detail = new Detail(); 40         detail.b = new byte[102400]; 41         try\n    42 { 43 oSavedFile.seek(nStart); 44             detail.length = oSavedFile.read(detail.b); 45 } 46         catch (IOException e) 47 { 48 e.printStackTrace(); 49 } 50         return detail; 51 } 52 \n    53 \n    54     public class Detail 55 { 56 \n    57         public byte[] b; 58         public int length; 59 } 60 \n    61     //获取文件长度\n    62     public long getFileLength() 63 { 64         Long length = 0l; 65         try\n    66 { 67             length = oSavedFile.length(); 68 } 69         catch (IOException e) 70 { 71             // TODO Auto-generated catch block\n    72 e.printStackTrace(); 73 } 74         return length; 75 } 76 }\n\n*   服务端获得分割的文件，利用RandomAccessFile进行文件整理\n\n     1 /**\n     2      * 音视频图片处理\n     3 * @param mStr 4 * @return\n     5 * @throws Exception 6      */\n     7     public static String f_uploadVedio(String mStr) throws Exception 8     {\n     9         String mResult = Usual.mEmpty; 10         String fileType = Usual.mEmpty; 11         int startPosL = 0; 12         RandomAccessFile oSavedFile = null; 13         JSONObject jsonObject = new JSONObject(mStr); 14         String vedioJsonStr = jsonObject.getString(\"VEDIO\"); 15         byte[] vedioBytes = Usual.f_fromBase64String(vedioJsonStr); 16         startPosL = (Integer) jsonObject.get(\"start\"); //接收客户端的开始位置(文件读取到的字节大小)\n    17         fileType = (String)jsonObject.getString(\"filetype\"); 18         String fileName = (String)jsonObject.getString(\"FileName\"); 19         if(fileType.equals(\"picture\")) 20 { 21             oSavedFile = new RandomAccessFile(\"E:\\\\\"+fileName+\".jpg\",\"rw\"); 22 } 23         else if(fileType.equals(\"photo\")) 24 { 25             oSavedFile = new RandomAccessFile(\"E:\\\\\"+fileName+\".jpg\",\"rw\"); 26 } 27         else if(fileType.equals(\"voice\")) 28 { 29             oSavedFile = new RandomAccessFile(\"E:\\\\\"+fileName+\".mp3\",\"rw\"); 30 } 31         else if(fileType.equals(\"video\")) 32 { 33             oSavedFile = new RandomAccessFile(\"E:\\\\\"+fileName+\".mp4\", \"rw\"); 34 } 35         //设置标志位,标志文件存储的位置\n    36 oSavedFile.seek(startPosL); 37 oSavedFile.write(vedioBytes); 38 oSavedFile.close(); 39         mResult = \"000\"; 40         return mResult; 41     }"]],[4331,4331],[9088,9088]]],[1520848851138,["gengmei_pxf@localhost",[[-1,4331,"1. "]],[4334,4334],[4331,4331]]],[1520848855273,["gengmei_pxf@localhost",[[-1,4331," #### "]],[4332,4337],[4331,4331]]],[1520848956018,["gengmei_pxf@localhost",[[-1,4431,"  1 //文件分割上传\n     2     public  void cutFileUpload(String fileType,String filePath) 3     {\n     4         try\n     5         {\n     6             FileAccessI fileAccessI = new FileAccessI(filePath, 0);\n     7             Long nStartPos = 0l;\n     8             Long length = fileAccessI.getFileLength(); 9             int mBufferSize = 1024 * 100; //每次处理1024 * 100字节\n    10             byte[] buffer = new byte[mBufferSize]; 11 FileAccessI.Detail detail; 12             long nRead = 0l; 13             String vedioFileName = Usual.f_getUUID(); //分配一个文件名\n    14             long nStart = nStartPos; 15             int i = 0; 16             while (nStart < length) 17 { 18                 detail = fileAccessI.getContent(nStart); 19                 nRead = detail.length; 20                 buffer = detail.b; 21                 JSONObject mInDataJson = new JSONObject(); 22                 mInDataJson.put(\"a\", \"282\"); 23                 mInDataJson.put(\"FileName\", vedioFileName); 24                 mInDataJson.put(\"start\", nStart); //服务端获取开始文章进行写文件\n    25                 mInDataJson.put(\"filetype\", fileType); 26                 nStart += nRead; 27                 nStartPos = nStart; 28                 String url = UsualA.f_getXmlSOAUrl(UsualA.mServiceFastByteUrl, \"n.uploadvedio\", mInDataJson.toString(), 29                         \"282\"); 30                 HttpFastUtil.f_httpPostByte(url, buffer, false); 31 } 32 } 33         catch (Exception e) 34 { 35         }"]],[4431,5904],[4431,4431]]],[1520848962864,["gengmei_pxf@localhost",[[1,4432,"```\n//文件分割上传  \n      public  void cutFileUpload(String fileType,String filePath)  \n      {  \n          try  \n          {  \n              FileAccessI fileAccessI = new FileAccessI(filePath, 0);  \n              Long nStartPos = 0l;  \n              Long length = fileAccessI.getFileLength();  \n             int mBufferSize = 1024 * 100; //每次处理1024 * 100字节  \n             byte[] buffer = new byte[mBufferSize];  \n             FileAccessI.Detail detail;  \n             long nRead = 0l;  \n             String vedioFileName = Usual.f_getUUID(); //分配一个文件名  \n             long nStart = nStartPos;  \n             int i = 0;  \n             while (nStart < length)  \n             {  \n                 detail = fileAccessI.getContent(nStart);  \n                 nRead = detail.length;  \n                 buffer = detail.b;  \n                 JSONObject mInDataJson = new JSONObject();  \n                 mInDataJson.put(\"a\", \"282\");  \n                 mInDataJson.put(\"FileName\", vedioFileName);  \n                 mInDataJson.put(\"start\", nStart); //服务端获取开始文章进行写文件  \n                 mInDataJson.put(\"filetype\", fileType);  \n                 nStart += nRead;  \n                 nStartPos = nStart;  \n                 String url = UsualA.f_getXmlSOAUrl(UsualA.mServiceFastByteUrl, \"n.uploadvedio\", mInDataJson.toString(),  \n                         \"282\");  \n                 HttpFastUtil.f_httpPostByte(url, buffer, false);  \n             }  \n         }  \n         catch (Exception e)  \n         {  \n         }  \n```\n\n"]],[4431,4431],[5937,5937]]],[1520848993220,["gengmei_pxf@localhost",[[-1,5953,"  1 "],[-1,5994,"2"],[1,6001,"\n"],[-1,6002,"3"],[-1,6021,"\n"],[1,6024,"\n"],[-1,6027,"4"],[-1,6031,"    5"],[-1,6086,"6"],[-1,6088,"{"],[-1,6090," "],[1,6093,"{"],[-1,6095,"7 "],[1,6102,"\n"],[-1,6103,"8"],[-1,6137,"\n"],[-1,6140,"   9"],[1,6144,"\n "],[-1,6160,"10"],[-1,6164," "],[-1,6168,"11 "],[-1,6175," 12"],[1,6178,"\n"],[-1,6223,"13 { 14"],[1,6230," \n     {  \n"],[-1,6252,"15 } 16"],[1,6259," \n     }  \n"],[-1,6327,"17 { 18"],[1,6334," \n     {  \n"],[-1,6409,"\n  "],[-1,6414,"19"],[1,6416,"\n"],[-1,6443,"20"],[1,6445," \n        "],[-1,6469,"21 } 22"],[1,6476," \n     }  \n"],[-1,6543,"23 { 24"],[1,6550," \n     {  \n"],[-1,6571,"25"],[1,6573," \n"],[1,6585,"  "],[-1,6590,"26 { 27"],[1,6597,"     {  \n            "],[-1,6633,"28"],[1,6635," \n"],[-1,6658,"29 } 30"],[1,6665," \n         }  \n"],[-1,6696,"31 { 32"],[1,6703," \n         {  \n            "],[-1,6725,"33 } 34"],[1,6732," \n         }  \n"],[-1,6751,"35 } 36"],[1,6758," \n     }  \n"],[-1,6777,"\n  "],[-1,6782,"37"],[1,6784,"\n"],[-1,6840,"38 { 39"],[1,6847," \n     {  \n"],[-1,6886,"40"],[1,6888," \n"],[-1,6926,"41"],[1,6928," \n"],[1,6940,"  "],[-1,6945,"42 { 43"],[1,6952,"    {  \n            "],[-1,6978,"44"],[1,6980," \n"],[-1,7036,"45 } 46"],[1,7043," \n         }  \n"],[-1,7074,"47 { 48"],[1,7081," \n         {  \n            "],[-1,7103,"49 } 50"],[1,7110," \n        }  \n"],[-1,7134,"51 } 52 \n"],[1,7143," \n  "],[1,7146,"}"],[-1,7147,"53"],[1,7153," \n"],[-1,7155,"54"],[1,7157," \n"],[-1,7182,"55"],[1,7184," \n    "],[-1,7187,"56"],[-1,7194," 57"],[1,7197,"\n"],[-1,7223,"58"],[1,7225," \n"],[-1,7253,"59"],[1,7255," \n    "],[-1,7258,"60"],[-1,7262," "],[-1,7266,"61"],[1,7268,"\n"],[-1,7281,"\n "],[1,7285,"\n"],[-1,7286,"62"],[-1,7292," "],[-1,7321,"63 { 64"],[1,7328," \n     {  \n"],[-1,7355,"65"],[1,7358,"\n"],[1,7369,"  "],[-1,7374,"66 { 67"],[1,7381,"     {  \n"],[-1,7424,"68 } 69"],[1,7431," \n         }  \n"],[-1,7462,"70 { 71"],[1,7469," \n         {  \n"],[1,7516,"  "],[-1,7521,"72 e.printStackTrace(); 73 } 74"],[-1,7561,"return length; 75 } 76 }\n\n*   服务端获得分割的文件，利用RandomAccessFile进行文件整理\n\n     1 /**\n     2      * 音视频图片处理\n     3 * @param mStr 4 * @return\n     5 * @throws Exception 6      */\n     7     public static String f_uploadVedio(String mStr) throws Exception 8     {\n     9         String mResult = Usual.mEmpty; 10         String fileType = Usual.mEmpty; 11         int startPosL = 0; 12         RandomAc"],[1,7953,"e.printStackTra"],[-1,7955,"ssFile oSavedFile = null; 13         JSONObject jsonObject = new JSONObject"],[-1,8031,"mStr"],[-1,8038,"14"],[1,8041,"\n"],[-1,8049,"String vedioJsonStr = jsonObject.getString(\"VEDIO\"); 15         byte[] vedioBytes = Usual.f_fromBase64String(vedioJsonStr); 16         startPosL = (Integer) jsonObject.get(\"start\"); //接收客户端的开始位置(文件读取到的字节大小)"],[1,8255," }  "],[-1,8260,"17"],[-1,8267,"    fileType = (String)jsonObject.getString(\"filetype\"); 18         String fi"],[1,8344,"return "],[-1,8346,"Name = (Stri"],[-1,8360,")jsonObjec"],[-1,8371,".getString(\"FileName\"); 19         if(fileType.equals(\"picture\")) 20 { 21             oSavedFile = new RandomAccessFile(\"E:\\\\\"+fileName+\".jpg\",\"rw\"); 22 } 23         else if(fileType.equals(\"p"],[-1,8564,"oto\")) 24 { 25             oSavedFile = new RandomAccessFile(\"E:\\\\\"+fileName+\".jpg\",\"rw\")"],[-1,8655,"26 } 27         else if(fileType.equals(\"voice\")) 28 { 29             oSavedFile = new RandomAccessFile(\"E:\\\\\"+fileName+\".mp3\",\"rw\"); 30 } 31         else if(fileType.equals(\"video\")) 32 { 33             oSavedFile = new RandomAccessFile(\"E:\\\\\"+fileName+\".mp4\", \"rw\"); 34"],[1,8926," \n     }  \n"],[-1,8928," 35   "],[-1,8936,"    //设置标志位,标志文件存储的位置"],[-1,8958,"    36 oSavedFile.seek(startPosL); 37 oSavedFile.write(vedioBytes); 38 oSavedFile.close(); 39         mResult = \"000\"; 40         return mResult; 41     }"]],[5953,9112],[7727,7727]]],[1520848994616,["gengmei_pxf@localhost",[[1,5953,"  1 "],[1,5990,"2"],[-1,5996,"\n"],[1,5998,"3"],[1,6016,"\n"],[-1,6018,"\n"],[1,6022,"4"],[1,6025,"    5"],[1,6075,"6"],[1,6076,"{"],[1,6077," "],[-1,6079,"{"],[1,6082,"7 "],[-1,6087,"\n"],[1,6089,"8"],[1,6122,"\n"],[1,6124,"   9"],[-1,6124,"\n "],[1,6142,"10"],[1,6144," "],[1,6147,"11 "],[1,6151," 12"],[-1,6151,"\n"],[1,6197,"13 { 14"],[-1,6197," \n     {  \n"],[1,6230,"15 } 16"],[-1,6230," \n     }  \n"],[1,6309,"17 { 18"],[-1,6309," \n     {  \n"],[1,6395,"\n  "],[1,6397,"19"],[-1,6397,"\n"],[1,6425,"20"],[-1,6425," \n        "],[1,6459,"21 } 22"],[-1,6459," \n     }  \n"],[1,6537,"23 { 24"],[-1,6537," \n     {  \n"],[1,6569,"25"],[-1,6569," \n"],[-1,6583,"  "],[1,6590,"26 { 27"],[-1,6590,"     {  \n            "],[1,6647,"28"],[-1,6647," \n"],[1,6672,"29 } 30"],[-1,6672," \n         }  \n"],[1,6718,"31 { 32"],[-1,6718," \n         {  \n            "],[1,6767,"33 } 34"],[-1,6767," \n         }  \n"],[1,6801,"35 } 36"],[-1,6801," \n     }  \n"],[1,6831,"\n  "],[1,6833,"37"],[-1,6833,"\n"],[1,6890,"38 { 39"],[-1,6890," \n     {  \n"],[1,6940,"40"],[-1,6940," \n"],[1,6980,"41"],[-1,6980," \n"],[-1,6994,"  "],[1,7001,"42 { 43"],[-1,7001,"    {  \n            "],[1,7047,"44"],[-1,7047," \n"],[1,7105,"45 } 46"],[-1,7105," \n         }  \n"],[1,7151,"47 { 48"],[-1,7151," \n         {  \n            "],[1,7200,"49 } 50"],[-1,7200," \n        }  \n"],[1,7238,"51 } 52 \n"],[-1,7238," \n  "],[-1,7245,"}"],[1,7247,"53"],[-1,7251," \n"],[1,7255,"54"],[-1,7255," \n"],[1,7282,"55"],[-1,7282," \n    "],[1,7291,"56"],[1,7296," 57"],[-1,7296,"\n"],[1,7323,"58"],[-1,7323," \n"],[1,7353,"59"],[-1,7353," \n    "],[1,7362,"60"],[1,7364," "],[1,7367,"61"],[-1,7367,"\n"],[1,7381,"\n "],[-1,7383,"\n"],[1,7385,"62"],[1,7389," "],[1,7417,"63 { 64"],[-1,7417," \n     {  \n"],[1,7455,"65"],[-1,7456,"\n"],[-1,7468,"  "],[1,7475,"66 { 67"],[-1,7475,"     {  \n"],[1,7527,"68 } 69"],[-1,7527," \n         }  \n"],[1,7573,"70 { 71"],[-1,7573," \n         {  \n"],[-1,7635,"  "],[1,7642,"72 e.printStackTrace(); 73 } 74"],[1,7651,"return length; 75 } 76 }\n\n*   服务端获得分割的文件，利用RandomAccessFile进行文件整理\n\n     1 /**\n     2      * 音视频图片处理\n     3 * @param mStr 4 * @return\n     5 * @throws Exception 6      */\n     7     public static String f_uploadVedio(String mStr) throws Exception 8     {\n     9         String mResult = Usual.mEmpty; 10         String fileType = Usual.mEmpty; 11         int startPosL = 0; 12         RandomAc"],[-1,7651,"e.printStackTra"],[1,7668,"ssFile oSavedFile = null; 13         JSONObject jsonObject = new JSONObject"],[1,7669,"mStr"],[1,7672,"14"],[-1,7673,"\n"],[1,7682,"String vedioJsonStr = jsonObject.getString(\"VEDIO\"); 15         byte[] vedioBytes = Usual.f_fromBase64String(vedioJsonStr); 16         startPosL = (Integer) jsonObject.get(\"start\"); //接收客户端的开始位置(文件读取到的字节大小)"],[-1,7682," }  "],[1,7691,"17"],[1,7696,"    fileType = (String)jsonObject.getString(\"filetype\"); 18         String fi"],[-1,7696,"return "],[1,7705,"Name = (Stri"],[1,7707,")jsonObjec"],[1,7708,".getString(\"FileName\"); 19         if(fileType.equals(\"picture\")) 20 { 21             oSavedFile = new RandomAccessFile(\"E:\\\\\"+fileName+\".jpg\",\"rw\"); 22 } 23         else if(fileType.equals(\"p"],[1,7709,"oto\")) 24 { 25             oSavedFile = new RandomAccessFile(\"E:\\\\\"+fileName+\".jpg\",\"rw\")"],[1,7711,"26 } 27         else if(fileType.equals(\"voice\")) 28 { 29             oSavedFile = new RandomAccessFile(\"E:\\\\\"+fileName+\".mp3\",\"rw\"); 30 } 31         else if(fileType.equals(\"video\")) 32 { 33             oSavedFile = new RandomAccessFile(\"E:\\\\\"+fileName+\".mp4\", \"rw\"); 34"],[-1,7711," \n     }  \n"],[1,7724," 35   "],[1,7726,"    //设置标志位,标志文件存储的位置"],[1,7727,"    36 oSavedFile.seek(startPosL); 37 oSavedFile.write(vedioBytes); 38 oSavedFile.close(); 39         mResult = \"000\"; 40         return mResult; 41     }"]],[7727,7727],[5953,9112]]],[1520849000793,["gengmei_pxf@localhost",[[-1,5953,"  1 package ishitong.mppsp.android.util; 2 \n     3 import java.io.*;\n     4 \n     5 public class FileAccessI implements Serializable 6 {\n     7 \n     8     RandomAccessFile oSavedFile;\n     9     long nPos; 10 \n    11 \n    12     public FileAccessI() throws IOException 13 { 14         this(\"\", 0); 15 } 16     public FileAccessI(String sName, long nPos) throws IOException 17 { 18         oSavedFile = new RandomAccessFile(sName, \"rw\");//创建一个随机访问文件类，可读写模式\n    19         this.nPos = nPos; 20 oSavedFile.seek(nPos); 21 } 22     public synchronized int write(byte[] b, int nStart, int nLen) 23 { 24         int n = -1; 25         try\n    26 { 27 oSavedFile.write(b, nStart, nLen); 28             n = nLen; 29 } 30         catch (IOException e) 31 { 32 e.printStackTrace(); 33 } 34         return n; 35 } 36     //每次读取102400字节\n    37     public synchronized Detail getContent(long nStart) 38 { 39         Detail detail = new Detail(); 40         detail.b = new byte[102400]; 41         try\n    42 { 43 oSavedFile.seek(nStart); 44             detail.length = oSavedFile.read(detail.b); 45 } 46         catch (IOException e) 47 { 48 e.printStackTrace(); 49 } 50         return detail; 51 } 52 \n    53 \n    54     public class Detail 55 { 56 \n    57         public byte[] b; 58         public int length; 59 } 60 \n    61     //获取文件长度\n    62     public long getFileLength() 63 { 64         Long length = 0l; 65         try\n    66 { 67             length = oSavedFile.length(); 68 } 69         catch (IOException e) 70 { 71             // TODO Auto-generated catch block\n    72 e.printStackTrace(); 73 } 74         return length; 75 } 76 }\n\n*   服务端获得分割的文件，利用RandomAccessFile进行文件整理\n\n     1 /**\n     2      * 音视频图片处理\n     3 * @param mStr 4 * @return\n     5 * @throws Exception 6      */\n     7     public static String f_uploadVedio(String mStr) throws Exception 8     {\n     9         String mResult = Usual.mEmpty; 10         String fileType = Usual.mEmpty; 11         int startPosL = 0; 12         RandomAccessFile oSavedFile = null; 13         JSONObject jsonObject = new JSONObject(mStr); 14         String vedioJsonStr = jsonObject.getString(\"VEDIO\"); 15         byte[] vedioBytes = Usual.f_fromBase64String(vedioJsonStr); 16         startPosL = (Integer) jsonObject.get(\"start\"); //接收客户端的开始位置(文件读取到的字节大小)\n    17         fileType = (String)jsonObject.getString(\"filetype\"); 18         String fileName = (String)jsonObject.getString(\"FileName\"); 19         if(fileType.equals(\"picture\")) 20 { 21             oSavedFile = new RandomAccessFile(\"E:\\\\\"+fileName+\".jpg\",\"rw\"); 22 } 23         else if(fileType.equals(\"photo\")) 24 { 25             oSavedFile = new RandomAccessFile(\"E:\\\\\"+fileName+\".jpg\",\"rw\"); 26 } 27         else if(fileType.equals(\"voice\")) 28 { 29             oSavedFile = new RandomAccessFile(\"E:\\\\\"+fileName+\".mp3\",\"rw\"); 30 } 31         else if(fileType.equals(\"video\")) 32 { 33             oSavedFile = new RandomAccessFile(\"E:\\\\\"+fileName+\".mp4\", \"rw\"); 34 } 35         //设置标志位,标志文件存储的位置\n    36 oSavedFile.seek(startPosL); 37 oSavedFile.write(vedioBytes); 38 oSavedFile.close(); 39         mResult = \"000\"; 40         return mResult; 41     }"]],[5953,9112],[5953,5953]]],[1520849037602,["gengmei_pxf@localhost",[[1,5954,"```\npackage ishitong.mppsp.android.util;  \n    \n  import java.io.*;  \n    \n  public class FileAccessI implements Serializable  \n  {  \n    \n      RandomAccessFile oSavedFile;  \n      long nPos;  \n   \n   \n     public FileAccessI() throws IOException  \n     {  \n         this(\"\", 0);  \n     }  \n     public FileAccessI(String sName, long nPos) throws IOException  \n     {  \n         oSavedFile = new RandomAccessFile(sName, \"rw\");//创建一个随机访问文件类，可读写模式  \n         this.nPos = nPos;  \n         oSavedFile.seek(nPos);  \n     }  \n     public synchronized int write(byte[] b, int nStart, int nLen)  \n     {  \n         int n = -1;  \n         try  \n         {  \n             oSavedFile.write(b, nStart, nLen);  \n             n = nLen;  \n         }  \n         catch (IOException e)  \n         {  \n             e.printStackTrace();  \n         }  \n         return n;  \n     }  \n     //每次读取102400字节  \n     public synchronized Detail getContent(long nStart)  \n     {  \n         Detail detail = new Detail();  \n         detail.b = new byte[102400];  \n         try  \n        {  \n             oSavedFile.seek(nStart);  \n             detail.length = oSavedFile.read(detail.b);  \n         }  \n         catch (IOException e)  \n         {  \n             e.printStackTrace();  \n        }  \n         return detail;  \n     }  \n   \n   \n     public class Detail  \n     {  \n   \n         public byte[] b;  \n         public int length;  \n     }  \n   \n     //获取文件长度  \n     public long getFileLength()  \n     {  \n         Long length = 0l;  \n        try  \n         {  \n             length = oSavedFile.length();  \n         }  \n         catch (IOException e)  \n         {  \n             // TODO Auto-generated catch block  \n             e.printStackTrace();  \n         }  \n         return length;  \n     }  \n }  \n\n```\n\n服务端获得分割的文件，利用RandomAccessFile进行文件整理"]],[5953,5953],[7772,7772]]],[1520849038607,["gengmei_pxf@localhost",[[1,7773,"\n"]],[7772,7772],[7773,7773]]],[1520849038943,["gengmei_pxf@localhost",[[1,7774,"\n"]],[7773,7773],[7774,7774]]],[1520849067140,[null,[[-1,7737,"\n"],[1,7773,"\n"]],[7737,7737],[7774,7774]]],[1520849067140,[null,[[1,7737,"\n"],[-1,7772,"\n"]],[7774,7774],[7737,7737]]],[1520849065567,["gengmei_pxf@localhost",[[1,7775,"```\n/** \n     * 音视频图片处理 \n     * @param mStr \n     * @return \n     * @throws Exception \n     */  \n    public static String f_uploadVedio(String mStr) throws Exception  \n    {  \n        String mResult = Usual.mEmpty;  \n        String fileType = Usual.mEmpty;  \n        int startPosL = 0;  \n        RandomAccessFile oSavedFile = null;  \n        JSONObject jsonObject = new JSONObject(mStr);  \n        String vedioJsonStr = jsonObject.getString(\"VEDIO\");  \n        byte[] vedioBytes = Usual.f_fromBase64String(vedioJsonStr);  \n        startPosL = (Integer) jsonObject.get(\"start\"); //接收客户端的开始位置(文件读取到的字节大小)  \n        fileType = (String)jsonObject.getString(\"filetype\");  \n        String fileName = (String)jsonObject.getString(\"FileName\");  \n        if(fileType.equals(\"picture\"))  \n        {  \n            oSavedFile = new RandomAccessFile(\"E:\\\\\"+fileName+\".jpg\",\"rw\");  \n        }  \n        else if(fileType.equals(\"photo\"))  \n        {  \n            oSavedFile = new RandomAccessFile(\"E:\\\\\"+fileName+\".jpg\",\"rw\");  \n        }  \n        else if(fileType.equals(\"voice\"))  \n         {  \n            oSavedFile = new RandomAccessFile(\"E:\\\\\"+fileName+\".mp3\",\"rw\");  \n        }  \n        else if(fileType.equals(\"video\"))   \n        {  \n            oSavedFile = new RandomAccessFile(\"E:\\\\\"+fileName+\".mp4\", \"rw\");  \n        }  \n        //设置标志位,标志文件存储的位置  \n        oSavedFile.seek(startPosL);  \n        oSavedFile.write(vedioBytes);  \n      oSavedFile.close();  \n        mResult = \"000\";  \n        return mResult;  \n    }  \n```\n\n"]],[7774,7774],[9296,9296]]],[1520849106324,[null,[[-1,7737,"\n"],[1,7773,"\n"]],[7737,7737],[7774,7774]]],[1520849106324,[null,[[1,7737,"\n"],[-1,7772,"\n"]],[7774,7774],[7737,7737]]],[1520849089462,["gengmei_pxf@localhost",[[1,9297,"\n"]],[9295,9295],[9296,9296]]],[1520849100119,["gengmei_pxf@localhost",[[1,9296,"### Socket双床"]],[9296,9296],[9308,9308]]],[1520849101093,["gengmei_pxf@localhost",[[-1,9306,"双床"]],[9308,9308],[9306,9306]]],[1520849104207,["gengmei_pxf@localhost",[[1,9306,"上传"]],[9306,9306],[9308,9308]]],[1520849105253,["gengmei_pxf@localhost",[[1,9310,"\n"]],[9308,9308],[9309,9309]]],[1520849107028,[null,[[-1,7737,"\n"],[1,7773,"\n"]],[7737,7737],[7774,7774]]],[1520849107028,[null,[[1,7737,"\n"],[-1,7772,"\n"]],[7774,7774],[7737,7737]]],[1520849106675,["gengmei_pxf@localhost",[[1,9311,"\n"]],[9309,9309],[9310,9310]]],[1520849124746,[null,[[-1,7737,"\n"],[1,7773,"\n"]],[7737,7737],[7774,7774]]],[1520849124746,[null,[[1,7737,"\n"],[-1,7772,"\n"]],[7774,7774],[7737,7737]]],[1520849119935,["gengmei_pxf@localhost",[[1,9310,"# [Android中Socket大文件断点上传](http://www.cnblogs.com/zhujiabin/p/5633665.html)"]],[9310,9310],[9384,9384]]],[1520849122292,["gengmei_pxf@localhost",[[-1,9310,"# "]],[9312,9312],[9310,9310]]],[1520849123028,["gengmei_pxf@localhost",[[-1,9309,"\n"]],[9310,9310],[9309,9309]]],[1520849123900,["gengmei_pxf@localhost",[[1,9309,"\n"]],[9309,9309],[9310,9310]]],[1520849157756,[null,[[-1,7737,"\n"],[1,7773,"\n"]],[7737,7737],[7774,7774]]],[1520849157756,[null,[[1,7737,"\n"],[-1,7772,"\n"]],[7774,7774],[7737,7737]]],[1520849145322,["gengmei_pxf@localhost",[[1,4321,"\n"]],[4319,4319],[4320,4320]]],[1520849145683,["gengmei_pxf@localhost",[[1,4322,"\n"]],[4320,4320],[4321,4321]]],[1520849146239,["gengmei_pxf@localhost",[[1,4321,"1.  采用Socket进行上传大文件\n2.  采用随机读写进行文件分块上传"]],[4321,4321],[4359,4359]]],[1520849149845,["gengmei_pxf@localhost",[[1,4321,"*"]],[4321,4321],[4322,4322]]],[1520849151637,["gengmei_pxf@localhost",[[-1,4322,"1."]],[4322,4324],[4322,4322]]],[1520849154466,["gengmei_pxf@localhost",[[-1,4340,"2."]],[4342,4342],[4340,4340]]],[1520849155390,["gengmei_pxf@localhost",[[1,4340,"*"]],[4340,4340],[4341,4341]]],[1520849165570,[null,[[-1,7775,"\n"],[1,7811,"\n"]],[7775,7775],[7812,7812]]],[1520849165570,[null,[[1,7775,"\n"],[-1,7810,"\n"]],[7812,7812],[7775,7775]]],[1520849162391,["gengmei_pxf@localhost",[[-1,4321,"*  采用Socket进行上传大文件"]],[4321,4339],[4321,4321]]],[1520849162957,["gengmei_pxf@localhost",[[-1,4321,"\n"]],[4321,4321],[4320,4320]]],[1520849164386,["gengmei_pxf@localhost",[[1,4340,"\n"]],[4338,4338],[4339,4339]]],[1520849164669,["gengmei_pxf@localhost",[[1,4339,"*  采用Socket进行上传大文件"]],[4339,4339],[4357,4357]]],[1520849203921,[null,[[-1,7775,"\n"],[1,7811,"\n"]],[7775,7775],[7812,7812]]],[1520849203921,[null,[[1,7775,"\n"],[-1,7810,"\n"]],[7812,7812],[7775,7775]]],[1520849180372,["gengmei_pxf@localhost",[[1,4447,"#### "]],[4447,4447],[4452,4452]]],[1520849183282,["gengmei_pxf@localhost",[[-1,4452,"*   "]],[4452,4456],[4452,4452]]],[1520849191763,["gengmei_pxf@localhost",[[-1,5978,"*   "],[1,5982,"#### "]],[5978,5982],[5983,5983]]],[1520849199051,["gengmei_pxf@localhost",[[1,7777,"#### "]],[7777,7777],[7782,7782]]]]]]}