{"compress":true,"commitItems":[["6944da65-6942-4db0-891d-62d64ab0569b",1521771590635,"",[[1521771537907,["gengmei_pxf@gengmei123.local",[[1,0,"面试总结6\n===\n\n\n"]],[0,0],[12,12]]],[1521771607563,["gengmei_pxf@gengmei123.local",[[-1,11,"\n"],[1,12,"# 进程间腾讯"]],[11,11],[18,18]]],[1521771608264,["gengmei_pxf@gengmei123.local",[[-1,16,"腾讯"]],[18,18],[16,16]]],[1521771615714,["gengmei_pxf@gengmei123.local",[[1,16,"通信方式（）"]],[16,16],[22,22]]],[1521771621548,["gengmei_pxf@gengmei123.local",[[1,21,"讲"]],[21,21],[22,22]]],[1521771622304,["gengmei_pxf@gengmei123.local",[[-1,21,"讲"]],[22,22],[21,21]]],[1521771626280,["gengmei_pxf@gengmei123.local",[[1,21,"介绍一种"]],[21,21],[25,25]]],[1521771629226,["gengmei_pxf@gengmei123.local",[[1,23,"其中"]],[23,23],[25,25]]],[1521771634179,["gengmei_pxf@gengmei123.local",[[1,21,"详细"]],[21,21],[23,23]]],[1521771636549,["gengmei_pxf@gengmei123.local",[[1,30,"\n\n"]],[30,30],[31,31]]],[1521771637141,["gengmei_pxf@gengmei123.local",[[1,32,"\n"]],[31,31],[32,32]]],[1521771649735,["gengmei_pxf@gengmei123.local",[[-1,32,"\n"],[1,33,"# 数据"]],[32,32],[36,36]]],[1521771653104,["gengmei_pxf@gengmei123.local",[[1,34,"Android"]],[34,34],[41,41]]],[1521771661513,["gengmei_pxf@gengmei123.local",[[1,43,"存储（）"]],[43,43],[47,47]]],[1521771663263,["gengmei_pxf@gengmei123.local",[[-1,45,"（）"]],[47,47],[45,45]]],[1521771666490,["gengmei_pxf@gengmei123.local",[[1,45," "]],[45,45],[46,46]]],[1521771826410,["gengmei_pxf@gengmei123.local",[[1,46,"（）"]],[46,46],[48,48]]],[1521771830155,["gengmei_pxf@gengmei123.local",[[1,47,"本地"]],[47,47],[49,49]]],[1521771839574,["gengmei_pxf@gengmei123.local",[[1,49,"存储，SDK存储\n\n"]],[49,49],[59,59]]],[1521771839919,["gengmei_pxf@gengmei123.local",[[1,60,"\n"]],[59,59],[60,60]]],[1521771874991,["gengmei_pxf@gengmei123.local",[[-1,60,"\n"],[1,61,"# 单例（）"]],[60,60],[66,66]]],[1521771888036,["gengmei_pxf@gengmei123.local",[[1,65,"为什么会有并发问题\n\n"]],[65,65],[76,76]]],[1521771888630,["gengmei_pxf@gengmei123.local",[[1,77,"\n"]],[76,76],[77,77]]],[1521771889974,["gengmei_pxf@gengmei123.local",[[-1,77,"\n"],[1,78,"# "]],[77,77],[79,79]]],[1521771950635,[null,[[1,57,"）"],[-1,59,"）"],[1,74,"）"],[-1,76,"）"]],[57,57],[76,76]]],[1521771950635,[null,[[-1,57,"）"],[1,60,"）"],[-1,74,"）"],[1,77,"）"]],[76,76],[57,57]]],[1521771930618,["gengmei_pxf@gengmei123.local",[[1,79,"锁（）"]],[79,79],[82,82]]],[1521771949374,["gengmei_pxf@gengmei123.local",[[1,81,"类锁，对象锁，"]],[81,81],[88,88]]],[1521772010632,[null,[[1,57,"）"],[-1,59,"）"],[1,74,"）"],[-1,76,"）"]],[57,57],[76,76]]],[1521772010632,[null,[[-1,57,"）"],[1,60,"）"],[-1,74,"）"],[1,77,"）"]],[76,76],[57,57]]],[1521771958608,["gengmei_pxf@gengmei123.local",[[1,88,"方法锁\n\n"]],[88,88],[93,93]]],[1521771958896,["gengmei_pxf@gengmei123.local",[[1,94,"\n"]],[93,93],[94,94]]],[1521771960090,["gengmei_pxf@gengmei123.local",[[-1,94,"\n"],[1,95,"# "]],[94,94],[96,96]]],[1521772130647,[null,[[1,57,"）"],[-1,59,"）"],[1,74,"）"],[-1,76,"）"],[1,91,"）"],[-1,93,"）"]],[57,57],[93,93]]],[1521772130647,[null,[[-1,57,"）"],[1,60,"）"],[-1,74,"）"],[1,77,"）"],[-1,91,"）"],[1,94,"）"]],[93,93],[57,57]]],[1521772072943,["gengmei_pxf@gengmei123.local",[[1,96,"垃圾回收"]],[96,96],[100,100]]],[1521772073382,["gengmei_pxf@gengmei123.local",[[1,100,"\n\n"]],[100,100],[101,101]]],[1521772073725,["gengmei_pxf@gengmei123.local",[[1,102,"\n"]],[101,101],[102,102]]],[1521772086764,["gengmei_pxf@gengmei123.local",[[-1,102,"\n"],[1,103,"# 对象的应用"]],[102,102],[109,109]]],[1521772087833,["gengmei_pxf@gengmei123.local",[[-1,107,"应用"]],[109,109],[107,107]]],[1521772097331,["gengmei_pxf@gengmei123.local",[[1,107,"引用"]],[107,107],[109,109]]],[1521772097737,["gengmei_pxf@gengmei123.local",[[1,109,"\n\n"]],[109,109],[110,110]]],[1521772098025,["gengmei_pxf@gengmei123.local",[[1,111,"\n"]],[110,110],[111,111]]],[1521772114562,["gengmei_pxf@gengmei123.local",[[-1,111,"\n"],[1,112,"# 缓存机制（）"]],[111,111],[119,119]]],[1521772127779,["gengmei_pxf@gengmei123.local",[[1,118,"LRUCache"]],[118,118],[126,126]]],[1521772190632,[null,[[1,57,"）"],[-1,59,"）"],[1,74,"）"],[-1,76,"）"],[1,91,"）"],[-1,93,"）"]],[57,57],[93,93]]],[1521772190632,[null,[[-1,57,"）"],[1,60,"）"],[-1,74,"）"],[1,77,"）"],[-1,91,"）"],[1,94,"）"]],[93,93],[57,57]]],[1521772131612,["gengmei_pxf@gengmei123.local",[[1,127,"\n\n"]],[127,127],[128,128]]],[1521772131958,["gengmei_pxf@gengmei123.local",[[1,129,"\n"]],[128,128],[129,129]]],[1521772144159,["gengmei_pxf@gengmei123.local",[[-1,129,"\n"],[1,130,"# 图片框架的内存机制（）"]],[129,129],[142,142]]],[1521772148161,["gengmei_pxf@gengmei123.local",[[1,141,"了解，"]],[141,141],[144,144]]],[1521772149348,["gengmei_pxf@gengmei123.local",[[-1,143,"，"]],[144,144],[143,143]]],[1521772160499,["gengmei_pxf@gengmei123.local",[[1,143,"的有哪些，至少说出一种\n\n"]],[143,143],[156,156]]],[1521772160675,["gengmei_pxf@gengmei123.local",[[1,157,"\n"]],[156,156],[157,157]]],[1521772176307,["gengmei_pxf@gengmei123.local",[[-1,157,"\n"],[1,158,"# Android大众"]],[157,157],[168,168]]],[1521772176904,["gengmei_pxf@gengmei123.local",[[-1,166,"大众"]],[168,168],[166,166]]],[1521772182851,["gengmei_pxf@gengmei123.local",[[1,166,"当中的设计模式（）"]],[166,166],[175,175]]],[1521772190254,["gengmei_pxf@gengmei123.local",[[1,174,"自己代码中运用的"]],[174,174],[182,182]]],[1521772250632,[null,[[1,57,"）"],[-1,59,"）"],[1,74,"）"],[-1,76,"）"],[1,91,"）"],[-1,93,"）"],[1,154,"）"],[-1,156,"）"]],[57,57],[156,156]]],[1521772250632,[null,[[-1,57,"）"],[1,60,"）"],[-1,74,"）"],[1,77,"）"],[-1,91,"）"],[1,94,"）"],[-1,154,"）"],[1,157,"）"]],[156,156],[57,57]]],[1521772195099,["gengmei_pxf@gengmei123.local",[[1,182,"设计模式\n\n"]],[182,182],[188,188]]],[1521772195567,["gengmei_pxf@gengmei123.local",[[1,189,"\n"]],[188,188],[189,189]]],[1521772221660,["gengmei_pxf@gengmei123.local",[[-1,189,"\n"],[1,190,"# 文件解析（）"]],[189,189],[197,197]]],[1521772228560,["gengmei_pxf@gengmei123.local",[[1,196,"xml，json\n\n"]],[196,196],[206,206]]],[1521772228746,["gengmei_pxf@gengmei123.local",[[1,207,"\n"]],[206,206],[207,207]]],[1521772229907,["gengmei_pxf@gengmei123.local",[[-1,207,"\n"],[1,208,"# "]],[207,207],[209,209]]],[1521772239042,["gengmei_pxf@gengmei123.local",[[1,206,"（）"]],[206,206],[208,208]]],[1521772243039,["gengmei_pxf@gengmei123.local",[[-1,206,"（）"]],[208,208],[206,206]]],[1521772248734,["gengmei_pxf@gengmei123.local",[[1,206,"## "]],[206,206],[209,209]]],[1521772310634,[null,[[1,57,"）"],[-1,59,"）"],[1,74,"）"],[-1,76,"）"],[1,91,"）"],[-1,93,"）"],[1,154,"）"],[-1,156,"）"],[1,186,"）"],[-1,188,"）"],[-1,204,"\n"],[1,205,"）"],[-1,209,"）"],[1,210,"\n"]],[57,57],[211,211]]],[1521772310634,[null,[[-1,57,"）"],[1,60,"）"],[-1,74,"）"],[1,77,"）"],[-1,91,"）"],[1,94,"）"],[-1,154,"）"],[1,157,"）"],[-1,186,"）"],[1,189,"）"],[1,204,"\n"],[-1,204,"）"],[1,209,"）"],[-1,209,"\n"]],[211,211],[57,57]]],[1521772275527,["gengmei_pxf@gengmei123.local",[[1,209," gson，fastJson的对比"]],[208,208],[225,225]]],[1521772275988,["gengmei_pxf@gengmei123.local",[[1,225,"\n"]],[225,225],[226,226]]],[1521772276163,["gengmei_pxf@gengmei123.local",[[1,226,"\n"]],[226,226],[227,227]]],[1521772296557,["gengmei_pxf@gengmei123.local",[[1,227,"## JsonObject。"]],[227,227],[241,241]]],[1521772298084,["gengmei_pxf@gengmei123.local",[[-1,240,"。"]],[241,241],[240,240]]],[1521772300351,["gengmei_pxf@gengmei123.local",[[1,240,".opt()"]],[240,240],[246,246]]],[1521772300849,["gengmei_pxf@gengmei123.local",[[1,246,"\n"]],[246,246],[247,247]]],[1521772302743,["gengmei_pxf@gengmei123.local",[[-1,246,"\n"]],[247,247],[246,246]]],[1521772307752,["gengmei_pxf@gengmei123.local",[[1,246,",JSON"]],[246,246],[251,251]]],[1521772370633,[null,[[1,57,"）"],[-1,59,"）"],[1,74,"）"],[-1,76,"）"],[1,91,"）"],[-1,93,"）"],[1,154,"）"],[-1,156,"）"],[1,186,"）"],[-1,188,"）"],[-1,204,"\n"],[1,205,"）"],[-1,209," "],[1,225,"比"],[-1,251,"比）"],[1,253," \n"]],[57,57],[255,255]]],[1521772370633,[null,[[-1,57,"）"],[1,60,"）"],[-1,74,"）"],[1,77,"）"],[-1,91,"）"],[1,94,"）"],[-1,154,"）"],[1,157,"）"],[-1,186,"）"],[1,189,"）"],[1,204,"\n"],[-1,204,"）"],[1,209," "],[-1,224,"比"],[1,251,"比）"],[-1,251," \n"]],[255,255],[57,57]]],[1521772317752,["gengmei_pxf@gengmei123.local",[[1,251,"Object.get()"]],[251,251],[263,263]]],[1521772320755,["gengmei_pxf@gengmei123.local",[[-1,230,"Json"]],[234,234],[230,230]]],[1521772321983,["gengmei_pxf@gengmei123.local",[[1,230,"JSON"]],[230,230],[234,234]]],[1521772324515,["gengmei_pxf@gengmei123.local",[[1,265,"\n"]],[265,265],[266,266]]],[1521772338092,["gengmei_pxf@gengmei123.local",[[1,267,"# JSONObjectyu"]],[267,267],[281,281]]],[1521772339172,["gengmei_pxf@gengmei123.local",[[-1,279,"yu"]],[281,281],[279,279]]],[1521772343109,["gengmei_pxf@gengmei123.local",[[1,279,"与JSONArray"]],[279,279],[289,289]]],[1521772343570,["gengmei_pxf@gengmei123.local",[[1,289,"\n"]],[289,289],[290,290]]],[1521772343891,["gengmei_pxf@gengmei123.local",[[1,290,"\n"]],[290,290],[291,291]]],[1521772363364,["gengmei_pxf@gengmei123.local",[[1,291,"# 面向对象的立即"]],[291,291],[300,300]]],[1521772364386,["gengmei_pxf@gengmei123.local",[[-1,298,"立即"]],[300,300],[298,298]]],[1521772366276,["gengmei_pxf@gengmei123.local",[[1,298,"理解（）"]],[298,298],[302,302]]],[1521772370117,["gengmei_pxf@gengmei123.local",[[1,301,"封装，"]],[301,301],[304,304]]],[1521772430633,[null,[[1,57,"）"],[-1,59,"）"],[1,74,"）"],[-1,76,"）"],[1,91,"）"],[-1,93,"）"],[1,154,"）"],[-1,156,"）"],[1,186,"）"],[-1,188,"）"],[-1,204,"\n"],[1,205,"）"],[-1,209," "],[1,225,"比"],[-1,263,"比）"],[1,265," \n"]],[57,57],[267,267]]],[1521772430633,[null,[[-1,57,"）"],[1,60,"）"],[-1,74,"）"],[1,77,"）"],[-1,91,"）"],[1,94,"）"],[-1,154,"）"],[1,157,"）"],[-1,186,"）"],[1,189,"）"],[1,204,"\n"],[-1,204,"）"],[1,209," "],[-1,224,"比"],[1,263,"比）"],[-1,263," \n"]],[267,267],[57,57]]],[1521772373981,["gengmei_pxf@gengmei123.local",[[1,304,"继承，多台"]],[304,304],[309,309]]],[1521772375282,["gengmei_pxf@gengmei123.local",[[-1,307,"多台"]],[309,309],[307,307]]],[1521772382685,["gengmei_pxf@gengmei123.local",[[1,307,"多肽"]],[307,307],[309,309]]],[1521772384125,["gengmei_pxf@gengmei123.local",[[-1,307,"多肽"]],[309,309],[307,307]]],[1521772387644,["gengmei_pxf@gengmei123.local",[[1,307,"多肽"]],[307,307],[309,309]]],[1521772388562,["gengmei_pxf@gengmei123.local",[[-1,307,"多肽"]],[309,309],[307,307]]],[1521772391044,["gengmei_pxf@gengmei123.local",[[1,307,"多态"]],[307,307],[309,309]]],[1521772394761,["gengmei_pxf@gengmei123.local",[[1,310,"\n"]],[310,310],[311,311]]],[1521772395457,["gengmei_pxf@gengmei123.local",[[1,311,"\n"]],[311,311],[312,312]]],[1521772409971,["gengmei_pxf@gengmei123.local",[[1,312,"## interface 与 abstract"]],[312,312],[335,335]]],[1521772412113,["gengmei_pxf@gengmei123.local",[[1,335,"\n"]],[335,335],[336,336]]],[1521772412688,["gengmei_pxf@gengmei123.local",[[1,336,"\n"]],[336,336],[337,337]]],[1521772413722,["gengmei_pxf@gengmei123.local",[[1,337,"## "]],[337,337],[340,340]]],[1521772420481,["gengmei_pxf@gengmei123.local",[[-1,337,"## "]],[340,340],[337,337]]],[1521772422498,["gengmei_pxf@gengmei123.local",[[1,337,"* "]],[337,337],[339,339]]],[1521772424152,["gengmei_pxf@gengmei123.local",[[-1,337,"* "]],[339,339],[337,337]]],[1521772426120,["gengmei_pxf@gengmei123.local",[[1,337,"··"]],[337,337],[339,339]]],[1521772427050,["gengmei_pxf@gengmei123.local",[[-1,337,"··"]],[339,339],[337,337]]],[1521772428266,["gengmei_pxf@gengmei123.local",[[1,337,"```"]],[337,337],[340,340]]],[1521772428640,["gengmei_pxf@gengmei123.local",[[1,340,"\n"]],[340,340],[341,341]]],[1521772428824,["gengmei_pxf@gengmei123.local",[[1,341,"\n"]],[341,341],[342,342]]],[1521772429490,["gengmei_pxf@gengmei123.local",[[1,342,"```"]],[342,342],[345,345]]],[1521772490635,[null,[[1,57,"）"],[-1,59,"）"],[1,74,"）"],[-1,76,"）"],[1,91,"）"],[-1,93,"）"],[1,154,"）"],[-1,156,"）"],[1,186,"）"],[-1,188,"）"],[-1,204,"\n"],[1,205,"）"],[-1,209," "],[1,225,"比"],[-1,263,"比）"],[1,265," \n"]],[57,57],[267,267]]],[1521772490635,[null,[[-1,57,"）"],[1,60,"）"],[-1,74,"）"],[1,77,"）"],[-1,91,"）"],[1,94,"）"],[-1,154,"）"],[1,157,"）"],[-1,186,"）"],[1,189,"）"],[1,204,"\n"],[-1,204,"）"],[1,209," "],[-1,224,"比"],[1,263,"比）"],[-1,263," \n"]],[267,267],[57,57]]],[1521772440240,["gengmei_pxf@gengmei123.local",[[1,341,"Interface A{"]],[341,341],[353,353]]],[1521772440904,["gengmei_pxf@gengmei123.local",[[1,354,"\n"]],[353,353],[354,354]]],[1521772442735,["gengmei_pxf@gengmei123.local",[[1,355,"\n"]],[354,354],[355,355]]],[1521772443113,["gengmei_pxf@gengmei123.local",[[1,355,"}"]],[355,355],[356,356]]],[1521772457273,["gengmei_pxf@gengmei123.local",[[1,354,"\tString a=\"\""]],[354,354],[366,366]]],[1521772458520,["gengmei_pxf@gengmei123.local",[[1,365,"a"]],[365,365],[366,366]]],[1521772459503,["gengmei_pxf@gengmei123.local",[[1,367,";"]],[367,367],[368,368]]],[1521772461911,["gengmei_pxf@gengmei123.local",[[1,371,"\n"]],[370,370],[371,371]]],[1521772462525,["gengmei_pxf@gengmei123.local",[[1,372,"\n"]],[371,371],[372,372]]],[1521772466780,["gengmei_pxf@gengmei123.local",[[1,372,"class"]],[372,372],[377,377]]],[1521772467891,["gengmei_pxf@gengmei123.local",[[-1,372,"class"]],[377,377],[372,372]]],[1521772476603,["gengmei_pxf@gengmei123.local",[[1,372,"Class B implement a"]],[372,372],[391,391]]],[1521772477157,["gengmei_pxf@gengmei123.local",[[-1,390,"a"]],[391,391],[390,390]]],[1521772478181,["gengmei_pxf@gengmei123.local",[[1,390,"A{"]],[390,390],[392,392]]],[1521772478490,["gengmei_pxf@gengmei123.local",[[1,393,"\n"]],[392,392],[393,393]]],[1521772479698,["gengmei_pxf@gengmei123.local",[[1,394,"\n"]],[393,393],[394,394]]],[1521772480028,["gengmei_pxf@gengmei123.local",[[1,394,"}"]],[394,394],[395,395]]],[1521772481690,["gengmei_pxf@gengmei123.local",[[1,393,"\t"]],[393,393],[394,394]]],[1521772550633,[null,[[1,57,"）"],[-1,59,"）"],[1,74,"）"],[-1,76,"）"],[1,91,"）"],[-1,93,"）"],[1,154,"）"],[-1,156,"）"],[1,186,"）"],[-1,188,"）"],[-1,204,"\n"],[1,205,"）"],[-1,209," "],[1,225,"比"],[-1,263,"比）"],[1,265," \n"]],[57,57],[267,267]]],[1521772550633,[null,[[-1,57,"）"],[1,60,"）"],[-1,74,"）"],[1,77,"）"],[-1,91,"）"],[1,94,"）"],[-1,154,"）"],[1,157,"）"],[-1,186,"）"],[1,189,"）"],[1,204,"\n"],[-1,204,"）"],[1,209," "],[-1,224,"比"],[1,263,"比）"],[-1,263," \n"]],[267,267],[57,57]]],[1521772509439,["gengmei_pxf@gengmei123.local",[[1,394,"String "]],[394,394],[401,401]]],[1521772511660,["gengmei_pxf@gengmei123.local",[[-1,362,"a"]],[363,363],[362,362]]],[1521772512308,["gengmei_pxf@gengmei123.local",[[1,362,"str"]],[362,362],[365,365]]],[1521772516178,["gengmei_pxf@gengmei123.local",[[1,403,"str=\"\""]],[403,403],[409,409]]],[1521772517172,["gengmei_pxf@gengmei123.local",[[1,408,"b"]],[408,408],[409,409]]],[1521772518421,["gengmei_pxf@gengmei123.local",[[1,410,";"]],[410,410],[411,411]]],[1521772519523,["gengmei_pxf@gengmei123.local",[[1,414,"\n"]],[413,413],[414,414]]],[1521772519858,["gengmei_pxf@gengmei123.local",[[1,415,"\n"]],[414,414],[415,415]]],[1521772523379,["gengmei_pxf@gengmei123.local",[[1,415,"ch"]],[415,415],[417,417]]],[1521772524050,["gengmei_pxf@gengmei123.local",[[-1,415,"ch"]],[417,417],[415,415]]],[1521772525597,["gengmei_pxf@gengmei123.local",[[1,415,"输出"]],[415,415],[417,417]]],[1521772537764,["gengmei_pxf@gengmei123.local",[[1,414,"B b=new B();"]],[414,414],[426,426]]],[1521772549643,["gengmei_pxf@gengmei123.local",[[1,429," b.str"]],[429,429],[435,435]]],[1521772562456,[null,[[1,57,"）"],[-1,59,"）"],[1,74,"）"],[-1,76,"）"],[1,91,"）"],[-1,93,"）"],[1,154,"）"],[-1,156,"）"],[1,186,"）"],[-1,188,"）"],[-1,204,"\n"],[1,205,"）"],[-1,209," "],[1,225,"比"],[-1,263,"比）"],[1,265," \n"]],[57,57],[267,267]]],[1521772562456,[null,[[-1,57,"）"],[1,60,"）"],[-1,74,"）"],[1,77,"）"],[-1,91,"）"],[1,94,"）"],[-1,154,"）"],[1,157,"）"],[-1,186,"）"],[1,189,"）"],[1,204,"\n"],[-1,204,"）"],[1,209," "],[-1,224,"比"],[1,263,"比）"],[-1,263," \n"]],[267,267],[57,57]]],[1521772552416,["gengmei_pxf@gengmei123.local",[[1,435,"he "]],[435,435],[438,438]]],[1521772554254,["gengmei_pxf@gengmei123.local",[[-1,435,"he "]],[438,438],[435,435]]],[1521772557716,["gengmei_pxf@gengmei123.local",[[1,435,"和B。"]],[435,435],[438,438]]],[1521772558380,["gengmei_pxf@gengmei123.local",[[-1,437,"。"]],[438,438],[437,437]]],[1521772561106,["gengmei_pxf@gengmei123.local",[[1,437,".str"]],[437,437],[441,441]]],[1521772622453,[null,[[1,57,"）"],[-1,59,"）"],[1,74,"）"],[-1,76,"）"],[1,91,"）"],[-1,93,"）"],[1,154,"）"],[-1,156,"）"],[1,186,"）"],[-1,188,"）"],[-1,204,"\n"],[1,205,"）"],[-1,209," "],[1,225,"比"],[-1,263,"比）"],[1,265," \n"]],[57,57],[267,267]]],[1521772622453,[null,[[-1,57,"）"],[1,60,"）"],[-1,74,"）"],[1,77,"）"],[-1,91,"）"],[1,94,"）"],[-1,154,"）"],[1,157,"）"],[-1,186,"）"],[1,189,"）"],[1,204,"\n"],[-1,204,"）"],[1,209," "],[-1,224,"比"],[1,263,"比）"],[-1,263," \n"]],[267,267],[57,57]]],[1521772564180,["gengmei_pxf@gengmei123.local",[[1,446,"\n\n"]],[446,446],[447,447]]],[1521772564381,["gengmei_pxf@gengmei123.local",[[1,448,"\n"]],[447,447],[448,448]]],[1521772567171,["gengmei_pxf@gengmei123.local",[[-1,448,"\n"],[1,449,"# "]],[448,448],[450,450]]],[1521772572409,["gengmei_pxf@gengmei123.local",[[-1,354,"\t"]],[355,355],[354,354]]],[1521772574781,["gengmei_pxf@gengmei123.local",[[1,354,"  "]],[354,354],[356,356]]],[1521772576921,["gengmei_pxf@gengmei123.local",[[-1,396,"\t"]],[397,397],[396,396]]],[1521772577602,["gengmei_pxf@gengmei123.local",[[1,396,"  "]],[396,396],[398,398]]],[1521772591591,["gengmei_pxf@gengmei123.local",[[1,452,"Viewd"]],[452,452],[457,457]]],[1521772592183,["gengmei_pxf@gengmei123.local",[[-1,456,"d"]],[457,457],[456,456]]],[1521772596083,["gengmei_pxf@gengmei123.local",[[1,456,"的挥之即止"]],[456,456],[461,461]]],[1521772597135,["gengmei_pxf@gengmei123.local",[[-1,457,"挥之即止"]],[461,461],[457,457]]],[1521772599875,["gengmei_pxf@gengmei123.local",[[1,457,"绘制机制"]],[457,457],[461,461]]],[1521772601216,["gengmei_pxf@gengmei123.local",[[1,461,"\n\n"]],[461,461],[462,462]]],[1521772601527,["gengmei_pxf@gengmei123.local",[[1,463,"\n"]],[462,462],[463,463]]],[1521772614922,["gengmei_pxf@gengmei123.local",[[-1,463,"\n"],[1,464,"# View的时间机制"]],[463,463],[474,474]]],[1521772616999,["gengmei_pxf@gengmei123.local",[[-1,470,"时间"]],[472,472],[470,470]]],[1521772619111,["gengmei_pxf@gengmei123.local",[[1,470,"事件"]],[470,470],[472,472]]],[1521772620503,["gengmei_pxf@gengmei123.local",[[1,474,"\n\n"]],[474,474],[475,475]]],[1521772682451,[null,[[1,57,"）"],[-1,59,"）"],[1,74,"）"],[-1,76,"）"],[1,91,"）"],[-1,93,"）"],[1,154,"）"],[-1,156,"）"],[1,186,"）"],[-1,188,"）"],[-1,204,"\n"],[1,205,"）"],[-1,209," "],[1,225,"比"],[-1,263,"比）"],[1,265," \n"]],[57,57],[267,267]]],[1521772682451,[null,[[-1,57,"）"],[1,60,"）"],[-1,74,"）"],[1,77,"）"],[-1,91,"）"],[1,94,"）"],[-1,154,"）"],[1,157,"）"],[-1,186,"）"],[1,189,"）"],[1,204,"\n"],[-1,204,"）"],[1,209," "],[-1,224,"比"],[1,263,"比）"],[-1,263," \n"]],[267,267],[57,57]]],[1521772682420,["gengmei_pxf@gengmei123.local",[[-1,475,"\n"],[1,476," 统计用户所有的触屏事件（）"]],[475,475],[489,489]]],[1521772742452,[null,[[1,57,"）"],[-1,59,"）"],[1,74,"）"],[-1,76,"）"],[1,91,"）"],[-1,93,"）"],[1,154,"）"],[-1,156,"）"],[1,186,"）"],[-1,188,"）"],[-1,204,"\n"],[1,205,"）"],[-1,209," "],[1,225,"比"],[-1,263,"比）"],[1,265," \n"]],[57,57],[267,267]]],[1521772742452,[null,[[-1,57,"）"],[1,60,"）"],[-1,74,"）"],[1,77,"）"],[-1,91,"）"],[1,94,"）"],[-1,154,"）"],[1,157,"）"],[-1,186,"）"],[1,189,"）"],[1,204,"\n"],[-1,204,"）"],[1,209," "],[-1,224,"比"],[1,263,"比）"],[-1,263," \n"]],[267,267],[57,57]]],[1521772693928,["gengmei_pxf@gengmei123.local",[[1,488,"点击，触摸，滑动等\n\n"]],[488,488],[499,499]]],[1521772694231,["gengmei_pxf@gengmei123.local",[[1,500,"\n"]],[499,499],[500,500]]],[1521772695832,["gengmei_pxf@gengmei123.local",[[-1,500,"\n"],[1,501,"# "]],[500,500],[502,502]]],[1521772802455,[null,[[1,57,"）"],[-1,59,"）"],[1,74,"）"],[-1,76,"）"],[1,91,"）"],[-1,93,"）"],[1,154,"）"],[-1,156,"）"],[1,186,"）"],[-1,188,"）"],[-1,204,"\n"],[1,205,"）"],[-1,209," "],[1,225,"比"],[-1,263,"比）"],[1,265," \n"],[1,497,"）"],[-1,499,"）"]],[57,57],[499,499]]],[1521772802455,[null,[[-1,57,"）"],[1,60,"）"],[-1,74,"）"],[1,77,"）"],[-1,91,"）"],[1,94,"）"],[-1,154,"）"],[1,157,"）"],[-1,186,"）"],[1,189,"）"],[1,204,"\n"],[-1,204,"）"],[1,209," "],[-1,224,"比"],[1,263,"比）"],[-1,263," \n"],[-1,497,"）"],[1,500,"）"]],[499,499],[57,57]]],[1521772793410,["gengmei_pxf@gengmei123.local",[[1,502,"数据加密算法（）"]],[502,502],[510,510]]],[1521772800042,["gengmei_pxf@gengmei123.local",[[1,509,"base64，md5，"]],[509,509],[520,520]]],[1521772862456,[null,[[1,57,"）"],[-1,59,"）"],[1,74,"）"],[-1,76,"）"],[1,91,"）"],[-1,93,"）"],[1,154,"）"],[-1,156,"）"],[1,186,"）"],[-1,188,"）"],[-1,204,"\n"],[1,205,"）"],[-1,209," "],[1,225,"比"],[-1,263,"比）"],[1,265," \n"],[1,497,"）"],[-1,499,"）"]],[57,57],[499,499]]],[1521772862456,[null,[[-1,57,"）"],[1,60,"）"],[-1,74,"）"],[1,77,"）"],[-1,91,"）"],[1,94,"）"],[-1,154,"）"],[1,157,"）"],[-1,186,"）"],[1,189,"）"],[1,204,"\n"],[-1,204,"）"],[1,209," "],[-1,224,"比"],[1,263,"比）"],[-1,263," \n"],[-1,497,"）"],[1,500,"）"]],[499,499],[57,57]]],[1521772812473,["gengmei_pxf@gengmei123.local",[[1,520,"aes，res\n\n"]],[520,520],[529,529]]],[1521772812905,["gengmei_pxf@gengmei123.local",[[1,530,"\n"]],[529,529],[530,530]]],[1521772826353,["gengmei_pxf@gengmei123.local",[[-1,530,"\n"],[1,531,"# git版本控制"]],[530,530],[539,539]]],[1521772826834,["gengmei_pxf@gengmei123.local",[[1,539,"\n\n"]],[539,539],[540,540]]],[1521772827110,["gengmei_pxf@gengmei123.local",[[1,541,"\n"]],[540,540],[541,541]]],[1521772836035,["gengmei_pxf@gengmei123.local",[[-1,541,"\n"],[1,542,"# 混合开发"]],[541,541],[547,547]]],[1521772839955,["gengmei_pxf@gengmei123.local",[[1,547,"\n\n"]],[547,547],[548,548]]],[1521772840170,["gengmei_pxf@gengmei123.local",[[1,549,"\n"]],[548,548],[549,549]]],[1521772840921,["gengmei_pxf@gengmei123.local",[[-1,549,"\n"],[1,550,"￥"]],[549,549],[550,550]]],[1521772841500,["gengmei_pxf@gengmei123.local",[[-1,549,"￥"]],[550,550],[549,549]]],[1521772842338,["gengmei_pxf@gengmei123.local",[[-1,548,"\n"],[1,549,"# "]],[549,549],[550,550]]],[1521772843938,["gengmei_pxf@gengmei123.local",[[1,548,"\n"]],[548,548],[549,549]]],[1521772861327,["gengmei_pxf@gengmei123.local",[[1,551," 组件开发整个"]],[550,550],[557,557]]],[1521772922457,[null,[[1,57,"）"],[-1,59,"）"],[1,74,"）"],[-1,76,"）"],[1,91,"）"],[-1,93,"）"],[1,154,"）"],[-1,156,"）"],[1,186,"）"],[-1,188,"）"],[-1,204,"\n"],[1,205,"）"],[-1,209," "],[1,225,"比"],[-1,263,"比）"],[1,265," \n"],[1,497,"）"],[-1,499,"）"],[1,527,"）"],[-1,529,"）"],[-1,551," "],[1,558," "]],[57,57],[559,559]]],[1521772922457,[null,[[-1,57,"）"],[1,60,"）"],[-1,74,"）"],[1,77,"）"],[-1,91,"）"],[1,94,"）"],[-1,154,"）"],[1,157,"）"],[-1,186,"）"],[1,189,"）"],[1,204,"\n"],[-1,204,"）"],[1,209," "],[-1,224,"比"],[1,263,"比）"],[-1,263," \n"],[-1,497,"）"],[1,500,"）"],[-1,527,"）"],[1,530,"）"],[1,551," "],[-1,557," "]],[559,559],[57,57]]],[1521772865775,["gengmei_pxf@gengmei123.local",[[1,557,"机构图"]],[557,557],[560,560]]],[1521772866133,["gengmei_pxf@gengmei123.local",[[1,560,"\n"]],[560,560],[561,561]]],[1521772866736,["gengmei_pxf@gengmei123.local",[[-1,560,"\n"]],[561,561],[560,560]]],[1521772867220,["gengmei_pxf@gengmei123.local",[[-1,557,"机构图"]],[560,560],[557,557]]],[1521772869911,["gengmei_pxf@gengmei123.local",[[1,557,"架构图"]],[557,557],[560,560]]],[1521772870251,["gengmei_pxf@gengmei123.local",[[1,560,"\n"]],[560,560],[561,561]]],[1521772870426,["gengmei_pxf@gengmei123.local",[[1,561,"\n"]],[561,561],[562,562]]],[1521772871460,["gengmei_pxf@gengmei123.local",[[1,562,"# "]],[562,562],[564,564]]],[1521772915670,["gengmei_pxf@gengmei123.local",[[-1,291,"# 面向对象的理解（封装，继承，多态）\n\n## interface 与 abstract\n\n```\nInterface A{\n  String str=\"a\";\n}\n\nClass B implement A{\n  String str=\"b\";\n}\nB b=new B();\n输出 b.str和B.str\n``` "]],[291,448],[291,291]]],[1521772916954,["gengmei_pxf@gengmei123.local",[[-1,292,"\n"]],[291,291],[290,290]]],[1521772917810,["gengmei_pxf@gengmei123.local",[[-1,291,"\n"]],[290,290],[289,289]]],[1521772920401,["gengmei_pxf@gengmei123.local",[[1,11,"\n"]],[10,10],[11,11]]],[1521772920611,["gengmei_pxf@gengmei123.local",[[1,12,"\n"]],[11,11],[12,12]]],[1521772922315,["gengmei_pxf@gengmei123.local",[[1,11,"# 面向对象的理解（封装，继承，多态）\n\n## interface 与 abstract\n\n```\nInterface A{\n  String str=\"a\";\n}\n\nClass B implement A{\n  String str=\"b\";\n}\nB b=new B();\n输出 b.str和B.str\n``` "]],[11,11],[168,168]]],[1521772982459,[null,[[1,216,"）"],[-1,218,"）"],[1,233,"）"],[-1,235,"）"],[1,250,"）"],[-1,252,"）"],[1,313,"）"],[-1,315,"）"],[1,345,"）"],[-1,347,"）"],[-1,363,"\n"],[1,364,"）"],[-1,367," "],[1,384,"比"],[-1,422,"比）"],[1,424," \n"],[1,497,"）"],[-1,499,"）"],[1,527,"）"],[-1,529,"）"],[-1,551," "],[1,557,"个"],[-1,564,"个"],[1,565," "]],[216,216],[566,566]]],[1521772982459,[null,[[-1,216,"）"],[1,219,"）"],[-1,233,"）"],[1,236,"）"],[-1,250,"）"],[1,253,"）"],[-1,313,"）"],[1,316,"）"],[-1,345,"）"],[1,348,"）"],[1,363,"\n"],[-1,363,"）"],[1,367," "],[-1,383,"比"],[1,422,"比）"],[-1,422," \n"],[-1,497,"）"],[1,500,"）"],[-1,527,"）"],[1,530,"）"],[1,551," "],[-1,556,"个"],[1,564,"个"],[-1,564," "]],[566,566],[216,216]]],[1521772932541,["gengmei_pxf@gengmei123.local",[[-1,219,"# 单例（为什么会有并发问题）\n\n# 锁（类锁，对象锁，方法锁）\n\n# 垃圾回收\n\n# 对象的引用"]],[219,268],[219,219]]],[1521772934913,["gengmei_pxf@gengmei123.local",[[1,170,"\n"]],[169,169],[170,170]]],[1521772935216,["gengmei_pxf@gengmei123.local",[[1,171,"\n"]],[170,170],[171,171]]],[1521772936076,["gengmei_pxf@gengmei123.local",[[1,170,"# 单例（为什么会有并发问题）\n\n# 锁（类锁，对象锁，方法锁）\n\n# 垃圾回收\n\n# 对象的引用"]],[170,170],[219,219]]],[1521772938217,["gengmei_pxf@gengmei123.local",[[-1,271,"\n"]],[271,271],[270,270]]],[1521772938594,["gengmei_pxf@gengmei123.local",[[-1,270,"\n"]],[270,270],[269,269]]],[1521772943002,["gengmei_pxf@gengmei123.local",[[-1,348,"# 文件解析（xml，json）\n## gson，fastJson的对比\n\n## JSONObject.opt(),JSONObject.get() \n\n## JSONObject与JSONArray"]],[348,448],[348,348]]],[1521772943431,["gengmei_pxf@gengmei123.local",[[-1,349,"\n"]],[348,348],[347,347]]],[1521772943674,["gengmei_pxf@gengmei123.local",[[-1,348,"\n"]],[347,347],[346,346]]],[1521772947455,["gengmei_pxf@gengmei123.local",[[1,221,"\n"]],[219,219],[220,220]]],[1521772947657,["gengmei_pxf@gengmei123.local",[[1,222,"\n"]],[220,220],[221,221]]],[1521772948218,["gengmei_pxf@gengmei123.local",[[1,221,"# 文件解析（xml，json）\n## gson，fastJson的对比\n\n## JSONObject.opt(),JSONObject.get() \n\n## JSONObject与JSONArray"]],[221,221],[321,321]]],[1521772955243,["gengmei_pxf@gengmei123.local",[[-1,500,"# 数据加密算法（base64，md5，aes，res）"]],[500,528],[500,500]]],[1521772955840,["gengmei_pxf@gengmei123.local",[[-1,501,"\n"]],[500,500],[499,499]]],[1521772956281,["gengmei_pxf@gengmei123.local",[[-1,500,"\n"]],[499,499],[498,498]]],[1521772961944,["gengmei_pxf@gengmei123.local",[[1,532,"\n"]],[530,530],[531,531]]],[1521772962129,["gengmei_pxf@gengmei123.local",[[1,533,"\n"]],[531,531],[532,532]]],[1521772962584,["gengmei_pxf@gengmei123.local",[[1,532,"# 数据加密算法（base64，md5，aes，res）"]],[532,532],[560,560]]],[1521772973040,["gengmei_pxf@gengmei123.local",[[1,201,"，"]],[201,201],[202,202]]],[1521773042459,[null,[[1,370,"）"],[-1,372,"）"],[1,416,"）"],[-1,418,"）"],[1,448,"）"],[-1,450,"）"],[1,498,"）"],[-1,500,"）"],[-1,522," "],[1,528,"个"],[-1,565,"个"],[1,566," "]],[370,370],[567,567]]],[1521773042459,[null,[[-1,370,"）"],[1,373,"）"],[-1,416,"）"],[1,419,"）"],[-1,448,"）"],[1,451,"）"],[-1,498,"）"],[1,501,"）"],[1,522," "],[-1,527,"个"],[1,565,"个"],[-1,565," "]],[567,567],[370,370]]],[1521773005493,["gengmei_pxf@gengmei123.local",[[1,202,"wait，notify，notifyAll"]],[202,202],[223,223]]],[1521773013578,["gengmei_pxf@gengmei123.local",[[1,207,"sleep，"]],[207,207],[213,213]]],[1521773028195,["gengmei_pxf@gengmei123.local",[[1,528,"\n"]],[526,526],[527,527]]],[1521773028355,["gengmei_pxf@gengmei123.local",[[1,529,"\n"]],[527,527],[528,528]]],[1521773037181,["gengmei_pxf@gengmei123.local",[[1,528,"# Handler机制（）"]],[528,528],[541,541]]],[1521773041232,["gengmei_pxf@gengmei123.local",[[1,540,"子线程给"]],[540,540],[544,544]]],[1521773102455,[null,[[1,397,"）"],[-1,399,"）"],[1,443,"）"],[-1,445,"）"],[1,475,"）"],[-1,477,"）"],[1,525,"）"],[-1,527,"）"],[-1,568," "],[1,574,"个"],[-1,611,"个"],[1,612," "]],[397,397],[613,613]]],[1521773102455,[null,[[-1,397,"）"],[1,400,"）"],[-1,443,"）"],[1,446,"）"],[-1,475,"）"],[1,478,"）"],[-1,525,"）"],[1,528,"）"],[1,568," "],[-1,573,"个"],[1,611,"个"],[-1,611," "]],[613,613],[397,397]]],[1521773062068,["gengmei_pxf@gengmei123.local",[[1,544,"主线程发消息，主线程给子线程发消息"]],[544,544],[561,561]]],[1521773522988,[null,[[1,397,"）"],[-1,399,"）"],[1,443,"）"],[-1,445,"）"],[1,475,"）"],[-1,477,"）"],[1,525,"）"],[-1,527,"）"],[-1,585," "],[1,591,"个"],[-1,628,"个"],[1,629," "]],[397,397],[630,630]]],[1521773522988,[null,[[-1,397,"）"],[1,400,"）"],[-1,443,"）"],[1,446,"）"],[-1,475,"）"],[1,478,"）"],[-1,525,"）"],[1,528,"）"],[1,585," "],[-1,590,"个"],[1,628,"个"],[-1,628," "]],[630,630],[397,397]]],[1521773499020,["gengmei_pxf@gengmei123.local",[[-1,0,"面试总结"],[1,4,"m"]],[0,4],[0,1]]],[1521773499211,["gengmei_pxf@gengmei123.local",[[1,1,"'s"]],[0,1],[0,3]]],[1521773499458,["gengmei_pxf@gengmei123.local",[[-1,1,"'"]],[0,3],[2,2]]],[1521773503898,["gengmei_pxf@gengmei123.local",[[-1,626," "]],[627,627],[626,626]]],[1521773506572,["gengmei_pxf@gengmei123.local",[[1,626," http"]],[626,626],[631,631]]],[1521773515967,["gengmei_pxf@gengmei123.local",[[-1,627,"http"],[1,631,"# Android的HTTP请求方式"]],[627,631],[645,645]]],[1521773519577,["gengmei_pxf@gengmei123.local",[[-1,626," # "]],[629,629],[626,626]]],[1521773521345,["gengmei_pxf@gengmei123.local",[[1,642,"\n\n"]],[642,642],[643,643]]],[1521773521489,["gengmei_pxf@gengmei123.local",[[1,644,"\n"]],[643,643],[644,644]]],[1521773582982,[null,[[1,395,"）"],[-1,397,"）"],[1,441,"）"],[-1,443,"）"],[1,473,"）"],[-1,475,"）"],[1,523,"）"],[-1,525,"）"],[-1,583," "],[1,589,"个"]],[395,395],[590,590]]],[1521773582982,[null,[[-1,395,"）"],[1,398,"）"],[-1,441,"）"],[1,444,"）"],[-1,473,"）"],[1,476,"）"],[-1,523,"）"],[1,526,"）"],[1,583," "],[-1,588,"个"]],[590,590],[395,395]]],[1521773543683,["gengmei_pxf@gengmei123.local",[[1,643,"* post请求get请求"]],[643,643],[656,656]]],[1521773544488,["gengmei_pxf@gengmei123.local",[[1,658,"\n"]],[656,656],[657,657]]],[1521773544672,["gengmei_pxf@gengmei123.local",[[1,659,"\n"]],[657,657],[658,658]]],[1521773556130,["gengmei_pxf@gengmei123.local",[[1,658,"# "]],[658,658],[660,660]]],[1521773642983,[null,[[1,395,"）"],[-1,397,"）"],[1,441,"）"],[-1,443,"）"],[1,473,"）"],[-1,475,"）"],[1,523,"）"],[-1,525,"）"],[-1,583," "],[1,589,"个"]],[395,395],[590,590]]],[1521773642983,[null,[[-1,395,"）"],[1,398,"）"],[-1,441,"）"],[1,444,"）"],[-1,473,"）"],[1,476,"）"],[-1,523,"）"],[1,526,"）"],[1,583," "],[-1,588,"个"]],[590,590],[395,395]]],[1521773624617,["gengmei_pxf@gengmei123.local",[[1,559,"，Handler，L哦哦破二"]],[559,559],[573,573]]],[1521773626494,["gengmei_pxf@gengmei123.local",[[-1,568,"L哦哦破二"]],[573,573],[568,568]]],[1521773640326,["gengmei_pxf@gengmei123.local",[[1,568,"Looper,Message,Theard"]],[568,568],[589,589]]],[1521773702982,[null,[[1,395,"）"],[-1,397,"）"],[1,441,"）"],[-1,443,"）"],[1,473,"）"],[-1,475,"）"],[1,523,"）"],[-1,525,"）"],[-1,613," "],[1,619,"个"]],[395,395],[620,620]]],[1521773702982,[null,[[-1,395,"）"],[1,398,"）"],[-1,441,"）"],[1,444,"）"],[-1,473,"）"],[1,476,"）"],[-1,523,"）"],[1,526,"）"],[1,613," "],[-1,618,"个"]],[620,620],[395,395]]],[1521773646761,["gengmei_pxf@gengmei123.local",[[-1,586,"ard"]],[589,589],[586,586]]],[1521773651394,["gengmei_pxf@gengmei123.local",[[1,586,"ardLocal"]],[586,586],[594,594]]],[1521773691628,["gengmei_pxf@gengmei123.local",[[1,695,"Retrofit "]],[695,695],[704,704]]],[1521773693042,["gengmei_pxf@gengmei123.local",[[-1,703," "]],[704,704],[703,703]]],[1521773693867,["gengmei_pxf@gengmei123.local",[[1,703,"yu "]],[703,703],[706,706]]],[1521773695202,["gengmei_pxf@gengmei123.local",[[-1,703,"yu "]],[706,706],[703,703]]],[1521773700539,["gengmei_pxf@gengmei123.local",[[1,703,"与okhttp"]],[703,703],[710,710]]],[1521773701361,["gengmei_pxf@gengmei123.local",[[1,712,"\n"]],[710,710],[711,711]]],[1521773701663,["gengmei_pxf@gengmei123.local",[[1,713,"\n"]],[711,711],[712,712]]],[1521773702930,["gengmei_pxf@gengmei123.local",[[1,712,"#"]],[712,712],[713,713]]],[1521773704540,[null,[[1,395,"）"],[-1,397,"）"],[1,441,"）"],[-1,443,"）"],[1,473,"）"],[-1,475,"）"],[1,523,"）"],[-1,525,"）"],[-1,618," "],[1,624,"个"]],[395,395],[625,625]]],[1521773704540,[null,[[-1,395,"）"],[1,398,"）"],[-1,441,"）"],[1,444,"）"],[-1,473,"）"],[1,476,"）"],[-1,523,"）"],[1,526,"）"],[1,618," "],[-1,623,"个"]],[625,625],[395,395]]],[1521773703298,["gengmei_pxf@gengmei123.local",[[1,713," "]],[713,713],[714,714]]],[1521774724540,[null,[[1,395,"）"],[-1,397,"）"],[1,441,"）"],[-1,443,"）"],[1,473,"）"],[-1,475,"）"],[1,523,"）"],[-1,525,"）"],[-1,618," "],[1,624,"个"]],[395,395],[625,625]]],[1521774724540,[null,[[-1,395,"）"],[1,398,"）"],[-1,441,"）"],[1,444,"）"],[-1,473,"）"],[1,476,"）"],[-1,523,"）"],[1,526,"）"],[1,618," "],[-1,623,"个"]],[625,625],[395,395]]],[1521774690147,["gengmei_pxf@gengmei123.local",[[1,714,"Restful风格是啥"]],[714,714],[725,725]]],[1521774690592,["gengmei_pxf@gengmei123.local",[[1,727,"\n"]],[725,725],[726,726]]],[1521774690872,["gengmei_pxf@gengmei123.local",[[1,728,"\n"]],[726,726],[727,727]]],[1521774715796,["gengmei_pxf@gengmei123.local",[[1,727,"# 讲一个"]],[727,727],[732,732]]],[1521774716834,["gengmei_pxf@gengmei123.local",[[-1,729,"讲一个"]],[732,732],[729,729]]],[1521774724037,["gengmei_pxf@gengmei123.local",[[1,729,"将一个链表"]],[729,729],[734,734]]],[1521774784543,[null,[[1,395,"）"],[-1,397,"）"],[1,441,"）"],[-1,443,"）"],[1,473,"）"],[-1,475,"）"],[1,523,"）"],[-1,525,"）"],[-1,618," "],[1,624,"个"]],[395,395],[625,625]]],[1521774784543,[null,[[-1,395,"）"],[1,398,"）"],[-1,441,"）"],[1,444,"）"],[-1,473,"）"],[1,476,"）"],[-1,523,"）"],[1,526,"）"],[1,618," "],[-1,623,"个"]],[625,625],[395,395]]],[1521774727244,["gengmei_pxf@gengmei123.local",[[1,734,"逆序"]],[734,734],[736,736]]],[1521774727721,["gengmei_pxf@gengmei123.local",[[1,738,"\n"]],[736,736],[737,737]]],[1521774728137,["gengmei_pxf@gengmei123.local",[[1,739,"\n"]],[737,737],[738,738]]],[1521774783527,["gengmei_pxf@gengmei123.local",[[1,738,"# 项目"]],[738,738],[742,742]]],[1521774844530,[null,[[1,395,"）"],[-1,397,"）"],[1,441,"）"],[-1,443,"）"],[1,473,"）"],[-1,475,"）"],[1,523,"）"],[-1,525,"）"],[-1,618," "],[1,624,"个"]],[395,395],[625,625]]],[1521774844530,[null,[[-1,395,"）"],[1,398,"）"],[-1,441,"）"],[1,444,"）"],[-1,473,"）"],[1,476,"）"],[-1,523,"）"],[1,526,"）"],[1,618," "],[-1,623,"个"]],[625,625],[395,395]]],[1521774784877,["gengmei_pxf@gengmei123.local",[[1,743,"的"]],[743,743],[744,744]]],[1521774785754,["gengmei_pxf@gengmei123.local",[[-1,742,"做的"]],[744,744],[742,742]]],[1521774787607,["gengmei_pxf@gengmei123.local",[[1,742,"负责"]],[742,742],[744,744]]],[1521774788356,["gengmei_pxf@gengmei123.local",[[-1,742,"负责"]],[744,744],[742,742]]],[1521774791535,["gengmei_pxf@gengmei123.local",[[1,740,"负责的"]],[740,740],[743,743]]],[1521774793727,["gengmei_pxf@gengmei123.local",[[1,745,"，"]],[745,745],[746,746]]],[1521774796692,["gengmei_pxf@gengmei123.local",[[-1,745,"，"]],[746,746],[745,745]]],[1521774797820,["gengmei_pxf@gengmei123.local",[[1,747,"\n"]],[745,745],[746,746]]],[1521774798492,["gengmei_pxf@gengmei123.local",[[1,748,"\n"]],[746,746],[747,747]]],[1521774802716,["gengmei_pxf@gengmei123.local",[[-1,748,"\n"]],[747,747],[746,746]]],[1521774802916,["gengmei_pxf@gengmei123.local",[[-1,747,"\n"]],[746,746],[745,745]]],[1521774807174,["gengmei_pxf@gengmei123.local",[[1,745,"，遇到的难点"]],[745,745],[751,751]]],[1521774807932,["gengmei_pxf@gengmei123.local",[[1,753,"\n"]],[751,751],[752,752]]],[1521774808179,["gengmei_pxf@gengmei123.local",[[1,754,"\n"]],[752,752],[753,753]]],[1521774809052,["gengmei_pxf@gengmei123.local",[[-1,754,"\n"]],[753,753],[752,752]]],[1521774809789,["gengmei_pxf@gengmei123.local",[[-1,753,"\n"]],[752,752],[751,751]]],[1521774815909,["gengmei_pxf@gengmei123.local",[[1,751,"，解决方案"]],[751,751],[756,756]]],[1521774816426,["gengmei_pxf@gengmei123.local",[[1,758,"\n"]],[756,756],[757,757]]],[1521774816644,["gengmei_pxf@gengmei123.local",[[1,759,"\n"]],[757,757],[758,758]]],[1521774826533,["gengmei_pxf@gengmei123.local",[[1,758,"# 开放性问题"]],[758,758],[765,765]]],[1521774827139,["gengmei_pxf@gengmei123.local",[[1,767,"\n"]],[765,765],[766,766]]],[1521774828163,["gengmei_pxf@gengmei123.local",[[1,768,"\n"]],[766,766],[767,767]]],[1521774843381,["gengmei_pxf@gengmei123.local",[[1,767,"## 有一个深圳的"]],[767,767],[776,776]]],[1521774904531,[null,[[1,395,"）"],[-1,397,"）"],[1,441,"）"],[-1,443,"）"],[1,473,"）"],[-1,475,"）"],[1,523,"）"],[-1,525,"）"],[-1,618," "],[1,624,"个"]],[395,395],[625,625]]],[1521774904531,[null,[[-1,395,"）"],[1,398,"）"],[-1,441,"）"],[1,444,"）"],[-1,473,"）"],[1,476,"）"],[-1,523,"）"],[1,526,"）"],[1,618," "],[-1,623,"个"]],[625,625],[395,395]]],[1521774873900,["gengmei_pxf@gengmei123.local",[[1,776,"号，有一个朋友在上海，你来到北京，为啥他还能和你打电话通信"]],[776,776],[805,805]]],[1521774874449,["gengmei_pxf@gengmei123.local",[[1,807,"\n"]],[805,805],[806,806]]],[1521774874769,["gengmei_pxf@gengmei123.local",[[1,808,"\n"]],[806,806],[807,807]]],[1521774896819,["gengmei_pxf@gengmei123.local",[[1,807,"## 选择一个日期，规定无论是哪一年"]],[807,807],[825,825]]],[1521774964532,[null,[[1,395,"）"],[-1,397,"）"],[1,441,"）"],[-1,443,"）"],[1,473,"）"],[-1,475,"）"],[1,523,"）"],[-1,525,"）"],[-1,618," "],[1,624,"个"]],[395,395],[625,625]]],[1521774964532,[null,[[-1,395,"）"],[1,398,"）"],[-1,441,"）"],[1,444,"）"],[-1,473,"）"],[1,476,"）"],[-1,523,"）"],[1,526,"）"],[1,618," "],[-1,623,"个"]],[625,625],[395,395]]],[1521774916567,["gengmei_pxf@gengmei123.local",[[1,825,"必须在周一到周五之间"]],[825,825],[835,835]]],[1521774916948,["gengmei_pxf@gengmei123.local",[[1,837,"\n"]],[835,835],[836,836]]],[1521774917124,["gengmei_pxf@gengmei123.local",[[1,838,"\n"]],[836,836],[837,837]]],[1521774953710,["gengmei_pxf@gengmei123.local",[[1,837,"## 三峡修大坝，怎么预测下游的淤泥"]],[837,837],[855,855]]],[1521774954043,["gengmei_pxf@gengmei123.local",[[-1,854,"泥"]],[855,855],[854,854]]],[1521774961972,["gengmei_pxf@gengmei123.local",[[1,854,"沙会不会对"]],[854,854],[859,859]]],[1521774978638,[null,[[1,395,"）"],[-1,397,"）"],[1,441,"）"],[-1,443,"）"],[1,473,"）"],[-1,475,"）"],[1,523,"）"],[-1,525,"）"],[-1,618," "],[1,624,"个"]],[395,395],[625,625]]],[1521774978638,[null,[[-1,395,"）"],[1,398,"）"],[-1,441,"）"],[1,444,"）"],[-1,473,"）"],[1,476,"）"],[-1,523,"）"],[1,526,"）"],[1,618," "],[-1,623,"个"]],[625,625],[395,395]]],[1521774966580,["gengmei_pxf@gengmei123.local",[[1,859,"下游的剧名"]],[859,859],[864,864]]],[1521774967722,["gengmei_pxf@gengmei123.local",[[-1,862,"剧名"]],[864,864],[862,862]]],[1521774972915,["gengmei_pxf@gengmei123.local",[[1,862,"居民有意向"]],[862,862],[867,867]]],[1521774973522,["gengmei_pxf@gengmei123.local",[[-1,865,"意向"]],[867,867],[865,865]]],[1521774976917,["gengmei_pxf@gengmei123.local",[[1,865,"影响"]],[865,865],[867,867]]],[1521788678201,[null,[[1,395,"）"],[-1,397,"）"],[1,441,"）"],[-1,443,"）"],[1,473,"）"],[-1,475,"）"],[1,523,"）"],[-1,525,"）"],[-1,618," "],[1,624,"个"]],[395,395],[625,625]]],[1521788678201,[null,[[-1,395,"）"],[1,398,"）"],[-1,441,"）"],[1,444,"）"],[-1,473,"）"],[1,476,"）"],[-1,523,"）"],[1,526,"）"],[1,618," "],[-1,623,"个"]],[625,625],[395,395]]],[1521788673431,["gengmei_pxf@gengmei123.local",[[1,678,"\n"]],[677,677],[678,678]]],[1521788674871,["gengmei_pxf@gengmei123.local",[[1,678,"【"]],[678,678],[679,679]]],[1521788675541,["gengmei_pxf@gengmei123.local",[[-1,678,"【"]],[679,679],[678,678]]],[1521788677639,["gengmei_pxf@gengmei123.local",[[1,678,"[]()"]],[678,678],[682,682]]],[1521788695856,[null,[[1,395,"）"],[-1,397,"）"],[1,441,"）"],[-1,443,"）"],[1,473,"）"],[-1,475,"）"],[1,523,"）"],[-1,525,"）"],[-1,618," "],[1,624,"个"]],[395,395],[625,625]]],[1521788695856,[null,[[-1,395,"）"],[1,398,"）"],[-1,441,"）"],[1,444,"）"],[-1,473,"）"],[1,476,"）"],[-1,523,"）"],[1,526,"）"],[1,618," "],[-1,623,"个"]],[625,625],[395,395]]],[1521788679230,["gengmei_pxf@gengmei123.local",[[1,679,"# Android的HTTP请求方式"]],[679,679],[697,697]]],[1521788682939,["gengmei_pxf@gengmei123.local",[[-1,679,"# "]],[681,681],[679,679]]],[1521788690014,["gengmei_pxf@gengmei123.local",[[1,697,"https://blog.csdn.net/checkiming/article/details/73824924"]],[697,697],[754,754]]],[1521788694868,["gengmei_pxf@gengmei123.local",[[1,756,"\n"]],[756,756],[757,757]]],[1521788729612,[null,[[1,395,"）"],[-1,397,"）"],[1,441,"）"],[-1,443,"）"],[1,473,"）"],[-1,475,"）"],[1,523,"）"],[-1,525,"）"],[-1,618," "],[1,624,"个"]],[395,395],[625,625]]],[1521788729612,[null,[[-1,395,"）"],[1,398,"）"],[-1,441,"）"],[1,444,"）"],[-1,473,"）"],[1,476,"）"],[-1,523,"）"],[1,526,"）"],[1,618," "],[-1,623,"个"]],[625,625],[395,395]]],[1521788722064,["gengmei_pxf@gengmei123.local",[[1,757,"\n"]],[755,755],[756,756]]],[1521788722502,["gengmei_pxf@gengmei123.local",[[1,758,"\n"]],[756,756],[757,757]]],[1521788723028,["gengmei_pxf@gengmei123.local",[[1,757,"# [Android中的HTTP通信](http://www.cnblogs.com/mercuryli/p/5600027.html)"]],[757,757],[825,825]]],[1521788726352,["gengmei_pxf@gengmei123.local",[[-1,757,"# "]],[759,759],[757,757]]],[1521788909621,[null,[[1,395,"）"],[-1,397,"）"],[1,441,"）"],[-1,443,"）"],[1,473,"）"],[-1,475,"）"],[1,523,"）"],[-1,525,"）"],[-1,618," "],[1,624,"个"]],[395,395],[625,625]]],[1521788909621,[null,[[-1,395,"）"],[1,398,"）"],[-1,441,"）"],[1,444,"）"],[-1,473,"）"],[1,476,"）"],[-1,523,"）"],[1,526,"）"],[1,618," "],[-1,623,"个"]],[625,625],[395,395]]],[1521788885940,["gengmei_pxf@gengmei123.local",[[1,825,"\n"]],[824,824],[825,825]]],[1521788886453,["gengmei_pxf@gengmei123.local",[[1,825,"http://www.imooc.com/learn/304"]],[825,825],[855,855]]],[1521788892323,["gengmei_pxf@gengmei123.local",[[-1,856,"* post请求get请求"]],[856,869],[856,856]]],[1521788892731,["gengmei_pxf@gengmei123.local",[[-1,857,"\n"]],[856,856],[855,855]]],[1521788907061,["gengmei_pxf@gengmei123.local",[[1,825,"[]("]],[825,825],[828,828]]],[1521788909429,["gengmei_pxf@gengmei123.local",[[1,858,")"]],[858,858],[859,859]]],[1521788918733,[null,[[1,395,"）"],[-1,397,"）"],[1,441,"）"],[-1,443,"）"],[1,473,"）"],[-1,475,"）"],[1,523,"）"],[-1,525,"）"],[-1,618," "],[1,624,"个"]],[395,395],[625,625]]],[1521788918733,[null,[[-1,395,"）"],[1,398,"）"],[-1,441,"）"],[1,444,"）"],[-1,473,"）"],[1,476,"）"],[-1,523,"）"],[1,526,"）"],[1,618," "],[-1,623,"个"]],[625,625],[395,395]]],[1521788911405,["gengmei_pxf@gengmei123.local",[[1,826,"## Android中的Http通信"]],[826,826],[844,844]]],[1521788914083,["gengmei_pxf@gengmei123.local",[[-1,826,"## "]],[829,829],[826,826]]],[1521789458729,[null,[[1,395,"）"],[-1,397,"）"],[1,441,"）"],[-1,443,"）"],[1,473,"）"],[-1,475,"）"],[1,523,"）"],[-1,525,"）"],[-1,618," "],[1,624,"个"]],[395,395],[625,625]]],[1521789458729,[null,[[-1,395,"）"],[1,398,"）"],[-1,441,"）"],[1,444,"）"],[-1,473,"）"],[1,476,"）"],[-1,523,"）"],[1,526,"）"],[1,618," "],[-1,623,"个"]],[625,625],[395,395]]],[1521789418613,["gengmei_pxf@gengmei123.local",[[1,1008,"z"]],[993,1018],[1008,1009]]],[1521789418795,["gengmei_pxf@gengmei123.local",[[1,1009,"h"]],[1008,1009],[1008,1010]]],[1521789418920,["gengmei_pxf@gengmei123.local",[[1,1010,"e"]],[1008,1010],[1008,1011]]],[1521789419083,["gengmei_pxf@gengmei123.local",[[1,1011,"'g"]],[1008,1011],[1008,1013]]],[1521789421020,["gengmei_pxf@gengmei123.local",[[-1,1008,"zhe'g"],[1,1013,"这个日期"]],[1008,1013],[1012,1012]]],[1521794645110,[null,[[1,395,"）"],[-1,397,"）"],[1,441,"）"],[-1,443,"）"],[1,473,"）"],[-1,475,"）"],[1,523,"）"],[-1,525,"）"],[-1,618," "],[1,624,"个"]],[395,395],[625,625]]],[1521794645110,[null,[[-1,395,"）"],[1,398,"）"],[-1,441,"）"],[1,444,"）"],[-1,473,"）"],[1,476,"）"],[-1,523,"）"],[1,526,"）"],[1,618," "],[-1,623,"个"]],[625,625],[395,395]]],[1521794637089,["gengmei_pxf@gengmei123.local",[[1,29," \n\n# [java 面向对象三大特性（封装，继承，多态）以及抽象、接口的介绍](https://blog.csdn.net/qq_22118507/article/details/51422591)"]],[29,29],[129,129]]],[1521794639254,["gengmei_pxf@gengmei123.local",[[-1,29," "],[1,30," "],[-1,32,"# "]],[34,34],[32,32]]],[1521794639646,["gengmei_pxf@gengmei123.local",[[-1,31,"\n"]],[32,32],[31,31]]],[1521794640501,["gengmei_pxf@gengmei123.local",[[-1,30,"\n"]],[31,31],[30,30]]],[1521794643237,["gengmei_pxf@gengmei123.local",[[1,126,"\n"]],[125,125],[126,126]]],[1521794765110,[null,[[1,492,"）"],[-1,494,"）"],[1,538,"）"],[-1,540,"）"],[1,570,"）"],[-1,572,"）"],[1,620,"）"],[-1,622,"）"],[-1,715," "],[1,721,"个"]],[492,492],[722,722]]],[1521794765110,[null,[[-1,492,"）"],[1,495,"）"],[-1,538,"）"],[1,541,"）"],[-1,570,"）"],[1,573,"）"],[-1,620,"）"],[1,623,"）"],[1,715," "],[-1,720,"个"]],[722,722],[492,492]]],[1521794706668,["gengmei_pxf@gengmei123.local",[[1,151,"接口中所有的定义的字段默认都是public static final 的属性，写和不写没有区别"]],[151,151],[198,198]]],[1521794708726,["gengmei_pxf@gengmei123.local",[[1,151,"**"]],[151,151],[153,153]]],[1521794710854,["gengmei_pxf@gengmei123.local",[[1,200,"**"]],[200,200],[202,202]]],[1521794713386,["gengmei_pxf@gengmei123.local",[[1,309," "]],[309,309],[310,310]]],[1521794716346,["gengmei_pxf@gengmei123.local",[[1,311,"\n"]],[310,310],[311,311]]],[1521794741497,["gengmei_pxf@gengmei123.local",[[1,311,"答案：b，a"]],[311,311],[317,317]]],[1521794945109,[null,[[1,551,"）"],[-1,553,"）"],[1,597,"）"],[-1,599,"）"],[1,629,"）"],[-1,631,"）"],[1,679,"）"],[-1,681,"）"],[-1,774," "],[1,780,"个"]],[551,551],[781,781]]],[1521794945109,[null,[[-1,551,"）"],[1,554,"）"],[-1,597,"）"],[1,600,"）"],[-1,629,"）"],[1,632,"）"],[-1,679,"）"],[1,682,"）"],[1,774," "],[-1,779,"个"]],[781,781],[551,551]]],[1521794940745,["gengmei_pxf@gengmei123.local",[[1,341,"\n"]],[339,339],[340,340]]],[1521796865077,[null,[[1,552,"）"],[-1,554,"）"],[1,598,"）"],[-1,600,"）"],[1,630,"）"],[-1,632,"）"],[1,680,"）"],[-1,682,"）"],[-1,775," "],[1,781,"个"]],[552,552],[782,782]]],[1521796865077,[null,[[-1,552,"）"],[1,555,"）"],[-1,598,"）"],[1,601,"）"],[-1,630,"）"],[1,633,"）"],[-1,680,"）"],[1,683,"）"],[1,775," "],[-1,780,"个"]],[782,782],[552,552]]],[1521796821846,["gengmei_pxf@gengmei123.local",[[1,340,"三. 单例模式VS静态类\n\n在知道了什么是单例模式后，我想你一定会想到静态类，“既然只使用一个对象，为何不干脆使用静态类？”，这里我会将单例模式和静态类进行一个比较。\n\n1\\. 单例可以继承和被继承，方法可以被override，而静态方法不可以。\n\n2\\. 静态方法中产生的对象会在执行后被释放，进而被GC清理，不会一直存在于内存中。\n\n3\\. 静态类会在第一次运行时初始化，单例模式可以有其他的选择，即可以延迟加载。\n\n4\\. 基于2， 3条，由于单例对象往往存在于DAO层（例如sessionFactory），如果反复的初始化和释放，则会占用很多资源，而使用单例模式将其常驻于内存可以更加节约资源。\n\n5\\. 静态方法有更高的访问效率。\n\n6\\. 单例模式很容易被测试。\n\n几个关于静态类的误解：\n\n误解一：静态方法常驻内存而实例方法不是。\n\n实际上，特殊编写的实例方法可以常驻内存，而静态方法需要不断初始化和释放。\n\n误解二：静态方法在堆(heap)上，实例方法在栈(stack)上。\n\n实际上，都是加载到特殊的不可写的代码内存区域中。\n\n静态类和单例模式情景的选择：\n\n情景一：不需要维持任何状态，仅仅用于全局访问，此时更适合使用静态类。\n\n情景二：需要维持一些特定的状态，此时更适合使用单例模式。"]],[340,340],[893,893]]],[1521796825958,["gengmei_pxf@gengmei123.local",[[-1,340,"三."],[1,342,"##"]],[340,342],[342,342]]],[1521796838708,["gengmei_pxf@gengmei123.local",[[1,679,"## "]],[679,679],[682,682]]],[1521796843205,["gengmei_pxf@gengmei123.local",[[1,816,"## "]],[816,816],[819,819]]],[1521796846050,["gengmei_pxf@gengmei123.local",[[1,901,"\n"]],[899,899],[900,900]]],[1521796846273,["gengmei_pxf@gengmei123.local",[[1,902,"\n"]],[900,900],[901,901]]],[1521804149450,[null,[[1,1113,"）"],[-1,1115,"）"],[1,1159,"）"],[-1,1161,"）"],[1,1191,"）"],[-1,1193,"）"],[1,1241,"）"],[-1,1243,"）"],[-1,1336," "],[1,1342,"个"]],[1113,1113],[1343,1343]]],[1521804149450,[null,[[-1,1113,"）"],[1,1116,"）"],[-1,1159,"）"],[1,1162,"）"],[-1,1191,"）"],[1,1194,"）"],[-1,1241,"）"],[1,1244,"）"],[1,1336," "],[-1,1341,"个"]],[1343,1343],[1113,1113]]],[1521804143283,["gengmei_pxf@gengmei123.local",[[1,901,"****"]],[901,901],[905,905]]],[1521804148635,["gengmei_pxf@gengmei123.local",[[1,903,"恶汉"]],[903,903],[905,905]]],[1521804209440,[null,[[1,1119,"）"],[-1,1121,"）"],[1,1165,"）"],[-1,1167,"）"],[1,1197,"）"],[-1,1199,"）"],[1,1247,"）"],[-1,1249,"）"],[-1,1342," "],[1,1348,"个"]],[1119,1119],[1349,1349]]],[1521804209440,[null,[[-1,1119,"）"],[1,1122,"）"],[-1,1165,"）"],[1,1168,"）"],[-1,1197,"）"],[1,1200,"）"],[-1,1247,"）"],[1,1250,"）"],[1,1342," "],[-1,1347,"个"]],[1349,1349],[1119,1119]]],[1521804149600,["gengmei_pxf@gengmei123.local",[[1,905,"是"]],[905,905],[906,906]]],[1521804187232,["gengmei_pxf@gengmei123.local",[[-1,903,"恶汉是"],[1,906,"饿汉式是线程安全的"]],[903,906],[912,912]]],[1521804269438,[null,[[1,1126,"）"],[-1,1128,"）"],[1,1172,"）"],[-1,1174,"）"],[1,1204,"）"],[-1,1206,"）"],[1,1254,"）"],[-1,1256,"）"],[-1,1349," "],[1,1355,"个"]],[1126,1126],[1356,1356]]],[1521804269438,[null,[[-1,1126,"）"],[1,1129,"）"],[-1,1172,"）"],[1,1175,"）"],[-1,1204,"）"],[1,1207,"）"],[-1,1254,"）"],[1,1257,"）"],[1,1349," "],[-1,1354,"个"]],[1356,1356],[1126,1126]]],[1521804265736,["gengmei_pxf@gengmei123.local",[[1,903,"比较:\n         "],[1,912,",在类创建的同时就已经创建好一个静态的对象供系统使用,以后不在改变\n          懒汉式如果在创建实例对象时不加上synchronized则会导致对对象的访问不是线程安全的\n          推荐使用第一种 \n\n从实现方式来讲他们最大的区别就是懒汉式是延时加载,\n他是在需要的时候才创建对象,而饿汉式在虚拟机启动的时候就会创建,\n\n饿汉式无需关注多线程问题、写法简单明了、能用则用。但是它是加载类时创建实例（上面有个朋友写错了）、所以如果是一个工厂模式、缓存了很多实例、那么就得考虑效率问题，因为这个类一加载则把所有实例不管用不用一块创建。\n懒汉式的优点是延时加载、缺点是应该用同步"]],[903,912],[1220,1220]]],[1521804298654,[null,[[1,1434,"）"],[-1,1436,"）"],[1,1480,"）"],[-1,1482,"）"],[1,1512,"）"],[-1,1514,"）"],[1,1562,"）"],[-1,1564,"）"],[-1,1657," "],[1,1663,"个"]],[1434,1434],[1664,1664]]],[1521804298654,[null,[[-1,1434,"）"],[1,1437,"）"],[-1,1480,"）"],[1,1483,"）"],[-1,1512,"）"],[1,1515,"）"],[-1,1562,"）"],[1,1565,"）"],[1,1657," "],[-1,1662,"个"]],[1664,1664],[1434,1434]]],[1521804275086,["gengmei_pxf@gengmei123.local",[[1,905,"*"],[-1,907,"         "],[1,916,"         "],[-1,959,"          "],[1,969,"          "],[-1,1015,"          "],[1,1025,"          "],[-1,1032," "],[1,1033," *"]],[905,905],[907,907]]],[1521804285773,["gengmei_pxf@gengmei123.local",[[1,903,"饿汉式与懒汉式"]],[903,903],[910,910]]],[1521804290157,["gengmei_pxf@gengmei123.local",[[1,901,"## "]],[901,901],[904,904]]],[1521804321690,[null,[[1,916,"*"],[-1,1044,"*"],[1,1446,"）"],[-1,1448,"）"],[1,1492,"）"],[-1,1494,"）"],[1,1524,"）"],[-1,1526,"）"],[1,1574,"）"],[-1,1576,"）"],[-1,1669," "],[1,1675,"个"]],[916,916],[1676,1676]]],[1521804321690,[null,[[-1,916,"*"],[1,1045,"*"],[-1,1446,"）"],[1,1449,"）"],[-1,1492,"）"],[1,1495,"）"],[-1,1524,"）"],[1,1527,"）"],[-1,1574,"）"],[1,1577,"）"],[1,1669," "],[-1,1674,"个"]],[1676,1676],[916,916]]],[1521804320512,["gengmei_pxf@gengmei123.local",[[-1,1046,"\n"]],[1046,1046],[1045,1045]]],[1521804344994,[null,[[1,916,"*"],[-1,1044,"*"],[1,1445,"）"],[-1,1447,"）"],[1,1491,"）"],[-1,1493,"）"],[1,1523,"）"],[-1,1525,"）"],[1,1573,"）"],[-1,1575,"）"],[-1,1668," "],[1,1674,"个"]],[916,916],[1675,1675]]],[1521804344994,[null,[[-1,916,"*"],[1,1045,"*"],[-1,1445,"）"],[1,1448,"）"],[-1,1491,"）"],[1,1494,"）"],[-1,1523,"）"],[1,1526,"）"],[-1,1573,"）"],[1,1576,"）"],[1,1668," "],[-1,1673,"个"]],[1675,1675],[916,916]]],[1521804343778,["gengmei_pxf@gengmei123.local",[[-1,1231,"**"]],[1233,1233],[1231,1231]]],[1521806024988,[null,[[1,916,"*"],[-1,1044,"*"],[1,1443,"）"],[-1,1445,"）"],[1,1489,"）"],[-1,1491,"）"],[1,1521,"）"],[-1,1523,"）"],[1,1571,"）"],[-1,1573,"）"],[-1,1666," "],[1,1672,"个"]],[916,916],[1673,1673]]],[1521806024988,[null,[[-1,916,"*"],[1,1045,"*"],[-1,1443,"）"],[1,1446,"）"],[-1,1489,"）"],[1,1492,"）"],[-1,1521,"）"],[1,1524,"）"],[-1,1571,"）"],[1,1574,"）"],[1,1666," "],[-1,1671,"个"]],[1673,1673],[916,916]]],[1521805967971,["gengmei_pxf@gengmei123.local",[[1,1278,"\n"]],[1277,1277],[1278,1278]]],[1521805968155,["gengmei_pxf@gengmei123.local",[[1,1279,"\n"]],[1278,1278],[1279,1279]]],[1521805969199,["gengmei_pxf@gengmei123.local",[[1,1278,"**知识一:\n * 实现线程，有两种方法，一种是继承Thread类，一种是实现Runnable接口。\n * 本文推荐实现Runnable接口的方法。\n * 1.把需要共享的数据(可以是静态的，非静态的变量了)放在一个实现Runnable\n * 接口的类里面，然后把这个类的实例传给多个Thread的构造方法。这样，新创建\n * 的多个Thread，都共同拥有一个Runnable实例，共享同一份数据。\n * 2.如果采用继承Thread类的方法，就只好使用static静态成员了。\n * 如果共享的数据比较多，就需要大量的static静态成员，令程序数据结构混乱，\n * 难以扩展。这种情况应该尽量避免。\n *    \n * 知识二:\n * JAVA的进程同步是通过synchronized()来实现的，需要说明的是，\n * JAVA的synchronized()方法类似于操作系统概念中的互斥内存块，在JAVA中的Object类型中，\n * 都是带有一个内存锁的，在有线程获取该内存锁后，其它线程无法访问该内存，从而实现JAVA中简单的同步、互斥操作。\n * 明白这个原理，就能理解为什么synchronized(this)与synchronized(static XXX)的区别了，\n * synchronized就是针对内存区块申请内存锁，this关键字代表类的一个对象，\n * 所以其内存锁是针对相同对象的互斥操作，而static成员属于类专有，其内存空间为该类所有成员共有，\n * 这就导致synchronized()对static成员加锁，相当于对类加锁，也就是在该类的所有成员间实现互斥，\n * 在同一时间只有一个线程可访问该类的实例。如果只是简单的想要实现在JAVA中的线程互斥，明白这些基本就已经够了。\n * 但如果需要在线程间相互唤醒的话就需要借助Object.wait(), Object.nofity()了。\n * \n * Obj.wait()，与Obj.notify()必须要与synchronized(Obj)一起使用，也就是wait,\n * 与notify是针对已经获取了Obj锁进行操作，从语法角度来说就是\n * Obj.wait(),Obj.notify必须在synchronized(Obj){...}语句块内。\n * 从功能上来说wait就是说线程在获取对象锁后，主动释放对象锁，同时本线程休眠。\n * 直到有其它线程调用对象的notify()唤醒该线程，才能继续获取对象锁，并继续执行。\n * 相应的notify()就是对对象锁的唤醒操作。但有一点需要注意的是notify()调用后，\n * 并不是马上就释放对象锁的，而是在相应的synchronized(){}语句块执行结束，自动释放锁后，\n * JVM会在wait()对象锁的线程中随机选取一线程，赋予其对象锁，唤醒线程，继续执行。\n * 这样就提供了在线程间同步、唤醒的操作。Thread.sleep()与Object.wait()二者都可以暂停当前线程，\n * 释放CPU控制权，主要的区别在于Object.wait()在释放CPU同时，释放了对象锁的控制。 \n * \n * 注意:\n * 1) 必须在synchronized里面才可以使用notify,notifyAll,wait方法；\n * 2) synchronized必须是以一个对象或者一个类做为锁资源，一旦某个线程进入这个sychronized区段，\n *    那么synchronized(这个锁资源)的所有代码地方其他多个线程都不可以进入。\n *    \n * 知识三:\n * 1、synchronized关键字的作用域有二种： \n *  1） 是某个对象实例内，synchronized aMethod(){}可以防止多个线程同时访问这个对象的synchronized方法\n *      （如果一个对象有多个synchronized方法，只要一个线程访问了其中的一个synchronized方法，其它线程不\n *      能同时访问这个对象中任何一个synchronized方法）。这时，不同的对象实例的synchronized方法是不相干扰的。\n *      也就是说，其它线程照样可以同时访问相同类的另一个对象实例中的synchronized方法；\n *  2） 是某个类的范围，synchronized static aStaticMethod{}防止多个线程同时访问这个类中的synchronized static 方法。\n *     它可以对类的所有对象实例起作用。 \n * 2、除了方法前用synchronized关键字，synchronized关键字还可以用于方法中的某个区块中，表示只对这个区块的资源实行互斥访问。\n *     用法是: synchronized(this){区块}，它的作用域是当前对象；\n * 3、synchronized关键字是不能继承的，也就是说，基类的方法synchronized f(){} 在继承类中并不自动是synchronized f(){}，\n *   而是变成了f(){}。继承类需要你显式的指定它的某个方法为synchronized方法；\n */**"]],[1278,1278],[3470,3470]]],[1521805977989,["gengmei_pxf@gengmei123.local",[[1,1283,"*"],[-1,1285," "],[1,1286," "],[-1,1329," "],[1,1330," "],[-1,1353," "],[1,1354," "],[-1,1397," "],[1,1398," "],[-1,1439," "],[1,1440," "],[-1,1479," "],[1,1480," "],[-1,1519," "],[1,1520," "],[-1,1561," "],[1,1562," "],[-1,1581," *    \n "],[1,1589," *    \n "],[-1,1596," "],[1,1597," "],[-1,1638," "],[1,1639," "],[-1,1697," "],[1,1698," "],[-1,1756," "],[1,1757," "],[-1,1822," "],[1,1823," "],[-1,1868," "],[1,1869," "],[-1,1921," "],[1,1922," "],[-1,1980," "],[1,1981," "],[-1,2039," "],[1,2040," "],[-1,2095," * \n "],[1,2100," * \n "],[-1,2161," "],[1,2162," "],[-1,2198," "],[1,2199," "],[-1,2253," "],[1,2254," "],[-1,2296," "],[1,2297," "],[-1,2342," "],[1,2343," "],[-1,2391," "],[1,2392," "],[-1,2445," "],[1,2446," "],[-1,2492," "],[1,2493," "],[-1,2555," "],[1,2556," "],[-1,2606," \n * \n "],[1,2613," \n * \n "],[-1,2619," "],[1,2620," "],[-1,2672," "],[1,2673," "],[-1,2734," *    "],[1,2740," *    "],[-1,2782," *    \n "],[1,2790," *    \n "],[-1,2797," "],[1,2798," "],[-1,2825," \n *  "],[1,2831," \n *  "],[-1,2899," *      "],[1,2907," *      "],[-1,2967," *      "],[1,2975," *      "],[-1,3038," *      "],[1,3046," *      "],[-1,3092," *  "],[1,3096," *  "],[-1,3181," *    "],[1,3187," *    "],[-1,3204," \n "],[1,3207," \n "],[-1,3282," *    "],[1,3288," *    "],[-1,3329," "],[1,3330," "],[-1,3415," *  "],[1,3419," *  "],[-1,3465," "],[1,3466," *"]],[1283,1283],[1285,1285]]],[1521805989546,["gengmei_pxf@gengmei123.local",[[-1,2611,"* "],[-1,2614," *"]],[2611,2616],[2612,2612]]],[1521805990797,["gengmei_pxf@gengmei123.local",[[1,2612,"**"]],[2612,2612],[2614,2614]]],[1521805993385,["gengmei_pxf@gengmei123.local",[[-1,2614," "]],[2615,2615],[2614,2614]]],[1521805995116,["gengmei_pxf@gengmei123.local",[[1,2616,"**"]],[2616,2616],[2618,2618]]],[1521806006666,["gengmei_pxf@gengmei123.local",[[-1,2623,"1)"]],[2625,2625],[2623,2623]]],[1521806009965,["gengmei_pxf@gengmei123.local",[[-1,2674,"2) "]],[2674,2677],[2674,2674]]],[1521806012290,["gengmei_pxf@gengmei123.local",[[-1,2623," "]],[2624,2624],[2623,2623]]],[1521806015009,["gengmei_pxf@gengmei123.local",[[-1,2732,"   "]],[2732,2735],[2732,2732]]],[1521806016961,["gengmei_pxf@gengmei123.local",[[-1,2775,"* "]],[2777,2777],[2775,2775]]],[1521806020459,["gengmei_pxf@gengmei123.local",[[-1,2781," "]],[2780,2782],[2781,2781]]],[1521806020587,["gengmei_pxf@gengmei123.local",[[1,2781,"*"]],[2781,2781],[2782,2782]]],[1521806022427,["gengmei_pxf@gengmei123.local",[[1,2785,"**"]],[2785,2785],[2787,2787]]],[1521806084977,[null,[[-1,916,""],[1,916,"*"],[-1,1044,"*"],[1,1045,""],[-1,1284,""],[1,1284,"*"],[-1,2610,"* "],[1,2612,"\n"],[1,2614,"注"],[-1,2615,":"],[1,2618,":"],[-1,2622,"1"],[1,2623,"必"],[-1,2672,"2"],[1,2673,"s"],[-1,2731," "],[1,2732,"那"],[-1,2774,"*"],[1,2775," "],[-1,2780," "],[1,2782,"知"],[-1,2784,":"],[1,2787,":"],[-1,3458,"*"],[1,3459,""],[1,3629,"）"],[-1,3631,"）"],[1,3675,"）"],[-1,3677,"）"],[1,3707,"）"],[-1,3709,"）"],[1,3757,"）"],[-1,3759,"）"],[-1,3852," "],[1,3858,"个"]],[916,916],[3859,3859]]],[1521806084977,[null,[[1,916,""],[-1,916,"*"],[1,1045,"*"],[-1,1045,""],[1,1284,""],[-1,1284,"*"],[1,2611,"* "],[-1,2611,"\n"],[-1,2614,"注"],[1,2616,":"],[-1,2618,":"],[1,2623,"1"],[-1,2623,"必"],[1,2673,"2"],[-1,2673,"s"],[1,2732," "],[-1,2732,"那"],[1,2775,"*"],[-1,2775," "],[1,2781," "],[-1,2782,"知"],[1,2785,":"],[-1,2787,":"],[1,3459,"*"],[-1,3459,""],[-1,3629,"）"],[1,3632,"）"],[-1,3675,"）"],[1,3678,"）"],[-1,3707,"）"],[1,3710,"）"],[-1,3757,"）"],[1,3760,"）"],[1,3852," "],[-1,3857,"个"]],[3859,3859],[916,916]]],[1521806035792,["gengmei_pxf@gengmei123.local",[[1,2820,"\n"]],[2820,2820],[2821,2821]]],[1521806039777,["gengmei_pxf@gengmei123.local",[[-1,2820,"\n"]],[2821,2821],[2820,2820]]],[1521806046192,["gengmei_pxf@gengmei123.local",[[1,2817,"\n"]],[2817,2817],[2818,2818]]],[1521806048711,["gengmei_pxf@gengmei123.local",[[1,2821,"\t"]],[2821,2821],[2822,2822]]],[1521806052312,["gengmei_pxf@gengmei123.local",[[-1,2824," 1） "]],[2828,2828],[2824,2824]]],[1521806056048,["gengmei_pxf@gengmei123.local",[[-1,2890,"*      "]],[2890,2897],[2890,2890]]],[1521806058826,["gengmei_pxf@gengmei123.local",[[1,2890,"\t*"]],[2890,2890],[2892,2892]]],[1521806062266,["gengmei_pxf@gengmei123.local",[[-1,2956,"    "]],[2953,2958],[2954,2954]]],[1521806064962,["gengmei_pxf@gengmei123.local",[[1,2953,"   "]],[2953,2953],[2956,2956]]],[1521806069680,["gengmei_pxf@gengmei123.local",[[-1,2890,"\t"]],[2891,2891],[2890,2890]]],[1521806071121,["gengmei_pxf@gengmei123.local",[[1,2890,"   "]],[2890,2890],[2893,2893]]],[1521806072864,["gengmei_pxf@gengmei123.local",[[-1,2820," \t"]],[2822,2822],[2820,2820]]],[1521806074960,["gengmei_pxf@gengmei123.local",[[1,2820,"    "]],[2820,2820],[2824,2824]]],[1521806078855,["gengmei_pxf@gengmei123.local",[[-1,2896,"（"]],[2897,2897],[2896,2896]]],[1521806079449,["gengmei_pxf@gengmei123.local",[[1,2896," "]],[2896,2896],[2897,2897]]],[1521806084450,["gengmei_pxf@gengmei123.local",[[-1,3028,"      "]],[3027,3034],[3028,3028]]],[1521806144978,[null,[[-1,916,""],[1,916,"*"],[-1,1044,"*"],[1,1045,""],[-1,1284,""],[1,1284,"*"],[-1,2610,"* "],[1,2612,"\n"],[1,2614,"注"],[-1,2615,":"],[1,2618,":"],[-1,2622,"1"],[1,2623,"必"],[-1,2672,"2"],[1,2673,"s"],[-1,2731," "],[1,2732,"那"],[-1,2774,"*"],[1,2775," "],[-1,2780," "],[1,2782,"知"],[-1,2784,":"],[1,2787,":"],[-1,2816," "],[1,2818," "],[-1,2823,"   "],[1,2826,"* 是"],[-1,2891,"*"],[1,2897,"如"],[-1,2955," *"],[1,2961,"*"],[1,2963,"能"],[-1,3027," "],[1,3028,"也"],[-1,3448,"*"],[1,3449,""],[1,3619,"）"],[-1,3621,"）"],[1,3665,"）"],[-1,3667,"）"],[1,3697,"）"],[-1,3699,"）"],[1,3747,"）"],[-1,3749,"）"],[-1,3842," "],[1,3848,"个"]],[916,916],[3849,3849]]],[1521806144978,[null,[[1,916,""],[-1,916,"*"],[1,1045,"*"],[-1,1045,""],[1,1284,""],[-1,1284,"*"],[1,2611,"* "],[-1,2611,"\n"],[-1,2614,"注"],[1,2616,":"],[-1,2618,":"],[1,2623,"1"],[-1,2623,"必"],[1,2673,"2"],[-1,2673,"s"],[1,2732," "],[-1,2732,"那"],[1,2775,"*"],[-1,2775," "],[1,2781," "],[-1,2782,"知"],[1,2785,":"],[-1,2787,":"],[1,2817," "],[-1,2818," "],[1,2824,"   "],[-1,2824,"* 是"],[1,2892,"*"],[-1,2897,"如"],[1,2956," *"],[-1,2960,"*"],[-1,2963,"能"],[1,3028," "],[-1,3028,"也"],[1,3449,"*"],[-1,3449,""],[-1,3619,"）"],[1,3622,"）"],[-1,3665,"）"],[1,3668,"）"],[-1,3697,"）"],[1,3700,"）"],[-1,3747,"）"],[1,3750,"）"],[1,3842," "],[-1,3847,"个"]],[3849,3849],[916,916]]],[1521806085102,["gengmei_pxf@gengmei123.local",[[1,3028," "]],[3028,3028],[3029,3029]]],[1521806086673,["gengmei_pxf@gengmei123.local",[[1,3027,"  "]],[3027,3027],[3029,3029]]],[1521806089855,["gengmei_pxf@gengmei123.local",[[-1,3026,"   "]],[3029,3029],[3026,3026]]],[1521806090303,["gengmei_pxf@gengmei123.local",[[-1,3025,"\n"]],[3026,3026],[3025,3025]]],[1521806091476,["gengmei_pxf@gengmei123.local",[[1,3025,"\n"]],[3025,3025],[3026,3026]]],[1521806092633,["gengmei_pxf@gengmei123.local",[[1,3026,"   "]],[3026,3026],[3029,3029]]],[1521806096462,["gengmei_pxf@gengmei123.local",[[-1,3022,"扰的。"]],[3025,3025],[3022,3022]]],[1521806097509,["gengmei_pxf@gengmei123.local",[[1,3022,"扰的。"]],[3022,3022],[3025,3025]]],[1521806104254,["gengmei_pxf@gengmei123.local",[[-1,3026,"   "]],[3029,3029],[3026,3026]]],[1521806104670,["gengmei_pxf@gengmei123.local",[[-1,3025,"\n"]],[3026,3026],[3025,3025]]],[1521806107446,["gengmei_pxf@gengmei123.local",[[1,3025,"\n"]],[3025,3025],[3026,3026]]],[1521806110102,["gengmei_pxf@gengmei123.local",[[1,3026,"\t"]],[3026,3026],[3027,3027]]],[1521806111614,["gengmei_pxf@gengmei123.local",[[-1,3026,"\t"]],[3027,3027],[3026,3026]]],[1521806112014,["gengmei_pxf@gengmei123.local",[[-1,3025,"\n"]],[3026,3026],[3025,3025]]],[1521806115875,["gengmei_pxf@gengmei123.local",[[1,3025,"\n"]],[3025,3025],[3026,3026]]],[1521806130066,["gengmei_pxf@gengmei123.local",[[-1,3026,"* "]],[3028,3028],[3026,3026]]],[1521806130483,["gengmei_pxf@gengmei123.local",[[-1,3025,"\n"]],[3026,3026],[3025,3025]]],[1521806141663,["gengmei_pxf@gengmei123.local",[[-1,3074," 2） "]],[3074,3078],[3074,3074]]],[1521806204978,[null,[[-1,916,""],[1,916,"*"],[-1,1044,"*"],[1,1045,""],[-1,1284,""],[1,1284,"*"],[-1,2610,"* "],[1,2612,"\n"],[1,2614,"注"],[-1,2615,":"],[1,2618,":"],[-1,2622,"1"],[1,2623,"必"],[-1,2672,"2"],[1,2673,"s"],[-1,2731," "],[1,2732,"那"],[-1,2774,"*"],[1,2775," "],[-1,2780," "],[1,2782,"知"],[-1,2784,":"],[1,2787,":"],[-1,2816," "],[1,2818," "],[-1,2823,"   "],[1,2826,"* 是"],[-1,2891,"*"],[1,2897,"如"],[-1,2956,"* "],[1,2961,"*"],[1,2963,"能"],[-1,3022,"扰"],[1,3025,"也"],[-1,3073," "],[1,3074,"是"],[-1,3441,"*"],[1,3442,""],[1,3612,"）"],[-1,3614,"）"],[1,3658,"）"],[-1,3660,"）"],[1,3690,"）"],[-1,3692,"）"],[1,3740,"）"],[-1,3742,"）"],[-1,3835," "],[1,3841,"个"]],[916,916],[3842,3842]]],[1521806204978,[null,[[1,916,""],[-1,916,"*"],[1,1045,"*"],[-1,1045,""],[1,1284,""],[-1,1284,"*"],[1,2611,"* "],[-1,2611,"\n"],[-1,2614,"注"],[1,2616,":"],[-1,2618,":"],[1,2623,"1"],[-1,2623,"必"],[1,2673,"2"],[-1,2673,"s"],[1,2732," "],[-1,2732,"那"],[1,2775,"*"],[-1,2775," "],[1,2781," "],[-1,2782,"知"],[1,2785,":"],[-1,2787,":"],[1,2817," "],[-1,2818," "],[1,2824,"   "],[-1,2824,"* 是"],[1,2892,"*"],[-1,2897,"如"],[1,2957,"* "],[-1,2960,"*"],[-1,2963,"能"],[1,3023,"扰"],[-1,3025,"也"],[1,3074," "],[-1,3074,"是"],[1,3442,"*"],[-1,3442,""],[-1,3612,"）"],[1,3615,"）"],[-1,3658,"）"],[1,3661,"）"],[-1,3690,"）"],[1,3693,"）"],[-1,3740,"）"],[1,3743,"）"],[1,3835," "],[-1,3840,"个"]],[3842,3842],[916,916]]],[1521806145381,["gengmei_pxf@gengmei123.local",[[1,3071,"\t"]],[3071,3071],[3072,3072]]],[1521806146951,["gengmei_pxf@gengmei123.local",[[-1,3071,"\t"]],[3072,3072],[3071,3071]]],[1521806148928,["gengmei_pxf@gengmei123.local",[[1,3072,"   "]],[3072,3072],[3075,3075]]],[1521806156086,["gengmei_pxf@gengmei123.local",[[1,3075,"\n"]],[3075,3075],[3076,3076]]],[1521806157686,["gengmei_pxf@gengmei123.local",[[1,3076,"\t"]],[3076,3076],[3077,3077]]],[1521806167654,["gengmei_pxf@gengmei123.local",[[-1,3076,"\t"]],[3077,3077],[3076,3076]]],[1521806171166,["gengmei_pxf@gengmei123.local",[[1,2820,"\n"]],[2819,2819],[2820,2820]]],[1521806175376,["gengmei_pxf@gengmei123.local",[[1,2820,"第一种"]],[2820,2820],[2823,2823]]],[1521806179776,["gengmei_pxf@gengmei123.local",[[1,3075,"第二种"]],[3075,3075],[3078,3078]]],[1521806190231,["gengmei_pxf@gengmei123.local",[[1,3083,"    "]],[3083,3083],[3087,3087]]],[1521806195708,["gengmei_pxf@gengmei123.local",[[-1,3175,"   "]],[3175,3178],[3175,3175]]],[1521806197519,["gengmei_pxf@gengmei123.local",[[1,3172," "]],[3172,3172],[3173,3173]]],[1521806201127,["gengmei_pxf@gengmei123.local",[[1,3176," "]],[3174,3174],[3175,3175]]],[1521806203901,["gengmei_pxf@gengmei123.local",[[-1,3175,"  "]],[3177,3177],[3175,3175]]],[1521806264978,[null,[[-1,916,""],[1,916,"*"],[-1,1044,"*"],[1,1045,""],[-1,1284,""],[1,1284,"*"],[-1,2610,"* "],[1,2612,"\n"],[1,2614,"注"],[-1,2615,":"],[1,2618,":"],[-1,2622,"1"],[1,2623,"必"],[-1,2672,"2"],[1,2673,"s"],[-1,2731," "],[1,2732,"那"],[-1,2774,"*"],[1,2775," "],[-1,2780," "],[1,2782,"知"],[-1,2784,":"],[1,2787,":"],[-1,2816," \n"],[1,2820,"\n"],[-1,2828,"  "],[1,2830,"* 是"],[-1,2895,"*"],[1,2901,"如"],[-1,2960,"*"],[1,2964,"*"],[-1,2966," "],[1,2967,"能"],[-1,3026,"扰"],[1,3029,"也"],[-1,3074," "],[-1,3078,"*"],[1,3079," "],[-1,3087,"  "],[1,3089,"* 是"],[1,3171," "],[-1,3173,"  "],[1,3175,"它"],[-1,3453,"*"],[1,3454,""],[1,3624,"）"],[-1,3626,"）"],[1,3670,"）"],[-1,3672,"）"],[1,3702,"）"],[-1,3704,"）"],[1,3752,"）"],[-1,3754,"）"],[-1,3847," "],[1,3853,"个"]],[916,916],[3854,3854]]],[1521806264978,[null,[[1,916,""],[-1,916,"*"],[1,1045,"*"],[-1,1045,""],[1,1284,""],[-1,1284,"*"],[1,2611,"* "],[-1,2611,"\n"],[-1,2614,"注"],[1,2616,":"],[-1,2618,":"],[1,2623,"1"],[-1,2623,"必"],[1,2673,"2"],[-1,2673,"s"],[1,2732," "],[-1,2732,"那"],[1,2775,"*"],[-1,2775," "],[1,2781," "],[-1,2782,"知"],[1,2785,":"],[-1,2787,":"],[1,2817," \n"],[-1,2819,"\n"],[1,2828,"  "],[-1,2828,"* 是"],[1,2896,"*"],[-1,2901,"如"],[1,2961,"*"],[-1,2964,"*"],[1,2967," "],[-1,2967,"能"],[1,3027,"扰"],[-1,3029,"也"],[1,3075," "],[1,3078,"*"],[-1,3078," "],[1,3087,"  "],[-1,3087,"* 是"],[-1,3172," "],[1,3175,"  "],[-1,3175,"它"],[1,3454,"*"],[-1,3454,""],[-1,3624,"）"],[1,3627,"）"],[-1,3670,"）"],[1,3673,"）"],[-1,3702,"）"],[1,3705,"）"],[-1,3752,"）"],[1,3755,"）"],[1,3847," "],[-1,3852,"个"]],[3854,3854],[916,916]]],[1521806205476,["gengmei_pxf@gengmei123.local",[[1,3173," "]],[3173,3173],[3174,3174]]],[1521806208422,["gengmei_pxf@gengmei123.local",[[-1,3171,"   "]],[3174,3174],[3171,3171]]],[1521806208796,["gengmei_pxf@gengmei123.local",[[-1,3170,"\n"]],[3171,3171],[3170,3170]]],[1521806209730,["gengmei_pxf@gengmei123.local",[[1,3170,"\n"]],[3170,3170],[3171,3171]]],[1521806222637,["gengmei_pxf@gengmei123.local",[[-1,3450," */**"]],[3455,3455],[3450,3450]]],[1521806223292,["gengmei_pxf@gengmei123.local",[[-1,3451,"\n"]],[3450,3450],[3449,3449]]],[1521806238702,["gengmei_pxf@gengmei123.local",[[-1,3083,"    "]],[3087,3087],[3083,3083]]],[1521806246677,["gengmei_pxf@gengmei123.local",[[-1,2824,"    "]],[2828,2828],[2824,2824]]],[1521806249869,["gengmei_pxf@gengmei123.local",[[-1,2891,"    "]],[2891,2895],[2891,2891]]],[1521806252765,["gengmei_pxf@gengmei123.local",[[-1,2952,"    "]],[2952,2956],[2952,2952]]],[1521806258740,["gengmei_pxf@gengmei123.local",[[1,3063,"\n"]],[3063,3063],[3064,3064]]],[1521806264780,["gengmei_pxf@gengmei123.local",[[-1,3256,"   "]],[3259,3259],[3256,3256]]],[1521806284634,[null,[[-1,916,""],[1,916,"*"],[-1,1044,"*"],[1,1045,""],[-1,1284,""],[1,1284,"*"],[-1,2610,"* "],[1,2612,"\n"],[1,2614,"注"],[-1,2615,":"],[1,2618,":"],[-1,2622,"1"],[1,2623,"必"],[-1,2672,"2"],[1,2673,"s"],[-1,2731," "],[1,2732,"那"],[-1,2774,"*"],[1,2775," "],[-1,2780," "],[1,2782,"知"],[-1,2784,":"],[1,2787,":"],[-1,2816," \n"],[1,2820,"\n"],[-1,2824,"  "],[1,2826,"* 是"],[-1,2890," "],[1,2893,"如"],[1,2951,"*"],[-1,2953,"  "],[1,2955,"能"],[-1,3014,"扰"],[1,3017,"也"],[-1,3062," "],[-1,3067,"*"],[-1,3071,"\n"],[1,3073,"\n*"],[1,3074,"是"],[-1,3155,"\n  "],[1,3158,"* 它"],[-1,3255," "],[1,3256,"用"],[-1,3431," "],[1,3432,""],[1,3598,"）"],[-1,3600,"）"],[1,3644,"）"],[-1,3646,"）"],[1,3676,"）"],[-1,3678,"）"],[1,3726,"）"],[-1,3728,"）"],[-1,3821," "],[1,3827,"个"]],[916,916],[3828,3828]]],[1521806284634,[null,[[1,916,""],[-1,916,"*"],[1,1045,"*"],[-1,1045,""],[1,1284,""],[-1,1284,"*"],[1,2611,"* "],[-1,2611,"\n"],[-1,2614,"注"],[1,2616,":"],[-1,2618,":"],[1,2623,"1"],[-1,2623,"必"],[1,2673,"2"],[-1,2673,"s"],[1,2732," "],[-1,2732,"那"],[1,2775,"*"],[-1,2775," "],[1,2781," "],[-1,2782,"知"],[1,2785,":"],[-1,2787,":"],[1,2817," \n"],[-1,2819,"\n"],[1,2824,"  "],[-1,2824,"* 是"],[1,2891," "],[-1,2893,"如"],[-1,2952,"*"],[1,2955,"  "],[-1,2955,"能"],[1,3015,"扰"],[-1,3017,"也"],[1,3063," "],[1,3067,"*"],[1,3070,"\n"],[-1,3071,"\n*"],[-1,3074,"是"],[1,3156,"\n  "],[-1,3156,"* 它"],[1,3256," "],[-1,3256,"用"],[1,3432," "],[-1,3432,""],[-1,3598,"）"],[1,3601,"）"],[-1,3644,"）"],[1,3647,"）"],[-1,3676,"）"],[1,3679,"）"],[-1,3726,"）"],[1,3729,"）"],[1,3821," "],[-1,3826,"个"]],[3828,3828],[916,916]]],[1521806270303,["gengmei_pxf@gengmei123.local",[[-1,3176," "]],[3177,3177],[3176,3176]]],[1521806272976,["gengmei_pxf@gengmei123.local",[[-1,3251," "]],[3251,3252],[3251,3251]]],[1521806274753,["gengmei_pxf@gengmei123.local",[[-1,3294," "]],[3294,3295],[3294,3294]]],[1521806278600,["gengmei_pxf@gengmei123.local",[[-1,3379," "]],[3380,3380],[3379,3379]]],[1521806280776,["gengmei_pxf@gengmei123.local",[[-1,3380,"   "]],[3380,3383],[3380,3380]]],[1521806282130,["gengmei_pxf@gengmei123.local",[[1,3380," "]],[3380,3380],[3381,3381]]],[1521806344640,[null,[[-1,916,""],[1,916,"*"],[-1,1044,"*"],[1,1045,""],[-1,1284,""],[1,1284,"*"],[-1,2610,"* "],[1,2612,"\n"],[1,2614,"注"],[-1,2615,":"],[1,2618,":"],[-1,2622,"1"],[1,2623,"必"],[-1,2672,"2"],[1,2673,"s"],[-1,2731," "],[1,2732,"那"],[-1,2774,"*"],[1,2775," "],[-1,2780," "],[1,2782,"知"],[-1,2784,":"],[1,2787,":"],[-1,2816," \n"],[1,2820,"\n"],[-1,2824,"  "],[1,2826,"* 是"],[-1,2890," "],[1,2893,"如"],[-1,2951,"  "],[1,2953,"*"],[1,2955,"能"],[-1,3014,"扰"],[1,3017,"也"],[-1,3062," "],[-1,3067,"*"],[-1,3071,"\n"],[1,3073,"\n*"],[1,3074,"是"],[-1,3155,"\n  "],[1,3158,"* 它"],[-1,3175," "],[1,3176,"*"],[1,3250,"*"],[-1,3252,"  "],[1,3254,"用"],[-1,3293," "],[1,3294,"*"],[-1,3378,"   "],[1,3381,"* 而"],[-1,3425," "],[1,3592,"）"],[-1,3594,"）"],[1,3638,"）"],[-1,3640,"）"],[1,3670,"）"],[-1,3672,"）"],[1,3720,"）"],[-1,3722,"）"],[-1,3815," "],[1,3821,"个"]],[916,916],[3822,3822]]],[1521806344640,[null,[[1,916,""],[-1,916,"*"],[1,1045,"*"],[-1,1045,""],[1,1284,""],[-1,1284,"*"],[1,2611,"* "],[-1,2611,"\n"],[-1,2614,"注"],[1,2616,":"],[-1,2618,":"],[1,2623,"1"],[-1,2623,"必"],[1,2673,"2"],[-1,2673,"s"],[1,2732," "],[-1,2732,"那"],[1,2775,"*"],[-1,2775," "],[1,2781," "],[-1,2782,"知"],[1,2785,":"],[-1,2787,":"],[1,2817," \n"],[-1,2819,"\n"],[1,2824,"  "],[-1,2824,"* 是"],[1,2891," "],[-1,2893,"如"],[1,2952,"  "],[-1,2952,"*"],[-1,2955,"能"],[1,3015,"扰"],[-1,3017,"也"],[1,3063," "],[1,3067,"*"],[1,3070,"\n"],[-1,3071,"\n*"],[-1,3074,"是"],[1,3156,"\n  "],[-1,3156,"* 它"],[1,3176," "],[-1,3176,"*"],[-1,3251,"*"],[1,3254,"  "],[-1,3254,"用"],[1,3294," "],[-1,3294,"*"],[1,3379,"   "],[-1,3379,"* 而"],[1,3426," "],[-1,3592,"）"],[1,3595,"）"],[-1,3638,"）"],[1,3641,"）"],[-1,3670,"）"],[1,3673,"）"],[-1,3720,"）"],[1,3723,"）"],[1,3815," "],[-1,3820,"个"]],[3822,3822],[916,916]]],[1521806311342,["gengmei_pxf@gengmei123.local",[[1,3176,"\n"]],[3176,3176],[3177,3177]]],[1521806321044,["gengmei_pxf@gengmei123.local",[[-1,2820,"第一种"]],[2820,2823],[2820,2820]]],[1521806321431,["gengmei_pxf@gengmei123.local",[[-1,2820,"\n"]],[2820,2820],[2819,2819]]],[1521806324472,["gengmei_pxf@gengmei123.local",[[1,2822,"（）1"]],[2822,2822],[2825,2825]]],[1521806325952,["gengmei_pxf@gengmei123.local",[[-1,2824,"1"]],[2825,2825],[2824,2824]]],[1521806326926,["gengmei_pxf@gengmei123.local",[[1,2823,"1"]],[2823,2823],[2824,2824]]],[1521806331417,["gengmei_pxf@gengmei123.local",[[-1,2890,"* "]],[2892,2892],[2890,2890]]],[1521806333966,["gengmei_pxf@gengmei123.local",[[-1,2949,"*  "]],[2949,2952],[2949,2949]]],[1521806338190,["gengmei_pxf@gengmei123.local",[[-1,3058,"第二种"]],[3058,3061],[3058,3058]]],[1521806338701,["gengmei_pxf@gengmei123.local",[[-1,3057,"\n"]],[3058,3058],[3057,3057]]],[1521806341080,["gengmei_pxf@gengmei123.local",[[1,3064,"（）"]],[3064,3064],[3066,3066]]],[1521806342576,["gengmei_pxf@gengmei123.local",[[1,3065,"2"]],[3065,3065],[3066,3066]]],[1521806353139,[null,[[-1,916,""],[1,916,"*"],[-1,1044,"*"],[1,1045,""],[-1,1284,""],[1,1284,"*"],[-1,2610,"* "],[1,2612,"\n"],[1,2614,"注"],[-1,2615,":"],[1,2618,":"],[-1,2622,"1"],[1,2623,"必"],[-1,2672,"2"],[1,2673,"s"],[-1,2731," "],[1,2732,"那"],[-1,2774,"*"],[1,2775," "],[-1,2780," "],[1,2782,"知"],[-1,2784,":"],[1,2787,":"],[1,2816,"\n"],[-1,2818,"\n  "],[1,2821,"*"],[1,2825,"是"],[-1,2889," "],[1,2890,"如"],[-1,2948," "],[1,2949,"能"],[-1,3008,"扰"],[1,3011,"也"],[-1,3057,"*"],[-1,3062," "],[1,3063,"*"],[1,3067,"是"],[-1,3148,"\n  "],[1,3151,"* 它"],[-1,3168," "],[1,3170,"*"],[1,3244,"*"],[-1,3246,"  "],[1,3248,"用"],[-1,3287," "],[1,3288,"*"],[-1,3372,"   "],[1,3375,"* 而"],[-1,3419," "],[1,3586,"）"],[-1,3588,"）"],[1,3632,"）"],[-1,3634,"）"],[1,3664,"）"],[-1,3666,"）"],[1,3714,"）"],[-1,3716,"）"],[-1,3809," "],[1,3815,"个"]],[916,916],[3816,3816]]],[1521806353139,[null,[[1,916,""],[-1,916,"*"],[1,1045,"*"],[-1,1045,""],[1,1284,""],[-1,1284,"*"],[1,2611,"* "],[-1,2611,"\n"],[-1,2614,"注"],[1,2616,":"],[-1,2618,":"],[1,2623,"1"],[-1,2623,"必"],[1,2673,"2"],[-1,2673,"s"],[1,2732," "],[-1,2732,"那"],[1,2775,"*"],[-1,2775," "],[1,2781," "],[-1,2782,"知"],[1,2785,":"],[-1,2787,":"],[-1,2817,"\n"],[1,2820,"\n  "],[-1,2820,"*"],[-1,2825,"是"],[1,2890," "],[-1,2890,"如"],[1,2949," "],[-1,2949,"能"],[1,3009,"扰"],[-1,3011,"也"],[1,3058,"*"],[1,3062," "],[-1,3062,"*"],[-1,3067,"是"],[1,3149,"\n  "],[-1,3149,"* 它"],[1,3169," "],[-1,3170,"*"],[-1,3245,"*"],[1,3248,"  "],[-1,3248,"用"],[1,3288," "],[-1,3288,"*"],[1,3373,"   "],[-1,3373,"* 而"],[1,3420," "],[-1,3586,"）"],[1,3589,"）"],[-1,3632,"）"],[1,3635,"）"],[-1,3664,"）"],[1,3667,"）"],[-1,3714,"）"],[1,3717,"）"],[1,3809," "],[-1,3814,"个"]],[3816,3816],[916,916]]],[1521806346566,["gengmei_pxf@gengmei123.local",[[-1,3149,"* "]],[3151,3151],[3149,3149]]],[1521806386371,[null,[[-1,916,""],[1,916,"*"],[-1,1044,"*"],[1,1045,""],[-1,1284,""],[1,1284,"*"],[-1,2610,"* "],[1,2612,"\n"],[1,2614,"注"],[-1,2615,":"],[1,2618,":"],[-1,2622,"1"],[1,2623,"必"],[-1,2672,"2"],[1,2673,"s"],[-1,2731," "],[1,2732,"那"],[-1,2774,"*"],[1,2775," "],[-1,2780," "],[1,2782,"知"],[-1,2784,":"],[1,2787,":"],[-1,2816," \n"],[-1,2820," "],[1,2821,"\n*"],[1,2825,"是"],[-1,2889," "],[1,2890,"如"],[-1,2948," "],[1,2949,"能"],[-1,3007,"扰"],[1,3011,"也"],[-1,3057,"*"],[-1,3062," "],[1,3063,"*"],[1,3067,"是"],[-1,3148,"\n"],[1,3149,"它"],[-1,3166," "],[1,3168,"*"],[1,3242,"*"],[-1,3244,"  "],[1,3246,"用"],[-1,3285," "],[1,3286,"*"],[-1,3370,"   "],[1,3373,"* 而"],[-1,3417," "],[1,3584,"）"],[-1,3586,"）"],[1,3630,"）"],[-1,3632,"）"],[1,3662,"）"],[-1,3664,"）"],[1,3712,"）"],[-1,3714,"）"],[-1,3807," "],[1,3813,"个"]],[916,916],[3814,3814]]],[1521806386371,[null,[[1,916,""],[-1,916,"*"],[1,1045,"*"],[-1,1045,""],[1,1284,""],[-1,1284,"*"],[1,2611,"* "],[-1,2611,"\n"],[-1,2614,"注"],[1,2616,":"],[-1,2618,":"],[1,2623,"1"],[-1,2623,"必"],[1,2673,"2"],[-1,2673,"s"],[1,2732," "],[-1,2732,"那"],[1,2775,"*"],[-1,2775," "],[1,2781," "],[-1,2782,"知"],[1,2785,":"],[-1,2787,":"],[1,2817," \n"],[1,2819," "],[-1,2819,"\n*"],[-1,2825,"是"],[1,2890," "],[-1,2890,"如"],[1,2949," "],[-1,2949,"能"],[1,3008,"扰"],[-1,3011,"也"],[1,3058,"*"],[1,3062," "],[-1,3062,"*"],[-1,3067,"是"],[1,3149,"\n"],[-1,3149,"它"],[1,3167," "],[-1,3168,"*"],[-1,3243,"*"],[1,3246,"  "],[-1,3246,"用"],[1,3286," "],[-1,3286,"*"],[1,3371,"   "],[-1,3371,"* 而"],[1,3418," "],[-1,3584,"）"],[1,3587,"）"],[-1,3630,"）"],[1,3633,"）"],[-1,3662,"）"],[1,3665,"）"],[-1,3712,"）"],[1,3715,"）"],[1,3807," "],[-1,3812,"个"]],[3814,3814],[916,916]]],[1521806358959,["gengmei_pxf@gengmei123.local",[[-1,2820,"* "]],[2822,2822],[2820,2820]]],[1521806360699,["gengmei_pxf@gengmei123.local",[[1,2820,"  "]],[2820,2820],[2822,2822]]],[1521806364214,["gengmei_pxf@gengmei123.local",[[-1,3062,"* "]],[3064,3064],[3062,3062]]],[1521806369601,["gengmei_pxf@gengmei123.local",[[1,2822,"  "]],[2822,2822],[2824,2824]]],[1521806373912,["gengmei_pxf@gengmei123.local",[[1,3064,"   "]],[3064,3064],[3067,3067]]],[1521806378599,["gengmei_pxf@gengmei123.local",[[-1,2891,"\n"]],[2892,2892],[2891,2891]]],[1521806379822,["gengmei_pxf@gengmei123.local",[[1,2891,"\n"]],[2891,2891],[2892,2892]]],[1521806446373,[null,[[-1,916,""],[1,916,"*"],[-1,1044,"*"],[1,1045,""],[-1,1284,""],[1,1284,"*"],[-1,2610,"* "],[1,2612,"\n"],[1,2614,"注"],[-1,2615,":"],[1,2618,":"],[-1,2622,"1"],[1,2623,"必"],[-1,2672,"2"],[1,2673,"s"],[-1,2731," "],[1,2732,"那"],[-1,2774,"*"],[1,2775," "],[-1,2780," "],[1,2782,"知"],[-1,2784,":"],[1,2787,":"],[-1,2816," \n"],[1,2820,"\n"],[1,2827,"是"],[-1,2891,"\n"],[1,2892,"如"],[-1,2950," "],[1,2951,"能"],[-1,3009,"扰"],[1,3013,"也"],[-1,3059,"*"],[1,3070,"是"],[-1,3151,"\n"],[1,3152,"它"],[-1,3169," "],[1,3171,"*"],[1,3245,"*"],[-1,3247,"  "],[1,3249,"用"],[-1,3288," "],[1,3289,"*"],[-1,3373,"   "],[1,3376,"* 而"],[-1,3420," "],[1,3587,"）"],[-1,3589,"）"],[1,3633,"）"],[-1,3635,"）"],[1,3665,"）"],[-1,3667,"）"],[1,3715,"）"],[-1,3717,"）"],[-1,3810," "],[1,3816,"个"]],[916,916],[3817,3817]]],[1521806446373,[null,[[1,916,""],[-1,916,"*"],[1,1045,"*"],[-1,1045,""],[1,1284,""],[-1,1284,"*"],[1,2611,"* "],[-1,2611,"\n"],[-1,2614,"注"],[1,2616,":"],[-1,2618,":"],[1,2623,"1"],[-1,2623,"必"],[1,2673,"2"],[-1,2673,"s"],[1,2732," "],[-1,2732,"那"],[1,2775,"*"],[-1,2775," "],[1,2781," "],[-1,2782,"知"],[1,2785,":"],[-1,2787,":"],[1,2817," \n"],[-1,2819,"\n"],[-1,2827,"是"],[1,2892,"\n"],[-1,2892,"如"],[1,2951," "],[-1,2951,"能"],[1,3010,"扰"],[-1,3013,"也"],[1,3060,"*"],[-1,3070,"是"],[1,3152,"\n"],[-1,3152,"它"],[1,3170," "],[-1,3171,"*"],[-1,3246,"*"],[1,3249,"  "],[-1,3249,"用"],[1,3289," "],[-1,3289,"*"],[1,3374,"   "],[-1,3374,"* 而"],[1,3421," "],[-1,3587,"）"],[1,3590,"）"],[-1,3633,"）"],[1,3636,"）"],[-1,3665,"）"],[1,3668,"）"],[-1,3715,"）"],[1,3718,"）"],[1,3810," "],[-1,3815,"个"]],[3817,3817],[916,916]]],[1521806395750,["gengmei_pxf@gengmei123.local",[[-1,3374,"* "]],[3376,3376],[3374,3374]]],[1521806396190,["gengmei_pxf@gengmei123.local",[[-1,3373,"\n"]],[3374,3374],[3373,3373]]]]],["077edbd4-0585-4606-9e6f-f388fb8b3f5c",1521865987958,"ms6\n===\n\n# 面向对象的理解（封装，继承，多态）\n [java 面向对象三大特性（封装，继承，多态）以及抽象、接口的介绍](https://blog.csdn.net/qq_22118507/article/details/51422591)\n\n## interface 与 abstract\n**接口中所有的定义的字段默认都是public static final 的属性，写和不写没有区别**\n```\nInterface A{\n  String str=\"a\";\n}\n\nClass B implement A{\n  String str=\"b\";\n}\nB b=new B();\n输出 b.str和B.str \n答案：b，a\n``` \n\n# 单例（为什么会有并发问题）\n## 单例模式VS静态类\n\n在知道了什么是单例模式后，我想你一定会想到静态类，“既然只使用一个对象，为何不干脆使用静态类？”，这里我会将单例模式和静态类进行一个比较。\n\n1\\. 单例可以继承和被继承，方法可以被override，而静态方法不可以。\n\n2\\. 静态方法中产生的对象会在执行后被释放，进而被GC清理，不会一直存在于内存中。\n\n3\\. 静态类会在第一次运行时初始化，单例模式可以有其他的选择，即可以延迟加载。\n\n4\\. 基于2， 3条，由于单例对象往往存在于DAO层（例如sessionFactory），如果反复的初始化和释放，则会占用很多资源，而使用单例模式将其常驻于内存可以更加节约资源。\n\n5\\. 静态方法有更高的访问效率。\n\n6\\. 单例模式很容易被测试。\n\n## 几个关于静态类的误解：\n\n误解一：静态方法常驻内存而实例方法不是。\n\n实际上，特殊编写的实例方法可以常驻内存，而静态方法需要不断初始化和释放。\n\n误解二：静态方法在堆(heap)上，实例方法在栈(stack)上。\n\n实际上，都是加载到特殊的不可写的代码内存区域中。\n\n## 静态类和单例模式情景的选择：\n\n情景一：不需要维持任何状态，仅仅用于全局访问，此时更适合使用静态类。\n\n情景二：需要维持一些特定的状态，此时更适合使用单例模式。\n\n## **饿汉式与懒汉式比较**:\n         饿汉式是线程安全的,在类创建的同时就已经创建好一个静态的对象供系统使用,以后不在改变\n          懒汉式如果在创建实例对象时不加上synchronized则会导致对对象的访问不是线程安全的\n          推荐使用第一种 \n从实现方式来讲他们最大的区别就是懒汉式是延时加载,\n他是在需要的时候才创建对象,而饿汉式在虚拟机启动的时候就会创建,\n\n饿汉式无需关注多线程问题、写法简单明了、能用则用。但是它是加载类时创建实例（上面有个朋友写错了）、所以如果是一个工厂模式、缓存了很多实例、那么就得考虑效率问题，因为这个类一加载则把所有实例不管用不用一块创建。\n懒汉式的优点是延时加载、缺点是应该用同步\n\n# 锁（类锁，对象锁，方法锁，wait，sleep，notify，notifyAll）\n\n**知识一**:\n * 实现线程，有两种方法，一种是继承Thread类，一种是实现Runnable接口。\n * 本文推荐实现Runnable接口的方法。\n * 1.把需要共享的数据(可以是静态的，非静态的变量了)放在一个实现Runnable\n * 接口的类里面，然后把这个类的实例传给多个Thread的构造方法。这样，新创建\n * 的多个Thread，都共同拥有一个Runnable实例，共享同一份数据。\n * 2.如果采用继承Thread类的方法，就只好使用static静态成员了。\n * 如果共享的数据比较多，就需要大量的static静态成员，令程序数据结构混乱，\n * 难以扩展。这种情况应该尽量避免。\n *    \n * 知识二:\n * JAVA的进程同步是通过synchronized()来实现的，需要说明的是，\n * JAVA的synchronized()方法类似于操作系统概念中的互斥内存块，在JAVA中的Object类型中，\n * 都是带有一个内存锁的，在有线程获取该内存锁后，其它线程无法访问该内存，从而实现JAVA中简单的同步、互斥操作。\n * 明白这个原理，就能理解为什么synchronized(this)与synchronized(static XXX)的区别了，\n * synchronized就是针对内存区块申请内存锁，this关键字代表类的一个对象，\n * 所以其内存锁是针对相同对象的互斥操作，而static成员属于类专有，其内存空间为该类所有成员共有，\n * 这就导致synchronized()对static成员加锁，相当于对类加锁，也就是在该类的所有成员间实现互斥，\n * 在同一时间只有一个线程可访问该类的实例。如果只是简单的想要实现在JAVA中的线程互斥，明白这些基本就已经够了。\n * 但如果需要在线程间相互唤醒的话就需要借助Object.wait(), Object.nofity()了。\n * \n * Obj.wait()，与Obj.notify()必须要与synchronized(Obj)一起使用，也就是wait,\n * 与notify是针对已经获取了Obj锁进行操作，从语法角度来说就是\n * Obj.wait(),Obj.notify必须在synchronized(Obj){...}语句块内。\n * 从功能上来说wait就是说线程在获取对象锁后，主动释放对象锁，同时本线程休眠。\n * 直到有其它线程调用对象的notify()唤醒该线程，才能继续获取对象锁，并继续执行。\n * 相应的notify()就是对对象锁的唤醒操作。但有一点需要注意的是notify()调用后，\n * 并不是马上就释放对象锁的，而是在相应的synchronized(){}语句块执行结束，自动释放锁后，\n * JVM会在wait()对象锁的线程中随机选取一线程，赋予其对象锁，唤醒线程，继续执行。\n * 这样就提供了在线程间同步、唤醒的操作。Thread.sleep()与Object.wait()二者都可以暂停当前线程，\n * 释放CPU控制权，主要的区别在于Object.wait()在释放CPU同时，释放了对象锁的控制。 \n \n**注意**:\n * 必须在synchronized里面才可以使用notify,notifyAll,wait方法；\n * synchronized必须是以一个对象或者一个类做为锁资源，一旦某个线程进入这个sychronized区段，\n * 那么synchronized(这个锁资源)的所有代码地方其他多个线程都不可以进入。\n    \n **知识三**:\n * 1、synchronized关键字的作用域有二种：\n \n    （1）是某个对象实例内，synchronized aMethod(){}可以防止多个线程同时访问这个对象的synchronized方法\n如果一个对象有多个synchronized方法，只要一个线程访问了其中的一个synchronized方法，其它线程不\n能同时访问这个对象中任何一个synchronized方法）。这时，不同的对象实例的synchronized方法是不相干扰的。也就是说，其它线程照样可以同时访问相同类的另一个对象实例中的synchronized方法；\n    \n   （2）是某个类的范围，synchronized static aStaticMethod{}防止多个线程同时访问这个类中的synchronized static 方法。\n它可以对类的所有对象实例起作用。 \n\n* 2、除了方法前用synchronized关键字，synchronized关键字还可以用于方法中的某个区块中，表示只对这个区块的资源实行互斥访问。\n*  用法是: synchronized(this){区块}，它的作用域是当前对象；\n* 3、synchronized关键字是不能继承的，也就是说，基类的方法synchronized f(){} 在继承类中并不自动是synchronized f(){}，而是变成了f(){}。继承类需要你显式的指定它的某个方法为synchronized方法；\n\n# 垃圾回收\n\n# 对象的引用\n\n# 文件解析（xml，json）\n## gson，fastJson的对比\n\n## JSONObject.opt(),JSONObject.get() \n\n## JSONObject与JSONArray\n\n# 进程间通信方式（详细介绍其中一种）\n\n# Android数据存储 （本地存储，SDK存储）\n\n# 缓存机制（LRUCache）\n\n# 图片框架的内存机制（了解的有哪些，至少说出一种）\n\n# Android当中的设计模式（自己代码中运用的设计模式）\n\n# View的绘制机制\n\n# View的事件机制\n 统计用户所有的触屏事件（点击，触摸，滑动等）\n\n# Handler机制（子线程给主线程发消息，主线程给子线程发消息，Handler，Looper,Message,TheardLocal）\n\n# git版本控制\n\n# 混合开发\n\n# 组件开发整个架构图\n\n# 数据加密算法（base64，md5，aes，res）\n\n# Android的HTTP请求方式\n[Android的HTTP请求方式](https://blog.csdn.net/checkiming/article/details/73824924)\n\n[Android中的HTTP通信](http://www.cnblogs.com/mercuryli/p/5600027.html)\n\n[Android中的Http通信](http://www.imooc.com/learn/304)\n\n# Retrofit与okhttp\n\n# Restful风格是啥\n\n# 将一个链表逆序\n\n# 负责的项目，遇到的难点，解决方案\n\n# 开放性问题\n\n## 有一个深圳的号，有一个朋友在上海，你来到北京，为啥他还能和你打电话通信\n\n## 选择一个日期，规定无论是哪一年这个日期必须在周一到周五之间\n\n## 三峡修大坝，怎么预测下游的淤沙会不会对下游的居民有影响\n\n",[[1521865960854,["gengmei_pxf@gengmei123.local",[[1,1356,"\n"]],[1356,1356],[1357,1357]]],[1521865964810,["gengmei_pxf@gengmei123.local",[[1,1332,"\n"]],[1332,1332],[1333,1333]]],[1521865970036,["gengmei_pxf@gengmei123.local",[[1,1278,"### "]],[1278,1278],[1282,1282]]],[1521865973969,["gengmei_pxf@gengmei123.local",[[-1,1337,"*"],[1,1338,"####"]],[1337,1338],[1341,1341]]],[1521865979090,["gengmei_pxf@gengmei123.local",[[-1,1409,"*"]],[1410,1410],[1409,1409]]],[1521865982073,["gengmei_pxf@gengmei123.local",[[-1,1449," *"]],[1451,1451],[1449,1449]]],[1521865982463,["gengmei_pxf@gengmei123.local",[[-1,1448,"\n"]],[1449,1449],[1448,1448]]],[1521865984153,["gengmei_pxf@gengmei123.local",[[-1,1448," "]],[1449,1449],[1448,1448]]],[1521865986497,["gengmei_pxf@gengmei123.local",[[-1,1408,"  "]],[1410,1410],[1408,1408]]],[1521865986889,["gengmei_pxf@gengmei123.local",[[-1,1407,"\n"]],[1408,1408],[1407,1407]]],[1521865989465,["gengmei_pxf@gengmei123.local",[[1,1483,"\n"]],[1483,1483],[1484,1484]]],[1521865992519,["gengmei_pxf@gengmei123.local",[[-1,1524,"*"]],[1525,1525],[1524,1524]]],[1521866000353,["gengmei_pxf@gengmei123.local",[[-1,1564," * "]],[1567,1567],[1564,1564]]],[1521866000969,["gengmei_pxf@gengmei123.local",[[-1,1563,"\n"]],[1564,1564],[1563,1563]]],[1521866004240,["gengmei_pxf@gengmei123.local",[[-1,1580," *    "]],[1586,1586],[1580,1580]]],[1521866010642,["gengmei_pxf@gengmei123.local",[[-1,1581," *"],[1,1583,"###"]],[1581,1583],[1584,1584]]],[1521866013016,["gengmei_pxf@gengmei123.local",[[-1,1282,"**"]],[1284,1284],[1282,1282]]],[1521866014728,["gengmei_pxf@gengmei123.local",[[-1,1285,"**"]],[1287,1287],[1285,1285]]],[1521866020447,["gengmei_pxf@gengmei123.local",[[1,1587,"\n"]],[1587,1587],[1588,1588]]],[1521866025058,["gengmei_pxf@gengmei123.local",[[1,1588," "]],[1588,1588],[1589,1589]]],[1521866034167,["gengmei_pxf@gengmei123.local",[[-1,1630," * "]],[1633,1633],[1630,1630]]],[1521866034927,["gengmei_pxf@gengmei123.local",[[-1,1629,"\n"]],[1630,1630],[1629,1629]]],[1521866038008,["gengmei_pxf@gengmei123.local",[[-1,1685," * "]],[1688,1688],[1685,1685]]],[1521866038383,["gengmei_pxf@gengmei123.local",[[-1,1684,"\n"]],[1685,1685],[1684,1684]]],[1521866041303,["gengmei_pxf@gengmei123.local",[[-1,1740," * "]],[1743,1743],[1740,1740]]],[1521866041727,["gengmei_pxf@gengmei123.local",[[-1,1739,"\n"]],[1740,1740],[1739,1739]]],[1521866048205,["gengmei_pxf@gengmei123.local",[[1,1803,"\n"]],[1803,1803],[1804,1804]]],[1521866055366,["gengmei_pxf@gengmei123.local",[[-1,1848,"\n * "]],[1848,1852],[1848,1848]]],[1521866059598,["gengmei_pxf@gengmei123.local",[[-1,1897,"\n * "]],[1897,1901],[1897,1897]]],[1521866067062,["gengmei_pxf@gengmei123.local",[[-1,1952,"\n * "]],[1952,1956],[1952,1952]]],[1521866075789,["gengmei_pxf@gengmei123.local",[[-1,2008," * "]],[2011,2011],[2008,2008]]],[1521866078266,["gengmei_pxf@gengmei123.local",[[1,2008," * "]],[2008,2008],[2011,2011]]],[1521866080789,["gengmei_pxf@gengmei123.local",[[-1,2008," "]],[2009,2009],[2008,2008]]],[1521866081349,["gengmei_pxf@gengmei123.local",[[1,2008,"\n"]],[2008,2008],[2009,2009]]],[1521866084124,["gengmei_pxf@gengmei123.local",[[-1,2064," *"]],[2066,2066],[2064,2064]]],[1521866108628,["gengmei_pxf@gengmei123.local",[[-1,2127,"\n * "]],[2127,2131],[2127,2127]]],[1521866111908,["gengmei_pxf@gengmei123.local",[[-1,2160,"\n * "]],[2160,2164],[2160,2160]]],[1521866115260,["gengmei_pxf@gengmei123.local",[[-1,2183,"在"]],[2184,2184],[2183,2183]]],[1521866122542,["gengmei_pxf@gengmei123.local",[[1,2151,"**"]],[2151,2151],[2153,2153]]],[1521866126262,["gengmei_pxf@gengmei123.local",[[1,2160,"**"]],[2160,2160],[2162,2162]]],[1521866129347,["gengmei_pxf@gengmei123.local",[[-1,2215," * "]],[2218,2218],[2215,2215]]],[1521866129739,["gengmei_pxf@gengmei123.local",[[-1,2214,"\n"]],[2215,2215],[2214,2214]]],[1521866130926,["gengmei_pxf@gengmei123.local",[[1,2214,"**"]],[2214,2214],[2216,2216]]],[1521866133798,["gengmei_pxf@gengmei123.local",[[1,2222,"**"]],[2222,2222],[2224,2224]]],[1521866136246,["gengmei_pxf@gengmei123.local",[[1,2214," "]],[2214,2214],[2215,2215]]],[1521866139244,["gengmei_pxf@gengmei123.local",[[1,2225," "]],[2225,2225],[2226,2226]]],[1521866154074,["gengmei_pxf@gengmei123.local",[[-1,2260," * "]],[2263,2263],[2260,2260]]],[1521866154464,["gengmei_pxf@gengmei123.local",[[-1,2259,"\n"]],[2260,2260],[2259,2259]]],[1521866163051,["gengmei_pxf@gengmei123.local",[[-1,2150,"，"]],[2151,2151],[2150,2150]]],[1521866163813,["gengmei_pxf@gengmei123.local",[[1,2150,"。"]],[2150,2150],[2151,2151]]],[1521866164473,["gengmei_pxf@gengmei123.local",[[1,2151,"\n"]],[2151,2151],[2152,2152]]],[1521866165121,["gengmei_pxf@gengmei123.local",[[1,2152,"\n"]],[2152,2152],[2153,2153]]],[1521866167297,["gengmei_pxf@gengmei123.local",[[1,2217,"\n"]],[2217,2217],[2218,2218]]],[1521866168063,["gengmei_pxf@gengmei123.local",[[1,2218,"\n"]],[2218,2218],[2219,2219]]],[1521866171787,["gengmei_pxf@gengmei123.local",[[1,2307,"\n"]],[2307,2307],[2308,2308]]],[1521866175721,["gengmei_pxf@gengmei123.local",[[-1,2355,"\n * "]],[2355,2359],[2355,2355]]],[1521866181169,["gengmei_pxf@gengmei123.local",[[-1,2405,"\n * "]],[2405,2409],[2405,2405]]],[1521866188521,["gengmei_pxf@gengmei123.local",[[-1,2449," * "]],[2452,2452],[2449,2449]]],[1521866189585,["gengmei_pxf@gengmei123.local",[[-1,2448,"\n"]],[2449,2449],[2448,2448]]],[1521866193265,["gengmei_pxf@gengmei123.local",[[-1,2508," * "]],[2511,2511],[2508,2508]]],[1521866193681,["gengmei_pxf@gengmei123.local",[[-1,2507,"\n"]],[2508,2508],[2507,2507]]],[1521866204248,["gengmei_pxf@gengmei123.local",[[-1,2727,"**"],[1,2729,"### "]],[2727,2729],[2731,2731]]],[1521866205712,["gengmei_pxf@gengmei123.local",[[-1,2734,"**"]],[2736,2736],[2734,2734]]],[1521866215674,["gengmei_pxf@gengmei123.local",[[-1,2768,"   "]],[2771,2771],[2768,2768]]],[1521866223072,["gengmei_pxf@gengmei123.local",[[-1,3011,"（"]],[3012,3012],[3011,3011]]],[1521866223972,["gengmei_pxf@gengmei123.local",[[1,3011,"（"]],[3011,3011],[3012,3012]]],[1521866225567,["gengmei_pxf@gengmei123.local",[[-1,3008,"   "]],[3011,3011],[3008,3008]]],[1521866253518,["gengmei_pxf@gengmei123.local",[[-1,3186,"\n*  "]],[3186,3190],[3186,3186]]],[1521866256158,["gengmei_pxf@gengmei123.local",[[-1,3226,"* "]],[3228,3228],[3226,3226]]],[1521866257596,["gengmei_pxf@gengmei123.local",[[1,3226,"\n"]],[3226,3226],[3227,3227]]],[1521866258937,["gengmei_pxf@gengmei123.local",[[1,3227,"* "]],[3227,3227],[3229,3229]]],[1521866295465,["gengmei_pxf@gengmei123.local",[[-1,3354,"；"]],[3355,3355],[3354,3354]]],[1521866296084,["gengmei_pxf@gengmei123.local",[[1,3354,"、"]],[3354,3354],[3355,3355]]],[1521866296736,["gengmei_pxf@gengmei123.local",[[-1,3354,"、"]],[3355,3355],[3354,3354]]],[1521866297068,["gengmei_pxf@gengmei123.local",[[1,3354,"。"]],[3354,3354],[3355,3355]]],[1521866302370,["gengmei_pxf@gengmei123.local",[[-1,2726," "]],[2727,2727],[2726,2726]]],[1521866343007,["gengmei_pxf@gengmei123.local",[[1,3356,"\n"]],[3354,3354],[3355,3355]]],[1521866343742,["gengmei_pxf@gengmei123.local",[[1,3357,"\n"]],[3355,3355],[3356,3356]]],[1521866355017,["gengmei_pxf@gengmei123.local",[[1,3356,"### 知识四："]],[3356,3356],[3364,3364]]],[1521866355445,["gengmei_pxf@gengmei123.local",[[1,3366,"\n"]],[3364,3364],[3365,3365]]],[1521866357261,["gengmei_pxf@gengmei123.local",[[1,3367,"\n"]],[3365,3365],[3366,3366]]],[1521866357772,["gengmei_pxf@gengmei123.local",[[1,3366,"wait() 和 sleep() 的区别：\n\n（1）.核心区别：sleep用于线程控制，wait用于线程间的通信。\n（2），wait() 执行后，释放执行权，也释放锁，与它同步的线程或者其它的线程都可以拿到执行权。\n（3），sleep() 执行后，释放执行权，但不释放锁，即与它不拥有同一个锁的线程可以拿到执行权，但与它同步的线程不可以拿到执行权。"]],[3366,3366],[3540,3540]]],[1521866361976,["gengmei_pxf@gengmei123.local",[[1,3389,"*"]],[3389,3389],[3390,3390]]],[1521866363639,["gengmei_pxf@gengmei123.local",[[1,3425,"*"]],[3425,3425],[3426,3426]]],[1521866365837,["gengmei_pxf@gengmei123.local",[[1,3476,"*"]],[3476,3476],[3477,3477]]],[1521866369016,["gengmei_pxf@gengmei123.local",[[1,3390," "]],[3390,3390],[3391,3391]]],[1521866370503,["gengmei_pxf@gengmei123.local",[[1,3427," "]],[3427,3427],[3428,3428]]],[1521866371512,["gengmei_pxf@gengmei123.local",[[1,3479," "]],[3479,3479],[3480,3480]]],[1521866377275,["gengmei_pxf@gengmei123.local",[[-1,3431,"，"]],[3432,3432],[3431,3431]]],[1521866381085,["gengmei_pxf@gengmei123.local",[[-1,3481,"），"]],[3482,3483],[3481,3481]]],[1521866381839,["gengmei_pxf@gengmei123.local",[[1,3481," "]],[3481,3481],[3482,3482]]],[1521866385704,["gengmei_pxf@gengmei123.local",[[-1,3479,"（3 "]],[3482,3482],[3479,3479]]],[1521866388384,["gengmei_pxf@gengmei123.local",[[-1,3428,"（2）"]],[3428,3431],[3428,3428]]],[1521866390464,["gengmei_pxf@gengmei123.local",[[-1,3391,"（1）."]],[3391,3395],[3391,3391]]],[1521866764833,["gengmei_pxf@gengmei123.local",[[-1,3555,"文件"]],[3557,3557],[3555,3555]]],[1521866766222,["gengmei_pxf@gengmei123.local",[[1,3555,"数据"]],[3555,3555],[3557,3557]]],[1521870848827,["gengmei_pxf@gengmei123.local",[[-1,3594,"JSONObject.opt(),JSONObject.get()"],[1,3627,"# Json解析值get与opt的区别"]],[3594,3627],[3613,3613]]],[1521870851519,["gengmei_pxf@gengmei123.local",[[-1,3593," #"]],[3595,3595],[3593,3593]]],[1521870853700,["gengmei_pxf@gengmei123.local",[[1,3614,"\n"]],[3612,3612],[3613,3613]]],[1521870862674,["gengmei_pxf@gengmei123.local",[[1,3613,"## **optString与getString的区别：**\n\noptString会在得不到你想要的值时候返回空字符串“ ”或指定的默认值，而getString会抛出异常。\n\noptString可以解决服务器字段缺少或者没有该字段而导致的异常以至于程序崩溃。\n\n推荐使用optString，可避免接口字段的缺失、value的数据类型转换等异常。"]],[3613,3613],[3785,3785]]],[1521870867390,["gengmei_pxf@gengmei123.local",[[-1,3613,"## **optString与getString的区别：**"]],[3616,3616],[3613,3613]]],[1521870867750,["gengmei_pxf@gengmei123.local",[[-1,3614,"\n"]],[3613,3613],[3612,3612]]],[1521870871800,["gengmei_pxf@gengmei123.local",[[1,3614,"* "]],[3614,3614],[3616,3616]]],[1521870874624,["gengmei_pxf@gengmei123.local",[[1,3672,"* "]],[3672,3672],[3674,3674]]],[1521870882763,["gengmei_pxf@gengmei123.local",[[1,3717,"* "]],[3717,3717],[3719,3719]]],[1521870887899,["gengmei_pxf@gengmei123.local",[[-1,3619,"String"]],[3616,3625],[3619,3619]]],[1521870888994,["gengmei_pxf@gengmei123.local",[[-1,3671,"String"]],[3668,3677],[3671,3671]]],[1521870890379,["gengmei_pxf@gengmei123.local",[[-1,3714,"String"]],[3711,3720],[3714,3714]]],[1521870895305,["gengmei_pxf@gengmei123.local",[[-1,3650,"etString"]],[3649,3658],[3650,3650]]],[1521870895665,["gengmei_pxf@gengmei123.local",[[1,3650,"et"]],[3650,3650],[3652,3652]]],[1521870908584,["gengmei_pxf@gengmei123.local",[[1,3640,"huo"]],[3640,3640],[3643,3643]]],[1521870909645,["gengmei_pxf@gengmei123.local",[[-1,3640,"huo"]],[3643,3643],[3640,3640]]],[1521870913449,["gengmei_pxf@gengmei123.local",[[1,3641,"或null"]],[3640,3640],[3645,3645]]],[1521870934411,[null,[[-1,3641,"或"],[1,3646,"或"]],[3641,3641],[3647,3647]]],[1521870934411,[null,[[1,3641,"或"],[-1,3645,"或"]],[3647,3647],[3641,3641]]],[1521870932751,["gengmei_pxf@gengmei123.local",[[-1,3743,"## JSONObject与JSONArray\n"]],[3743,3767],[3743,3743]]],[1521870933055,["gengmei_pxf@gengmei123.local",[[-1,3743,"\n"]],[3743,3743],[3742,3742]]],[1521870933407,["gengmei_pxf@gengmei123.local",[[-1,3742,"\n"]],[3742,3742],[3741,3741]]],[1521870980121,[null,[[-1,3641,"或"],[1,3646,"或"]],[3641,3641],[3647,3647]]],[1521870980121,[null,[[1,3641,"或"],[-1,3645,"或"]],[3647,3647],[3641,3641]]],[1521870975364,["gengmei_pxf@gengmei123.local",[[1,3570,"\n"]],[3569,3569],[3570,3570]]],[1521870975856,["gengmei_pxf@gengmei123.local",[[1,3570," [## Android JSON vs XML](https://pxfile.github.io/2018/03/24/JSON-vs-XML/)"]],[3570,3570],[3645,3645]]],[1521870978925,["gengmei_pxf@gengmei123.local",[[-1,3572,"## "]],[3575,3575],[3572,3572]]],[1521871038642,[null,[[-1,3714,"或"],[1,3719,"或"]],[3714,3714],[3720,3720]]],[1521871038642,[null,[[1,3714,"或"],[-1,3718,"或"]],[3720,3720],[3714,3714]]],[1521871020194,["gengmei_pxf@gengmei123.local",[[1,4342,"\n"]],[4340,4340],[4341,4341]]],[1521871021090,["gengmei_pxf@gengmei123.local",[[1,4343,"\n"]],[4341,4341],[4342,4342]]],[1521871022014,["gengmei_pxf@gengmei123.local",[[1,4342,"# Android中的HTTP通信[](https://pxfile.github.io/2018/03/23/Android%E4%B8%AD%E7%9A%84HTTP%E9%80%9A%E4%BF%A1/#android%E4%B8%AD%E7%9A%84http%E9%80%9A%E4%BF%A1)"]],[4342,4342],[4495,4495]]],[1521871031229,["gengmei_pxf@gengmei123.local",[[-1,4344,"Android中的HTTP通信"]],[4344,4359],[4344,4344]]],[1521871033682,["gengmei_pxf@gengmei123.local",[[1,4345,"Android中的HTTP通信"]],[4345,4345],[4360,4360]]],[1521871036802,["gengmei_pxf@gengmei123.local",[[-1,4342,"# "]],[4344,4344],[4342,4342]]],[1521871158656,[null,[[-1,3714,"或"],[1,3719,"或"]],[3714,3714],[3720,3720]]],[1521871158656,[null,[[1,3714,"或"],[-1,3718,"或"]],[3720,3720],[3714,3714]]],[1521871156891,["gengmei_pxf@gengmei123.local",[[1,3833," "]],[3833,3833],[3834,3834]]],[1521871168243,[null,[[-1,3714,"或"],[1,3719,"或"]],[3714,3714],[3720,3720]]],[1521871168243,[null,[[1,3714,"或"],[-1,3718,"或"]],[3720,3720],[3714,3714]]],[1521871167233,["gengmei_pxf@gengmei123.local",[[1,3834,"例如ContentProvider"]],[3834,3834],[3851,3851]]],[1521873268297,[null,[[-1,3714,"或"],[1,3719,"或"]],[3714,3714],[3720,3720]]],[1521873268298,[null,[[1,3714,"或"],[-1,3718,"或"]],[3720,3720],[3714,3714]]],[1521873250131,["gengmei_pxf@gengmei123.local",[[1,3882,"\n"]],[3880,3880],[3881,3881]]],[1521873250813,["gengmei_pxf@gengmei123.local",[[1,3881,"# Android 内置和外置存储卡"]],[3881,3881],[3899,3899]]],[1521873252163,["gengmei_pxf@gengmei123.local",[[-1,3881,"# Android 内置和外置存储卡"]],[3899,3899],[3881,3881]]],[1521873254886,["gengmei_pxf@gengmei123.local",[[1,3881,"[]()"]],[3881,3881],[3885,3885]]],[1521873256358,["gengmei_pxf@gengmei123.local",[[1,3882,"# Android 内置和外置存储卡"]],[3882,3882],[3900,3900]]],[1521873259363,["gengmei_pxf@gengmei123.local",[[-1,3882,"# "]],[3884,3884],[3882,3882]]],[1521873266781,["gengmei_pxf@gengmei123.local",[[1,3900,"https://pxfile.github.io/2018/03/24/Android-内置和外置存储卡/"]],[3900,3900],[3953,3953]]]]],["4128ff89-8dc5-4631-8e13-4f158006d3a6",1521875320526,"ms6\n===\n\n# 面向对象的理解（封装，继承，多态）\n [java 面向对象三大特性（封装，继承，多态）以及抽象、接口的介绍](https://blog.csdn.net/qq_22118507/article/details/51422591)\n\n## interface 与 abstract\n**接口中所有的定义的字段默认都是public static final 的属性，写和不写没有区别**\n```\nInterface A{\n  String str=\"a\";\n}\n\nClass B implement A{\n  String str=\"b\";\n}\nB b=new B();\n输出 b.str和B.str \n答案：b，a\n``` \n\n# 单例（为什么会有并发问题）\n## 单例模式VS静态类\n\n在知道了什么是单例模式后，我想你一定会想到静态类，“既然只使用一个对象，为何不干脆使用静态类？”，这里我会将单例模式和静态类进行一个比较。\n\n1\\. 单例可以继承和被继承，方法可以被override，而静态方法不可以。\n\n2\\. 静态方法中产生的对象会在执行后被释放，进而被GC清理，不会一直存在于内存中。\n\n3\\. 静态类会在第一次运行时初始化，单例模式可以有其他的选择，即可以延迟加载。\n\n4\\. 基于2， 3条，由于单例对象往往存在于DAO层（例如sessionFactory），如果反复的初始化和释放，则会占用很多资源，而使用单例模式将其常驻于内存可以更加节约资源。\n\n5\\. 静态方法有更高的访问效率。\n\n6\\. 单例模式很容易被测试。\n\n## 几个关于静态类的误解：\n\n误解一：静态方法常驻内存而实例方法不是。\n\n实际上，特殊编写的实例方法可以常驻内存，而静态方法需要不断初始化和释放。\n\n误解二：静态方法在堆(heap)上，实例方法在栈(stack)上。\n\n实际上，都是加载到特殊的不可写的代码内存区域中。\n\n## 静态类和单例模式情景的选择：\n\n情景一：不需要维持任何状态，仅仅用于全局访问，此时更适合使用静态类。\n\n情景二：需要维持一些特定的状态，此时更适合使用单例模式。\n\n## **饿汉式与懒汉式比较**:\n         饿汉式是线程安全的,在类创建的同时就已经创建好一个静态的对象供系统使用,以后不在改变\n          懒汉式如果在创建实例对象时不加上synchronized则会导致对对象的访问不是线程安全的\n          推荐使用第一种 \n从实现方式来讲他们最大的区别就是懒汉式是延时加载,\n他是在需要的时候才创建对象,而饿汉式在虚拟机启动的时候就会创建,\n\n饿汉式无需关注多线程问题、写法简单明了、能用则用。但是它是加载类时创建实例（上面有个朋友写错了）、所以如果是一个工厂模式、缓存了很多实例、那么就得考虑效率问题，因为这个类一加载则把所有实例不管用不用一块创建。\n懒汉式的优点是延时加载、缺点是应该用同步\n\n# 锁（类锁，对象锁，方法锁，wait，sleep，notify，notifyAll）\n\n### 知识一:\n * 实现线程，有两种方法，一种是继承Thread类，一种是实现Runnable接口。\n \n#### 本文推荐实现Runnable接口的方法。\n \n* 1.把需要共享的数据(可以是静态的，非静态的变量了)放在一个实现Runnable接口的类里面，然后把这个类的实例传给多个Thread的构造方法。这样，新创建的多个Thread，都共同拥有一个Runnable实例，共享同一份数据。\n \n* 2.如果采用继承Thread类的方法，就只好使用static静态成员了。\n  如果共享的数据比较多，就需要大量的static静态成员，令程序数据结构混乱，难以扩展。这种情况应该尽量避免。\n\n### 知识二:\n \n * JAVA的进程同步是通过synchronized()来实现的，需要说明的是，JAVA的synchronized()方法类似于操作系统概念中的互斥内存块，在JAVA中的Object类型中，都是带有一个内存锁的，在有线程获取该内存锁后，其它线程无法访问该内存，从而实现JAVA中简单的同步、互斥操作。明白这个原理，就能理解为什么synchronized(this)与synchronized(static XXX)的区别了，\n \n* synchronized就是针对内存区块申请内存锁，this关键字代表类的一个对象，所以其内存锁是针对相同对象的互斥操作，而static成员属于类专有，其内存空间为该类所有成员共有，这就导致synchronized()对static成员加锁，相当于对类加锁，也就是在该类的所有成员间实现互斥，在同一时间只有一个线程可访问该类的实例。如果只是简单的想要实现在JAVA中的线程互斥，明白这些基本就已经够了。\n\n* 但如果需要在线程间相互唤醒的话就需要借助Object.wait(), Object.nofity()了。\n \n * Obj.wait()，与Obj.notify()必须要与synchronized(Obj)一起使用，也就是wait,与notify是针对已经获取了Obj锁进行操作。\n\n**从语法角度来说**就是Obj.wait(),Obj.notify必须synchronized(Obj){...}语句块内。 \n\n**从功能上来说** wait就是说线程在获取对象锁后，主动释放对象锁，同时本线程休眠。直到有其它线程调用对象的notify()唤醒该线程，才能继续获取对象锁，并继续执行。\n \n* 相应的notify()就是对对象锁的唤醒操作。但有一点需要注意的是notify()调用后，并不是马上就释放对象锁的，而是在相应的synchronized(){}语句块执行结束，自动释放锁后，JVM会在wait()对象锁的线程中随机选取一线程，赋予其对象锁，唤醒线程，继续执行。这样就提供了在线程间同步、唤醒的操作。Thread.sleep()与Object.wait()二者都可以暂停当前线程，释放CPU控制权，主要的区别在于Object.wait()在释放CPU同时，释放了对象锁的控制。 \n \n**注意**:\n * 必须在synchronized里面才可以使用notify,notifyAll,wait方法；\n * synchronized必须是以一个对象或者一个类做为锁资源，一旦某个线程进入这个sychronized区段，\n * 那么synchronized(这个锁资源)的所有代码地方其他多个线程都不可以进入。\n    \n### 知识三:\n * 1、synchronized关键字的作用域有二种：\n \n （1）是某个对象实例内，synchronized aMethod(){}可以防止多个线程同时访问这个对象的synchronized方法\n如果一个对象有多个synchronized方法，只要一个线程访问了其中的一个synchronized方法，其它线程不\n能同时访问这个对象中任何一个synchronized方法）。这时，不同的对象实例的synchronized方法是不相干扰的。也就是说，其它线程照样可以同时访问相同类的另一个对象实例中的synchronized方法；\n    \n（2）是某个类的范围，synchronized static aStaticMethod{}防止多个线程同时访问这个类中的synchronized static 方法。\n它可以对类的所有对象实例起作用。 \n\n* 2、除了方法前用synchronized关键字，synchronized关键字还可以用于方法中的某个区块中，表示只对这个区块的资源实行互斥访问。用法是: synchronized(this){区块}，它的作用域是当前对象；\n\n* 3、synchronized关键字是不能继承的，也就是说，基类的方法synchronized f(){} 在继承类中并不自动是synchronized f(){}，而是变成了f(){}。继承类需要你显式的指定它的某个方法为synchronized方法。\n\n### 知识四：\n\nwait() 和 sleep() 的区别：\n\n* 核心区别：sleep用于线程控制，wait用于线程间的通信。\n* wait() 执行后，释放执行权，也释放锁，与它同步的线程或者其它的线程都可以拿到执行权。\n* sleep() 执行后，释放执行权，但不释放锁，即与它不拥有同一个锁的线程可以拿到执行权，但与它同步的线程不可以拿到执行权。\n\n# 垃圾回收\n\n# 对象的引用\n\n# 数据解析（xml，json）\n [Android JSON vs XML](https://pxfile.github.io/2018/03/24/JSON-vs-XML/)\n## gson，fastJson的对比\n\n## Json解析值get与opt的区别 \n\n* opt会在得不到你想要的值时候返回空字符串“ ”或null或指定的默认值，而get会抛出异常。\n\n* opt可以解决服务器字段缺少或者没有该字段而导致的异常以至于程序崩溃。\n\n* 推荐使用opt，可避免接口字段的缺失、value的数据类型转换等异常。\n# 进程间通信方式（详细介绍其中一种 例如ContentProvider）\n\n# Android数据存储 （本地存储，SDK存储）\n[Android 内置和外置存储卡](https://pxfile.github.io/2018/03/24/Android-内置和外置存储卡/)\n\n# 缓存机制（LRUCache）\n\n# 图片框架的内存机制（了解的有哪些，至少说出一种）\n\n# Android当中的设计模式（自己代码中运用的设计模式）\n\n# View的绘制机制\n\n# View的事件机制\n 统计用户所有的触屏事件（点击，触摸，滑动等）\n\n# Handler机制（子线程给主线程发消息，主线程给子线程发消息，Handler，Looper,Message,TheardLocal）\n\n# git版本控制\n\n# 混合开发\n\n# 组件开发整个架构图\n\n# 数据加密算法（base64，md5，aes，res）\n\n# Android的HTTP请求方式\n[Android的HTTP请求方式](https://blog.csdn.net/checkiming/article/details/73824924)\n\n[Android中的HTTP通信](http://www.cnblogs.com/mercuryli/p/5600027.html)\n\n[Android中的Http通信](http://www.imooc.com/learn/304)\n\n[Android中的HTTP通信](https://pxfile.github.io/2018/03/23/Android%E4%B8%AD%E7%9A%84HTTP%E9%80%9A%E4%BF%A1/#android%E4%B8%AD%E7%9A%84http%E9%80%9A%E4%BF%A1)\n\n# Retrofit与okhttp\n\n# Restful风格是啥\n\n# 将一个链表逆序\n\n# 负责的项目，遇到的难点，解决方案\n\n# 开放性问题\n\n## 有一个深圳的号，有一个朋友在上海，你来到北京，为啥他还能和你打电话通信\n\n## 选择一个日期，规定无论是哪一年这个日期必须在周一到周五之间\n\n## 三峡修大坝，怎么预测下游的淤沙会不会对下游的居民有影响\n\n",[[1521875310143,["gengmei_pxf@gengmei123.local",[[1,4002,"\n"]],[4000,4000],[4001,4001]]],[1521875310503,["gengmei_pxf@gengmei123.local",[[1,4003,"\n"]],[4001,4001],[4002,4002]]],[1521878030666,["gengmei_pxf@gengmei123.local",[[1,4002,"* * *\n\n [## Android图片缓存框架特性对比\n\nAndroid图片缓存框架特性对比 Android 三大图片缓存原理、特性对比 基本信息 一. 四大图片缓存基本信息 Universal ImageLoader 是很早开源的图片缓存，在早期被很多应用使用。 Picasso 是 Square 开源的项目，且他的主导者是 JakeWharton，所以广为人知。 Glide 是 Google 员工的开源项目，被一些 Google Ap...](https://pxfile.github.io/2018/03/24/Android%E5%9B%BE%E7%89%87%E7%BC%93%E5%AD%98%E6%A1%86%E6%9E%B6%E7%89%B9%E6%80%A7%E5%AF%B9%E6%AF%94/) \n\nPosted by pxf on March 24, 2018"]],[4002,4002],[4398,4398]]],[1521878033341,["gengmei_pxf@gengmei123.local",[[-1,4002,"* * *"]],[4002,4007],[4002,4002]]],[1521878033533,["gengmei_pxf@gengmei123.local",[[-1,4003,"\n"]],[4002,4002],[4001,4001]]],[1521878033844,["gengmei_pxf@gengmei123.local",[[-1,4002,"\n"]],[4001,4001],[4000,4000]]],[1521878037099,["gengmei_pxf@gengmei123.local",[[-1,4004,"## "]],[4007,4007],[4004,4004]]],[1521878040884,["gengmei_pxf@gengmei123.local",[[-1,4023,"Android图片缓存框架特性对比 Android 三大图片缓存原理、特性对比 基本信息 一. 四大图片缓存基本信息 Universal ImageLoader 是很早开源的图片缓存，在早期被很多应用使用。 Picasso 是 Square 开源的项目，且他的主导者是 JakeWharton，所以广为人知。 Glide 是 Google 员工的开源项目，被一些 Google Ap...]"]],[4023,4218],[4023,4023]]],[1521878041388,["gengmei_pxf@gengmei123.local",[[-1,4022,"\n"]],[4023,4023],[4022,4022]]],[1521878045143,["gengmei_pxf@gengmei123.local",[[1,4021,"】"]],[4021,4021],[4022,4022]]],[1521878046069,["gengmei_pxf@gengmei123.local",[[-1,4021,"】"]],[4022,4022],[4021,4021]]],[1521878046496,["gengmei_pxf@gengmei123.local",[[1,4021,"]"]],[4021,4021],[4022,4022]]],[1521878057044,["gengmei_pxf@gengmei123.local",[[-1,4002," "]],[4003,4003],[4002,4002]]],[1521878060676,["gengmei_pxf@gengmei123.local",[[-1,4021,"\n"]],[4022,4022],[4021,4021]]],[1521878066889,["gengmei_pxf@gengmei123.local",[[-1,4160,"Posted by pxf on March 24, 2018\n"]],[4159,4191],[4159,4159]]],[1521878067276,["gengmei_pxf@gengmei123.local",[[-1,4160,"\n"]],[4159,4159],[4158,4158]]],[1521878137441,["gengmei_pxf@gengmei123.local",[[1,3553,"\n"]],[3551,3551],[3552,3552]]],[1521878139076,["gengmei_pxf@gengmei123.local",[[1,3552,"[]()"]],[3552,3552],[3556,3556]]],[1521878140532,["gengmei_pxf@gengmei123.local",[[1,3553,"# android四种引用的详解"]],[3553,3553],[3569,3569]]],[1521878143671,["gengmei_pxf@gengmei123.local",[[-1,3553,"# "]],[3555,3555],[3553,3553]]],[1521878149354,["gengmei_pxf@gengmei123.local",[[1,3569,"https://pxfile.github.io/2018/03/16/Android%E5%9B%9B%E7%A7%8D%E5%BC%95%E7%94%A8%E7%9A%84%E8%AF%A6%E8%A7%A3/"]],[3569,3569],[3676,3676]]],[1521878189712,["gengmei_pxf@gengmei123.local",[[1,4099,"[]()"]],[4099,4099],[4103,4103]]],[1521878191162,["gengmei_pxf@gengmei123.local",[[1,4100,"# LRUCache原理"]],[4100,4100],[4112,4112]]],[1521878200441,["gengmei_pxf@gengmei123.local",[[1,4114,"https://pxfile.github.io/2018/03/02/LRUCache%E5%8E%9F%E7%90%86/"]],[4114,4114],[4177,4177]]],[1521878202447,["gengmei_pxf@gengmei123.local",[[-1,4100,"# "]],[4102,4102],[4100,4100]]],[1521878204815,["gengmei_pxf@gengmei123.local",[[1,4099,"\n"]],[4098,4098],[4099,4099]]],[1521878206430,["gengmei_pxf@gengmei123.local",[[1,4178,"\n"]],[4178,4178],[4179,4179]]],[1521878468318,["gengmei_pxf@gengmei123.local",[[1,4397,"\n"]],[4395,4395],[4396,4396]]],[1521878486334,["gengmei_pxf@gengmei123.local",[[1,4396,"[Android中的设计模式](https://pxfile.github.io/2018/03/08/Android%E4%B8%AD%E7%9A%84%E8%AE%BE%E8%AE%A1%E6%A8%A1%E5%BC%8F/)\n\n1.单例 全局性 减少对象创建，降低系统内存的消耗，减少gc次数和卡顿时间 初始化资源的工具类\n2.创建者模式 创建对象的参数很多且不定，参数个数和类型不确定， AlertDialog glide okhttp\n3.适配器模式 baseAdapter\n4.装饰模式 context\n5.外观模式 contextImple\n6.策略模式 属性动画 插值器\n7.组合模式 view和viewGroup\n8.模板方法 Activity fragment\n9.观察者模式 RxJava\n10.责任链模式 try catch，事件分发机制"]],[4396,4396],[4777,4777]]],[1521878749077,["gengmei_pxf@gengmei123.local",[[1,4804,"\n"]],[4803,4803],[4804,4804]]],[1521878751390,["gengmei_pxf@gengmei123.local",[[1,4804,"[]()"]],[4804,4804],[4808,4808]]],[1521878752921,["gengmei_pxf@gengmei123.local",[[1,4805,"# View事件传递机制"]],[4805,4805],[4817,4817]]],[1521878756482,["gengmei_pxf@gengmei123.local",[[-1,4805,"# "]],[4806,4806],[4805,4805]]],[1521878761790,["gengmei_pxf@gengmei123.local",[[1,4817,"https://pxfile.github.io/2018/03/16/View%E4%BA%8B%E4%BB%B6%E4%BC%A0%E9%80%92%E6%9C%BA%E5%88%B6/"]],[4817,4817],[4912,4912]]],[1521878763637,["gengmei_pxf@gengmei123.local",[[1,4915,"\n"]],[4915,4915],[4916,4916]]],[1521878779026,["gengmei_pxf@gengmei123.local",[[1,4792,"\n"]],[4791,4791],[4792,4792]]],[1521878779202,["gengmei_pxf@gengmei123.local",[[1,4793,"\n"]],[4792,4792],[4793,4793]]],[1521878781373,["gengmei_pxf@gengmei123.local",[[1,4792,"[]()"]],[4792,4792],[4796,4796]]],[1521878782820,["gengmei_pxf@gengmei123.local",[[1,4793,"# View的绘制流程"]],[4793,4793],[4804,4804]]],[1521878785299,["gengmei_pxf@gengmei123.local",[[-1,4793,"# "]],[4795,4795],[4793,4793]]],[1521878790148,["gengmei_pxf@gengmei123.local",[[1,4804,"https://pxfile.github.io/2018/03/16/View%E7%9A%84%E7%BB%98%E5%88%B6%E6%B5%81%E7%A8%8B/"]],[4804,4804],[4890,4890]]],[1521878821944,["gengmei_pxf@gengmei123.local",[[1,5112,"\n"]],[5111,5111],[5112,5112]]],[1521878822121,["gengmei_pxf@gengmei123.local",[[1,5113,"\n"]],[5112,5112],[5113,5113]]],[1521878824124,["gengmei_pxf@gengmei123.local",[[1,5112,"[]()"]],[5112,5112],[5116,5116]]],[1521878828634,["gengmei_pxf@gengmei123.local",[[1,5113,"Handlerji"]],[5113,5113],[5122,5122]]],[1521878829449,["gengmei_pxf@gengmei123.local",[[-1,5120,"ji"]],[5122,5122],[5120,5120]]],[1521878831532,["gengmei_pxf@gengmei123.local",[[1,5120,"机制"]],[5120,5120],[5122,5122]]],[1521878832692,["gengmei_pxf@gengmei123.local",[[1,5124,"https://pxfile.github.io/2018/03/08/%E7%B2%BE%E9%80%9AAndroid%E4%B8%8B%E7%9A%84Handler%E6%9C%BA%E5%88%B6/"]],[5124,5124],[5229,5229]]],[1521879301532,["gengmei_pxf@gengmei123.local",[[1,3769,"\n"]],[3769,3769],[3770,3770]]],[1521879303604,["gengmei_pxf@gengmei123.local",[[1,3791,"\n"]],[3789,3789],[3790,3790]]],[1521879303771,["gengmei_pxf@gengmei123.local",[[1,3792,"\n"]],[3790,3790],[3791,3791]]],[1521879347867,["gengmei_pxf@gengmei123.local",[[1,3791,"【】"]],[3791,3791],[3793,3793]]],[1521879348624,["gengmei_pxf@gengmei123.local",[[-1,3791,"【】"]],[3793,3793],[3791,3791]]],[1521879350284,["gengmei_pxf@gengmei123.local",[[1,3791,"[]()"]],[3791,3791],[3795,3795]]],[1521879354665,["gengmei_pxf@gengmei123.local",[[1,3797,"\n"]],[3795,3795],[3796,3796]]],[1521879355045,["gengmei_pxf@gengmei123.local",[[1,3796," \n\n# [Android Jackson、Gson、FastJson解析框架对比](https://blog.csdn.net/zhanggang740/article/details/52278373)"]],[3796,3796],[3899,3899]]],[1521879357415,["gengmei_pxf@gengmei123.local",[[-1,3796," "],[1,3797," "],[-1,3799,"# "]],[3801,3801],[3799,3799]]],[1521879357576,["gengmei_pxf@gengmei123.local",[[-1,3798,"\n"]],[3799,3799],[3798,3798]]],[1521879358087,["gengmei_pxf@gengmei123.local",[[-1,3797,"\n"]],[3798,3798],[3797,3797]]],[1521879358362,["gengmei_pxf@gengmei123.local",[[-1,3796," "]],[3797,3797],[3796,3796]]],[1521879358776,["gengmei_pxf@gengmei123.local",[[-1,3795,"\n"]],[3796,3796],[3795,3795]]],[1521879359625,["gengmei_pxf@gengmei123.local",[[-1,3791,"[]()"]],[3795,3795],[3791,3791]]],[1521879386078,["gengmei_pxf@gengmei123.local",[[1,3891,"\n"]],[3889,3889],[3890,3890]]],[1521879386446,["gengmei_pxf@gengmei123.local",[[1,3892,"\n"]],[3890,3890],[3891,3891]]],[1521879386971,["gengmei_pxf@gengmei123.local",[[1,3891,"## 总结与客观推荐：\n\n**1、比较来说, Gson 比 fastjson 考虑更全面, 对用 URL , UUID, BIT_SET, CALENDAR 等等,都有特定的输出规则.** \n**2、小数量的调用 Gson 比 fastjson 快一点. (几十毫秒,可以毫不在意.猜测是因为 javassist 生成新的 Wrapper 类导致,因为还要编译的.)** \n**3、大数量的调用 fastjson 比 Gson 快. (千万级别的.还不太确定为什么会变快, 猜测是 gson 的反射调用,毕竟比不上 fastjson Wrapper 类的真实调用.)** \n**4、代码可阅读性: fastjson 比 Gson 好很多很多.** \n**5、fastjson 在要序列化对象的类型的判断上,使用的是 if else 。** \n**6、Gson 使用的是遍历 TypeAdapterFactory集合,在每个 TypeAdapterFactory 里面做判断.而且使用了 N 多的匿名内部类, 想要一眼看出有哪些 TypeAdapterFactory 的实现都很困难.** \n**7、如果普通日常使用,推荐使用 fastjson,简单易懂,并且是国内程序员开发,有问题可以较容易的获得支持.** \n**8、Gson 有对各种类型的属性支持, 如果有特殊类型json化需求或复杂结构时可以选择 gson ,并自定义扩充.** \n**9、如果你不需要对JSON文档进行按需解析、且性能要求较高的话，可以尝试使用Jackson.**"]],[3891,3891],[4561,4561]]],[1521883213636,["gengmei_pxf@gengmei123.local",[[-1,3985," "],[1,3986," "],[-1,4076," "],[1,4077," "],[-1,4176," "],[1,4177," "],[-1,4214," "],[1,4215," "],[-1,4260," "],[1,4261," "],[-1,4384," "],[1,4385," "],[-1,4445," "],[1,4446," "],[-1,4509," "],[1,4510," "],[1,6065,"\n"]],[6065,6065],[6066,6066]]],[1521883213819,["gengmei_pxf@gengmei123.local",[[1,6068,"\n"]],[6066,6066],[6067,6067]]],[1521883214542,["gengmei_pxf@gengmei123.local",[[1,6067,"【】"]],[6067,6067],[6069,6069]]],[1521883215213,["gengmei_pxf@gengmei123.local",[[-1,6067,"【】"]],[6069,6069],[6067,6067]]],[1521883216814,["gengmei_pxf@gengmei123.local",[[1,6067,"[]()"]],[6067,6067],[6071,6071]]],[1521883218750,["gengmei_pxf@gengmei123.local",[[1,6068,"# 加密算法"]],[6068,6068],[6074,6074]]],[1521883221144,["gengmei_pxf@gengmei123.local",[[-1,6068,"# "]],[6070,6070],[6068,6068]]],[1521883227038,["gengmei_pxf@gengmei123.local",[[1,6074,"https://pxfile.github.io/2018/03/24/%E5%8A%A0%E5%AF%86%E7%AE%97%E6%B3%95/"]],[6074,6074],[6147,6147]]],[1521883605927,["gengmei_pxf@gengmei123.local",[[1,6037,"\n"]],[6035,6035],[6036,6036]]],[1521883606888,["gengmei_pxf@gengmei123.local",[[1,6036,"【】"]],[6036,6036],[6038,6038]]],[1521883607542,["gengmei_pxf@gengmei123.local",[[-1,6036,"【】"]],[6038,6038],[6036,6036]]],[1521883608937,["gengmei_pxf@gengmei123.local",[[1,6036,"[]()"]],[6036,6036],[6040,6040]]],[1521883611657,["gengmei_pxf@gengmei123.local",[[1,6039,"http://ou21vt4uz.bkt.clouddn.com/Android%E6%9E%B6%E6%9E%84.png"]],[6039,6039],[6101,6101]]],[1521883614048,["gengmei_pxf@gengmei123.local",[[1,6036,"!"]],[6036,6036],[6037,6037]]],[1521883621240,["gengmei_pxf@gengmei123.local",[[1,6038,"android架构图"]],[6038,6038],[6048,6048]]],[1521884941049,["gengmei_pxf@gengmei123.local",[[1,6632,"\n"]],[6630,6630],[6631,6631]]],[1521884941286,["gengmei_pxf@gengmei123.local",[[1,6633,"\n"]],[6631,6631],[6632,6632]]],[1521884947457,["gengmei_pxf@gengmei123.local",[[-1,7074,">"]],[7074,7075],[7074,7074]]],[1521884950376,["gengmei_pxf@gengmei123.local",[[-1,7171,">"]],[7171,7172],[7171,7171]]],[1521884967695,[null,[[1,6632,"REST的全拼是(Respresentational State Transfer) 其中Respresentational指的是资源即Resource 而State Transfer 是状态转化，那么我从这两个方面来重新解读一下\n\n##### 1、资源(Resources)是REST的核心\n\nREST开发又被称作“面向资源的开发”，这说明对于资源的抽象是设计RESTful API的核心内容。RESTful API建模的过程与面向对象建模类似，是以名词为核心的。这些名词就是资源，任何可命名的抽象概念都可以定义为一个资源。对于业务的抽象是设计一套好的RESTful API的基础，这就好比建房子打地基，如果地基没有打好，后面建的楼就很容易歪掉，其美观度，可维护性，可扩展性就会大大折扣。我会建议在设计初期一定要在资源的定义上多花功夫，抽象出适合业务发展的资源。也就是说一开始要把产品的RESTful风格定义下来，后面的扩展都可以基于这样的风格延续下去。\n\n下面是几条小的建议：\n\n *   理清资源的层次结构，比如业务针对的范围是养鸡场，那么学校会是一级资源(/school)，老师(/school/teachers)，学生(school/students)就是二级资源。\n *   资源尽量用准备的英文名词去表达，资源组都是用复数来表示。一个号的资源定义一定是不需要解释的。\n\n##### 2、资源的状态转化（State Transfer)\n\n访问一个网站或者接口，就代表客户端和服务器一次交互的过程，而这个过程势必会涉及到数据和状态的变化。而HTTP协议又是无状态的，这就意味着所有的状态都保存在服务器。如果某个客户端想要做操作服务器必须通过某种手段让服务器发生状态转换，那么客户端就可以操作资源，而资源的状态转化就转化为对资源的各种操纵。而这些操作通常是通过HTTP协议的四种方法来实现的GET/POST/PUT/DELETE。还有其他不常用的方法PATCH/HEAD/OPTIONS。\n\n最后再次重申RESTful 是风格，不是标准。\n\n作者：隔壁老李头\n链接：https://www.jianshu.com/p/52f3ca09e2ed\n來源：简书\n著作权归作者所有。商业转载请联系作者获得授权，非商业转载请注明出处。"]],[6632,6632],[7598,7598]]],[1521884967695,[null,[[-1,6632,"REST的全拼是(Respresentational State Transfer) 其中Respresentational指的是资源即Resource 而State Transfer 是状态转化，那么我从这两个方面来重新解读一下\n\n##### 1、资源(Resources)是REST的核心\n\nREST开发又被称作“面向资源的开发”，这说明对于资源的抽象是设计RESTful API的核心内容。RESTful API建模的过程与面向对象建模类似，是以名词为核心的。这些名词就是资源，任何可命名的抽象概念都可以定义为一个资源。对于业务的抽象是设计一套好的RESTful API的基础，这就好比建房子打地基，如果地基没有打好，后面建的楼就很容易歪掉，其美观度，可维护性，可扩展性就会大大折扣。我会建议在设计初期一定要在资源的定义上多花功夫，抽象出适合业务发展的资源。也就是说一开始要把产品的RESTful风格定义下来，后面的扩展都可以基于这样的风格延续下去。\n\n下面是几条小的建议：\n\n *   理清资源的层次结构，比如业务针对的范围是养鸡场，那么学校会是一级资源(/school)，老师(/school/teachers)，学生(school/students)就是二级资源。\n *   资源尽量用准备的英文名词去表达，资源组都是用复数来表示。一个号的资源定义一定是不需要解释的。\n\n##### 2、资源的状态转化（State Transfer)\n\n访问一个网站或者接口，就代表客户端和服务器一次交互的过程，而这个过程势必会涉及到数据和状态的变化。而HTTP协议又是无状态的，这就意味着所有的状态都保存在服务器。如果某个客户端想要做操作服务器必须通过某种手段让服务器发生状态转换，那么客户端就可以操作资源，而资源的状态转化就转化为对资源的各种操纵。而这些操作通常是通过HTTP协议的四种方法来实现的GET/POST/PUT/DELETE。还有其他不常用的方法PATCH/HEAD/OPTIONS。\n\n最后再次重申RESTful 是风格，不是标准。\n\n作者：隔壁老李头\n链接：https://www.jianshu.com/p/52f3ca09e2ed\n來源：简书\n著作权归作者所有。商业转载请联系作者获得授权，非商业转载请注明出处。"]],[7598,7598],[6632,6632]]],[1521884957264,["gengmei_pxf@gengmei123.local",[[-1,6751,"###"]],[6754,6754],[6751,6751]]],[1521884961568,["gengmei_pxf@gengmei123.local",[[-1,7223,"###"]],[7226,7226],[7223,7223]]],[1521884966280,["gengmei_pxf@gengmei123.local",[[-1,7501,"作者：隔壁老李头\n链接：https://www.jianshu.com/p/52f3ca09e2ed\n來源：简书\n著作权归作者所有。商业转载请联系作者获得授权，非商业转载请注明出处。"]],[7501,7592],[7501,7501]]],[1521884966469,["gengmei_pxf@gengmei123.local",[[-1,7502,"\n"]],[7501,7501],[7500,7500]]],[1521884966896,["gengmei_pxf@gengmei123.local",[[-1,7501,"\n"]],[7500,7500],[7499,7499]]],[1521885027492,[null,[[1,6632,"REST的全拼是(Respresentational State Transfer) 其中Respresentational指的是资源即Resource 而State Transfer 是状态转化，那么我从这两个方面来重新解读一下\n\n## 1、资源(Resources)是REST的核心\n\nREST开发又被称作“面向资源的开发”，这说明对于资源的抽象是设计RESTful API的核心内容。RESTful API建模的过程与面向对象建模类似，是以名词为核心的。这些名词就是资源，任何可命名的抽象概念都可以定义为一个资源。对于业务的抽象是设计一套好的RESTful API的基础，这就好比建房子打地基，如果地基没有打好，后面建的楼就很容易歪掉，其美观度，可维护性，可扩展性就会大大折扣。我会建议在设计初期一定要在资源的定义上多花功夫，抽象出适合业务发展的资源。也就是说一开始要把产品的RESTful风格定义下来，后面的扩展都可以基于这样的风格延续下去。\n\n下面是几条小的建议：\n\n *   理清资源的层次结构，比如业务针对的范围是养鸡场，那么学校会是一级资源(/school)，老师(/school/teachers)，学生(school/students)就是二级资源。\n *   资源尽量用准备的英文名词去表达，资源组都是用复数来表示。一个号的资源定义一定是不需要解释的。\n\n## 2、资源的状态转化（State Transfer)\n\n访问一个网站或者接口，就代表客户端和服务器一次交互的过程，而这个过程势必会涉及到数据和状态的变化。而HTTP协议又是无状态的，这就意味着所有的状态都保存在服务器。如果某个客户端想要做操作服务器必须通过某种手段让服务器发生状态转换，那么客户端就可以操作资源，而资源的状态转化就转化为对资源的各种操纵。而这些操作通常是通过HTTP协议的四种方法来实现的GET/POST/PUT/DELETE。还有其他不常用的方法PATCH/HEAD/OPTIONS。\n\n最后再次重申RESTful 是风格，不是标准。"],[1,6751,"三峡修"]],[6632,6632],[6754,6754]]],[1521885027492,[null,[[-1,6632,"REST的全拼是(Respresentational State Transfer) 其中Respresentational指的是资源即Resource 而State Transfer 是状态转化，那么我从这两个方面来重新解读一下\n\n## 1、资源(Resources)是REST的核心\n\nREST开发又被称作“面向资源的开发”，这说明对于资源的抽象是设计RESTful API的核心内容。RESTful API建模的过程与面向对象建模类似，是以名词为核心的。这些名词就是资源，任何可命名的抽象概念都可以定义为一个资源。对于业务的抽象是设计一套好的RESTful API的基础，这就好比建房子打地基，如果地基没有打好，后面建的楼就很容易歪掉，其美观度，可维护性，可扩展性就会大大折扣。我会建议在设计初期一定要在资源的定义上多花功夫，抽象出适合业务发展的资源。也就是说一开始要把产品的RESTful风格定义下来，后面的扩展都可以基于这样的风格延续下去。\n\n下面是几条小的建议：\n\n *   理清资源的层次结构，比如业务针对的范围是养鸡场，那么学校会是一级资源(/school)，老师(/school/teachers)，学生(school/students)就是二级资源。\n *   资源尽量用准备的英文名词去表达，资源组都是用复数来表示。一个号的资源定义一定是不需要解释的。\n\n## 2、资源的状态转化（State Transfer)\n\n访问一个网站或者接口，就代表客户端和服务器一次交互的过程，而这个过程势必会涉及到数据和状态的变化。而HTTP协议又是无状态的，这就意味着所有的状态都保存在服务器。如果某个客户端想要做操作服务器必须通过某种手段让服务器发生状态转换，那么客户端就可以操作资源，而资源的状态转化就转化为对资源的各种操纵。而这些操作通常是通过HTTP协议的四种方法来实现的GET/POST/PUT/DELETE。还有其他不常用的方法PATCH/HEAD/OPTIONS。\n\n最后再次重申RESTful 是风格，不是标准。"],[-1,7618,"三峡修"]],[6754,6754],[6632,6632]]],[1521885013044,["gengmei_pxf@gengmei123.local",[[1,6632,"\n"]],[6630,6630],[6631,6631]]],[1521885014224,["gengmei_pxf@gengmei123.local",[[1,6631,"【】"]],[6631,6631],[6633,6633]]],[1521885014924,["gengmei_pxf@gengmei123.local",[[-1,6631,"【】"]],[6633,6633],[6631,6631]]],[1521885016319,["gengmei_pxf@gengmei123.local",[[1,6631,"[]()"]],[6631,6631],[6635,6635]]],[1521885018116,["gengmei_pxf@gengmei123.local",[[1,6632,"# Retrofit解析1之前哨站——理解RESTful"]],[6632,6632],[6660,6660]]],[1521885021114,["gengmei_pxf@gengmei123.local",[[-1,6632,"# "]],[6634,6634],[6632,6632]]],[1521885026694,["gengmei_pxf@gengmei123.local",[[1,6660,"https://www.jianshu.com/p/52f3ca09e2ed"]],[6660,6660],[6698,6698]]],[1521885056764,[null,[[1,6701,"REST的全拼是(Respresentational State Transfer) 其中Respresentational指的是资源即Resource 而State Transfer 是状态转化，那么我从这两个方面来重新解读一下\n\n## 1、资源(Resources)是REST的核心\n\nREST开发又被称作“面向资源的开发”，这说明对于资源的抽象是设计RESTful API的核心内容。RESTful API建模的过程与面向对象建模类似，是以名词为核心的。这些名词就是资源，任何可命名的抽象概念都可以定义为一个资源。对于业务的抽象是设计一套好的RESTful API的基础，这就好比建房子打地基，如果地基没有打好，后面建的楼就很容易歪掉，其美观度，可维护性，可扩展性就会大大折扣。我会建议在设计初期一定要在资源的定义上多花功夫，抽象出适合业务发展的资源。也就是说一开始要把产品的RESTful风格定义下来，后面的扩展都可以基于这样的风格延续下去。\n\n下面是几条小的建议：\n\n *   理清资源的层次结构，比如业务针对的范围是养鸡场，那么学校会是一级资源(/school)，老师(/school/teachers)，学生(school/students)就是二级资源。\n *   资源尽量用准备的英文名词去表达，资源组都是用复数来表示。一个号的资源定义一定是不需要解释的。\n\n## 2、资源的状态转化（State Transfer)\n\n访问一个网站或者接口，就代表客户端和服务器一次交互的过程，而这个过程势必会涉及到数据和状态的变化。而HTTP协议又是无状态的，这就意味着所有的状态都保存在服务器。如果某个客户端想要做操作服务器必须通过某种手段让服务器发生状态转换，那么客户端就可以操作资源，而资源的状态转化就转化为对资源的各种操纵。而这些操作通常是通过HTTP协议的四种方法来实现的GET/POST/PUT/DELETE。还有其他不常用的方法PATCH/HEAD/OPTIONS。\n\n最后再次重申RESTful 是风格，不是标准。"],[1,6820,"三峡修"]],[6701,6701],[6823,6823]]],[1521885056764,[null,[[-1,6701,"REST的全拼是(Respresentational State Transfer) 其中Respresentational指的是资源即Resource 而State Transfer 是状态转化，那么我从这两个方面来重新解读一下\n\n## 1、资源(Resources)是REST的核心\n\nREST开发又被称作“面向资源的开发”，这说明对于资源的抽象是设计RESTful API的核心内容。RESTful API建模的过程与面向对象建模类似，是以名词为核心的。这些名词就是资源，任何可命名的抽象概念都可以定义为一个资源。对于业务的抽象是设计一套好的RESTful API的基础，这就好比建房子打地基，如果地基没有打好，后面建的楼就很容易歪掉，其美观度，可维护性，可扩展性就会大大折扣。我会建议在设计初期一定要在资源的定义上多花功夫，抽象出适合业务发展的资源。也就是说一开始要把产品的RESTful风格定义下来，后面的扩展都可以基于这样的风格延续下去。\n\n下面是几条小的建议：\n\n *   理清资源的层次结构，比如业务针对的范围是养鸡场，那么学校会是一级资源(/school)，老师(/school/teachers)，学生(school/students)就是二级资源。\n *   资源尽量用准备的英文名词去表达，资源组都是用复数来表示。一个号的资源定义一定是不需要解释的。\n\n## 2、资源的状态转化（State Transfer)\n\n访问一个网站或者接口，就代表客户端和服务器一次交互的过程，而这个过程势必会涉及到数据和状态的变化。而HTTP协议又是无状态的，这就意味着所有的状态都保存在服务器。如果某个客户端想要做操作服务器必须通过某种手段让服务器发生状态转换，那么客户端就可以操作资源，而资源的状态转化就转化为对资源的各种操纵。而这些操作通常是通过HTTP协议的四种方法来实现的GET/POST/PUT/DELETE。还有其他不常用的方法PATCH/HEAD/OPTIONS。\n\n最后再次重申RESTful 是风格，不是标准。"],[-1,7687,"三峡修"]],[6823,6823],[6701,6701]]],[1521885039659,["gengmei_pxf@gengmei123.local",[[1,7684,"\n"]],[7682,7682],[7683,7683]]],[1521885042100,["gengmei_pxf@gengmei123.local",[[1,7683,"meiyo"]],[7683,7683],[7688,7688]]],[1521885042995,["gengmei_pxf@gengmei123.local",[[-1,7683,"meiyo"]],[7688,7688],[7683,7683]]],[1521885047190,["gengmei_pxf@gengmei123.local",[[1,7683,"没有这么一天"]],[7683,7683],[7689,7689]]],[1521885050786,["gengmei_pxf@gengmei123.local",[[1,7683,"\n"]],[7683,7683],[7684,7684]]],[1521885055653,["gengmei_pxf@gengmei123.local",[[1,7684,"答案："]],[7684,7684],[7687,7687]]],[1521885074643,[null,[[-1,6701,""],[1,6701,"REST的全拼是(Respresentational State Transfer) 其中Respresentational指的是资源即Resource 而State Transfer 是状态转化，那么我从这两个方面来重新解读一下\n\n## 1、资源(Resources)是REST的核心\n\nREST开发又被称作“面向资源的开发”，这说明对于资源的抽象是设计RESTful API的核心内容。RESTful API建模的过程与面向对象建模类似，是以名词为核心的。这些名词就是资源，任何可命名的抽象概念都可以定义为一个资源。对于业务的抽象是设计一套好的RESTful API的基础，这就好比建房子打地基，如果地基没有打好，后面建的楼就很容易歪掉，其美观度，可维护性，可扩展性就会大大折扣。我会建议在设计初期一定要在资源的定义上多花功夫，抽象出适合业务发展的资源。也就是说一开始要把产品的RESTful风格定义下来，后面的扩展都可以基于这样的风格延续下去。\n\n下面是几条小的建议：\n\n *   理清资源的层次结构，比如业务针对的范围是养鸡场，那么学校会是一级资源(/school)，老师(/school/teachers)，学生(school/students)就是二级资源。\n *   资源尽量用准备的英文名词去表达，资源组都是用复数来表示。一个号的资源定义一定是不需要解释的。\n\n## 2、资源的状态转化（State Transfer)\n\n访问一个网站或者接口，就代表客户端和服务器一次交互的过程，而这个过程势必会涉及到数据和状态的变化。而HTTP协议又是无状态的，这就意味着所有的状态都保存在服务器。如果某个客户端想要做操作服务器必须通过某种手段让服务器发生状态转换，那么客户端就可以操作资源，而资源的状态转化就转化为对资源的各种操纵。而这些操作通常是通过HTTP协议的四种方法来实现的GET/POST/PUT/DELETE。还有其他不常用的方法PATCH/HEAD/OPTIONS。\n\n最后再次重申RESTful 是风格，不是标准。"],[1,6817,"答案：没有这么一天\n\n"],[1,6820,"三峡修"],[-1,6846,"\nmeiyo没有这么一天\n答案："]],[6701,6701],[6846,6846]]],[1521885074643,[null,[[1,6701,""],[-1,6701,"REST的全拼是(Respresentational State Transfer) 其中Respresentational指的是资源即Resource 而State Transfer 是状态转化，那么我从这两个方面来重新解读一下\n\n## 1、资源(Resources)是REST的核心\n\nREST开发又被称作“面向资源的开发”，这说明对于资源的抽象是设计RESTful API的核心内容。RESTful API建模的过程与面向对象建模类似，是以名词为核心的。这些名词就是资源，任何可命名的抽象概念都可以定义为一个资源。对于业务的抽象是设计一套好的RESTful API的基础，这就好比建房子打地基，如果地基没有打好，后面建的楼就很容易歪掉，其美观度，可维护性，可扩展性就会大大折扣。我会建议在设计初期一定要在资源的定义上多花功夫，抽象出适合业务发展的资源。也就是说一开始要把产品的RESTful风格定义下来，后面的扩展都可以基于这样的风格延续下去。\n\n下面是几条小的建议：\n\n *   理清资源的层次结构，比如业务针对的范围是养鸡场，那么学校会是一级资源(/school)，老师(/school/teachers)，学生(school/students)就是二级资源。\n *   资源尽量用准备的英文名词去表达，资源组都是用复数来表示。一个号的资源定义一定是不需要解释的。\n\n## 2、资源的状态转化（State Transfer)\n\n访问一个网站或者接口，就代表客户端和服务器一次交互的过程，而这个过程势必会涉及到数据和状态的变化。而HTTP协议又是无状态的，这就意味着所有的状态都保存在服务器。如果某个客户端想要做操作服务器必须通过某种手段让服务器发生状态转换，那么客户端就可以操作资源，而资源的状态转化就转化为对资源的各种操纵。而这些操作通常是通过HTTP协议的四种方法来实现的GET/POST/PUT/DELETE。还有其他不常用的方法PATCH/HEAD/OPTIONS。\n\n最后再次重申RESTful 是风格，不是标准。"],[-1,7684,"答案：没有这么一天\n\n"],[-1,7698,"三峡修"],[1,7727,"\nmeiyo没有这么一天\n答案："]],[6846,6846],[6701,6701]]],[1521885058922,["gengmei_pxf@gengmei123.local",[[1,7650,"\n"]],[7648,7648],[7649,7649]]],[1521885059442,["gengmei_pxf@gengmei123.local",[[1,7651,"\n"]],[7649,7649],[7650,7650]]],[1521885073469,["gengmei_pxf@gengmei123.local",[[1,7650,"答案：路由转发，DNS"]],[7650,7650],[7661,7661]]],[1521885082258,[null,[[1,6701,"REST的全拼是(Respresentational State Transfer) 其中Respresentational指的是资源即Resource 而State Transfer 是状态转化，那么我从这两个方面来重新解读一下\n\n## 1、资源(Resources)是REST的核心\n\nREST开发又被称作“面向资源的开发”，这说明对于资源的抽象是设计RESTful API的核心内容。RESTful API建模的过程与面向对象建模类似，是以名词为核心的。这些名词就是资源，任何可命名的抽象概念都可以定义为一个资源。对于业务的抽象是设计一套好的RESTful API的基础，这就好比建房子打地基，如果地基没有打好，后面建的楼就很容易歪掉，其美观度，可维护性，可扩展性就会大大折扣。我会建议在设计初期一定要在资源的定义上多花功夫，抽象出适合业务发展的资源。也就是说一开始要把产品的RESTful风格定义下来，后面的扩展都可以基于这样的风格延续下去。\n\n下面是几条小的建议：\n\n *   理清资源的层次结构，比如业务针对的范围是养鸡场，那么学校会是一级资源(/school)，老师(/school/teachers)，学生(school/students)就是二级资源。\n *   资源尽量用准备的英文名词去表达，资源组都是用复数来表示。一个号的资源定义一定是不需要解释的。\n\n## 2、资源的状态转化（State Transfer)\n\n访问一个网站或者接口，就代表客户端和服务器一次交互的过程，而这个过程势必会涉及到数据和状态的变化。而HTTP协议又是无状态的，这就意味着所有的状态都保存在服务器。如果某个客户端想要做操作服务器必须通过某种手段让服务器发生状态转换，那么客户端就可以操作资源，而资源的状态转化就转化为对资源的各种操纵。而这些操作通常是通过HTTP协议的四种方法来实现的GET/POST/PUT/DELETE。还有其他不常用的方法PATCH/HEAD/OPTIONS。\n\n最后再次重申RESTful 是风格，不是标准。"],[1,6783,"答案：路由转发，DNS\n\n"],[1,6817,"答案：没有这么一天\n\n"],[1,6820,"三峡修"],[-1,6844,"\n"],[-1,6847,"meiyo没有这么一天\n答案：\n\n答案：路由转发，DNS"]],[6701,6701],[6847,6847]]],[1521885082258,[null,[[-1,6701,"REST的全拼是(Respresentational State Transfer) 其中Respresentational指的是资源即Resource 而State Transfer 是状态转化，那么我从这两个方面来重新解读一下\n\n## 1、资源(Resources)是REST的核心\n\nREST开发又被称作“面向资源的开发”，这说明对于资源的抽象是设计RESTful API的核心内容。RESTful API建模的过程与面向对象建模类似，是以名词为核心的。这些名词就是资源，任何可命名的抽象概念都可以定义为一个资源。对于业务的抽象是设计一套好的RESTful API的基础，这就好比建房子打地基，如果地基没有打好，后面建的楼就很容易歪掉，其美观度，可维护性，可扩展性就会大大折扣。我会建议在设计初期一定要在资源的定义上多花功夫，抽象出适合业务发展的资源。也就是说一开始要把产品的RESTful风格定义下来，后面的扩展都可以基于这样的风格延续下去。\n\n下面是几条小的建议：\n\n *   理清资源的层次结构，比如业务针对的范围是养鸡场，那么学校会是一级资源(/school)，老师(/school/teachers)，学生(school/students)就是二级资源。\n *   资源尽量用准备的英文名词去表达，资源组都是用复数来表示。一个号的资源定义一定是不需要解释的。\n\n## 2、资源的状态转化（State Transfer)\n\n访问一个网站或者接口，就代表客户端和服务器一次交互的过程，而这个过程势必会涉及到数据和状态的变化。而HTTP协议又是无状态的，这就意味着所有的状态都保存在服务器。如果某个客户端想要做操作服务器必须通过某种手段让服务器发生状态转换，那么客户端就可以操作资源，而资源的状态转化就转化为对资源的各种操纵。而这些操作通常是通过HTTP协议的四种方法来实现的GET/POST/PUT/DELETE。还有其他不常用的方法PATCH/HEAD/OPTIONS。\n\n最后再次重申RESTful 是风格，不是标准。"],[-1,7650,"答案：路由转发，DNS\n\n"],[-1,7697,"答案：没有这么一天\n\n"],[-1,7711,"三峡修"],[1,7738,"\n"],[1,7740,"meiyo没有这么一天\n答案：\n\n答案：路由转发，DNS"]],[6847,6847],[6701,6701]]],[1521885076690,["gengmei_pxf@gengmei123.local",[[1,7740,"\n"]],[7738,7738],[7739,7739]]],[1521885077051,["gengmei_pxf@gengmei123.local",[[1,7741,"\n"]],[7739,7739],[7740,7740]]],[1521885081581,["gengmei_pxf@gengmei123.local",[[1,7740,"数学建模"]],[7740,7740],[7744,7744]]],[1521885202248,[null,[[-1,6701,""],[1,6701,"REST的全拼是(Respresentational State Transfer) 其中Respresentational指的是资源即Resource 而State Transfer 是状态转化，那么我从这两个方面来重新解读一下\n\n## 1、资源(Resources)是REST的核心\n\nREST开发又被称作“面向资源的开发”，这说明对于资源的抽象是设计RESTful API的核心内容。RESTful API建模的过程与面向对象建模类似，是以名词为核心的。这些名词就是资源，任何可命名的抽象概念都可以定义为一个资源。对于业务的抽象是设计一套好的RESTful API的基础，这就好比建房子打地基，如果地基没有打好，后面建的楼就很容易歪掉，其美观度，可维护性，可扩展性就会大大折扣。我会建议在设计初期一定要在资源的定义上多花功夫，抽象出适合业务发展的资源。也就是说一开始要把产品的RESTful风格定义下来，后面的扩展都可以基于这样的风格延续下去。\n\n下面是几条小的建议：\n\n *   理清资源的层次结构，比如业务针对的范围是养鸡场，那么学校会是一级资源(/school)，老师(/school/teachers)，学生(school/students)就是二级资源。\n *   资源尽量用准备的英文名词去表达，资源组都是用复数来表示。一个号的资源定义一定是不需要解释的。\n\n## 2、资源的状态转化（State Transfer)\n\n访问一个网站或者接口，就代表客户端和服务器一次交互的过程，而这个过程势必会涉及到数据和状态的变化。而HTTP协议又是无状态的，这就意味着所有的状态都保存在服务器。如果某个客户端想要做操作服务器必须通过某种手段让服务器发生状态转换，那么客户端就可以操作资源，而资源的状态转化就转化为对资源的各种操纵。而这些操作通常是通过HTTP协议的四种方法来实现的GET/POST/PUT/DELETE。还有其他不常用的方法PATCH/HEAD/OPTIONS。\n\n最后再次重申RESTful 是风格，不是标准。"],[1,6783,"答案：路由转发，DNS\n\n"],[1,6817,"答案：没有这么一天\n\n"],[1,6820,"三峡修"],[-1,6846,"\nmeiyo没有这么一天\n答案：\n\n答案：路由转发，DNS\n\n"],[1,6881,"\n\n"]],[6701,6701],[6883,6883]]],[1521885202248,[null,[[1,6701,""],[-1,6701,"REST的全拼是(Respresentational State Transfer) 其中Respresentational指的是资源即Resource 而State Transfer 是状态转化，那么我从这两个方面来重新解读一下\n\n## 1、资源(Resources)是REST的核心\n\nREST开发又被称作“面向资源的开发”，这说明对于资源的抽象是设计RESTful API的核心内容。RESTful API建模的过程与面向对象建模类似，是以名词为核心的。这些名词就是资源，任何可命名的抽象概念都可以定义为一个资源。对于业务的抽象是设计一套好的RESTful API的基础，这就好比建房子打地基，如果地基没有打好，后面建的楼就很容易歪掉，其美观度，可维护性，可扩展性就会大大折扣。我会建议在设计初期一定要在资源的定义上多花功夫，抽象出适合业务发展的资源。也就是说一开始要把产品的RESTful风格定义下来，后面的扩展都可以基于这样的风格延续下去。\n\n下面是几条小的建议：\n\n *   理清资源的层次结构，比如业务针对的范围是养鸡场，那么学校会是一级资源(/school)，老师(/school/teachers)，学生(school/students)就是二级资源。\n *   资源尽量用准备的英文名词去表达，资源组都是用复数来表示。一个号的资源定义一定是不需要解释的。\n\n## 2、资源的状态转化（State Transfer)\n\n访问一个网站或者接口，就代表客户端和服务器一次交互的过程，而这个过程势必会涉及到数据和状态的变化。而HTTP协议又是无状态的，这就意味着所有的状态都保存在服务器。如果某个客户端想要做操作服务器必须通过某种手段让服务器发生状态转换，那么客户端就可以操作资源，而资源的状态转化就转化为对资源的各种操纵。而这些操作通常是通过HTTP协议的四种方法来实现的GET/POST/PUT/DELETE。还有其他不常用的方法PATCH/HEAD/OPTIONS。\n\n最后再次重申RESTful 是风格，不是标准。"],[-1,7650,"答案：路由转发，DNS\n\n"],[-1,7697,"答案：没有这么一天\n\n"],[-1,7711,"三峡修"],[1,7740,"\nmeiyo没有这么一天\n答案：\n\n答案：路由转发，DNS\n\n"],[-1,7744,"\n\n"]],[6883,6883],[6701,6701]]],[1521885199780,["gengmei_pxf@gengmei123.local",[[-1,1,"s6"]],[0,3],[0,1]]],[1521885200049,["gengmei_pxf@gengmei123.local",[[1,1,"i"]],[0,1],[0,2]]],[1521885200149,["gengmei_pxf@gengmei123.local",[[1,2,"a"]],[0,2],[0,3]]],[1521885200264,["gengmei_pxf@gengmei123.local",[[1,3,"n"]],[0,3],[0,4]]],[1521885200384,["gengmei_pxf@gengmei123.local",[[1,4,"'s"]],[0,4],[0,6]]],[1521885200599,["gengmei_pxf@gengmei123.local",[[1,6,"h"]],[0,6],[0,7]]],[1521885200676,["gengmei_pxf@gengmei123.local",[[1,7,"i"]],[0,7],[0,8]]],[1521885200803,["gengmei_pxf@gengmei123.local",[[1,8,"'t"]],[0,8],[0,10]]],[1521885200922,["gengmei_pxf@gengmei123.local",[[1,10,"i"]],[0,10],[0,11]]],[1521885201308,["gengmei_pxf@gengmei123.local",[[-1,0,"mian'shi'ti"],[1,11,"面试题"]],[0,11],[3,3]]],[1521885204081,[null,[[-1,6701,""],[1,6701,"REST的全拼是(Respresentational State Transfer) 其中Respresentational指的是资源即Resource 而State Transfer 是状态转化，那么我从这两个方面来重新解读一下\n\n## 1、资源(Resources)是REST的核心\n\nREST开发又被称作“面向资源的开发”，这说明对于资源的抽象是设计RESTful API的核心内容。RESTful API建模的过程与面向对象建模类似，是以名词为核心的。这些名词就是资源，任何可命名的抽象概念都可以定义为一个资源。对于业务的抽象是设计一套好的RESTful API的基础，这就好比建房子打地基，如果地基没有打好，后面建的楼就很容易歪掉，其美观度，可维护性，可扩展性就会大大折扣。我会建议在设计初期一定要在资源的定义上多花功夫，抽象出适合业务发展的资源。也就是说一开始要把产品的RESTful风格定义下来，后面的扩展都可以基于这样的风格延续下去。\n\n下面是几条小的建议：\n\n *   理清资源的层次结构，比如业务针对的范围是养鸡场，那么学校会是一级资源(/school)，老师(/school/teachers)，学生(school/students)就是二级资源。\n *   资源尽量用准备的英文名词去表达，资源组都是用复数来表示。一个号的资源定义一定是不需要解释的。\n\n## 2、资源的状态转化（State Transfer)\n\n访问一个网站或者接口，就代表客户端和服务器一次交互的过程，而这个过程势必会涉及到数据和状态的变化。而HTTP协议又是无状态的，这就意味着所有的状态都保存在服务器。如果某个客户端想要做操作服务器必须通过某种手段让服务器发生状态转换，那么客户端就可以操作资源，而资源的状态转化就转化为对资源的各种操纵。而这些操作通常是通过HTTP协议的四种方法来实现的GET/POST/PUT/DELETE。还有其他不常用的方法PATCH/HEAD/OPTIONS。\n\n最后再次重申RESTful 是风格，不是标准。"],[1,6783,"答案：路由转发，DNS\n\n"],[1,6817,"答案：没有这么一天\n\n"],[1,6820,"三峡修"],[-1,6846,"\nmeiyo没有这么一天\n答案：\n\n答案：路由转发，DNS\n\n"],[1,6881,"\n\n"]],[6701,6701],[6883,6883]]],[1521885204081,[null,[[1,6701,""],[-1,6701,"REST的全拼是(Respresentational State Transfer) 其中Respresentational指的是资源即Resource 而State Transfer 是状态转化，那么我从这两个方面来重新解读一下\n\n## 1、资源(Resources)是REST的核心\n\nREST开发又被称作“面向资源的开发”，这说明对于资源的抽象是设计RESTful API的核心内容。RESTful API建模的过程与面向对象建模类似，是以名词为核心的。这些名词就是资源，任何可命名的抽象概念都可以定义为一个资源。对于业务的抽象是设计一套好的RESTful API的基础，这就好比建房子打地基，如果地基没有打好，后面建的楼就很容易歪掉，其美观度，可维护性，可扩展性就会大大折扣。我会建议在设计初期一定要在资源的定义上多花功夫，抽象出适合业务发展的资源。也就是说一开始要把产品的RESTful风格定义下来，后面的扩展都可以基于这样的风格延续下去。\n\n下面是几条小的建议：\n\n *   理清资源的层次结构，比如业务针对的范围是养鸡场，那么学校会是一级资源(/school)，老师(/school/teachers)，学生(school/students)就是二级资源。\n *   资源尽量用准备的英文名词去表达，资源组都是用复数来表示。一个号的资源定义一定是不需要解释的。\n\n## 2、资源的状态转化（State Transfer)\n\n访问一个网站或者接口，就代表客户端和服务器一次交互的过程，而这个过程势必会涉及到数据和状态的变化。而HTTP协议又是无状态的，这就意味着所有的状态都保存在服务器。如果某个客户端想要做操作服务器必须通过某种手段让服务器发生状态转换，那么客户端就可以操作资源，而资源的状态转化就转化为对资源的各种操纵。而这些操作通常是通过HTTP协议的四种方法来实现的GET/POST/PUT/DELETE。还有其他不常用的方法PATCH/HEAD/OPTIONS。\n\n最后再次重申RESTful 是风格，不是标准。"],[-1,7650,"答案：路由转发，DNS\n\n"],[-1,7697,"答案：没有这么一天\n\n"],[-1,7711,"三峡修"],[1,7740,"\nmeiyo没有这么一天\n答案：\n\n答案：路由转发，DNS\n\n"],[-1,7744,"\n\n"]],[6883,6883],[6701,6701]]],[1521885203116,["gengmei_pxf@gengmei123.local",[[1,3,"总结6"]],[3,3],[6,6]]]]]]}