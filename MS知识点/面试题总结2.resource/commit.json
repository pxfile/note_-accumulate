{"compress":true,"commitItems":[["0b560c07-b450-42e8-8546-c27d07557571",1521016592013,"",[[1521016590467,["gengmei_pxf@gengmei123.local",[[1,0,"面试题总结2\n===\n\n\n[从Handler+Message+Looper源码带你分析Android系统的消息处理机制](http://blog.csdn.net/feidu804677682/article/details/46817283)"]],[0,0],[122,122]]],[1521016620973,["gengmei_pxf@gengmei123.local",[[1,11,"1.Java基础\n2.Activity中setContentView的父布局\n3.Activity继承BaseActivity的设计模式是模板方法\n4.message的父类\n5.dialog的父类 Service不能创建dialog\n6.自定义View的3个构造函数的使用场景\n7.为什么handler的runnable函数是在主线程，而thread的runnable的是在子线程，handler创建的2种方法\n8.查看大图功能设计注意的点\n9.多进程需要注意和解决的问题\n10.RecyclerView怎么实现一些复杂的效果\n11.Android studio的使用，例如debug\n12.手写单例，双层加锁，为什么要双判断\n13.git 命令的使用 打tag\n14.性能优化\n15.webg与png的区别\n16.程序启动，内存怎么分配的\n17.具体代码的优化，对象不要多创建，因为多创建会导致多引用\n18.事件分发\n19.自定义View\n20.handler\n21.移动网络通信机制，对Socket通信、TCP/IP和HTTP\n22.sqlite的使用 怎么升级，sqlite不能删除字段\n23.事件分发是责任链模式"]],[11,11],[521,521]]],[1521016632825,["gengmei_pxf@gengmei123.local",[[1,50,"\n"]],[49,49],[50,50]]],[1521016642892,["gengmei_pxf@gengmei123.local",[[1,50,"[从setContentView方法分析Android加载布局流程](http://blog.csdn.net/feidu804677682/article/details/46711921)"]],[50,50],[146,146]]],[1521016652426,["gengmei_pxf@gengmei123.local",[[-1,620,"[从Handler+Message+Looper源码带你分析Android系统的消息处理机制](http://blog.csdn.net/feidu804677682/article/details/46817283)"]],[620,729],[620,620]]],[1521016657945,["gengmei_pxf@gengmei123.local",[[1,195,"\n"]],[194,194],[195,195]]],[1521016658307,["gengmei_pxf@gengmei123.local",[[1,195,"[从Handler+Message+Looper源码带你分析Android系统的消息处理机制](http://blog.csdn.net/feidu804677682/article/details/46817283)"]],[195,195],[304,304]]],[1521016675416,["gengmei_pxf@gengmei123.local",[[-1,191,"的父类"]],[184,194],[191,191]]],[1521016676598,["gengmei_pxf@gengmei123.local",[[1,191,"的父类"]],[191,191],[184,194]]],[1521016682460,["gengmei_pxf@gengmei123.local",[[-1,184,"m"],[1,185,"Handler+M"],[-1,191,"的父类"],[1,194,"+Looper"]],[184,194],[206,206]]],[1521016684992,["gengmei_pxf@gengmei123.local",[[1,317,"\n"]],[316,316],[317,317]]],[1521016917950,["gengmei_pxf@gengmei123.local",[[1,468,"\n"]],[467,467],[468,468]]],[1521016972984,["gengmei_pxf@gengmei123.local",[[1,546,"\n"]],[545,545],[546,546]]],[1521017252789,["gengmei_pxf@gengmei123.local",[[1,317,"# [Android Handler机制（一）---Message源码分析](http://www.cnblogs.com/jycboy/p/5786551.html)"]],[317,317],[401,401]]],[1521017257186,["gengmei_pxf@gengmei123.local",[[-1,317,"# "]],[318,318],[317,317]]],[1521017276963,["gengmei_pxf@gengmei123.local",[[1,149,"设计模式"]],[149,149],[153,153]]],[1521017278247,["gengmei_pxf@gengmei123.local",[[1,153,"\n"]],[153,153],[154,154]]],[1521017338816,["gengmei_pxf@gengmei123.local",[[-1,820,"事件分发是责任链模式"]],[820,830],[820,820]]],[1521017342478,["gengmei_pxf@gengmei123.local",[[1,187,"\n"]],[186,186],[187,187]]],[1521017343287,["gengmei_pxf@gengmei123.local",[[1,187,"事件分发是责任链模式"]],[187,187],[197,197]]],[1521017346117,["gengmei_pxf@gengmei123.local",[[1,154,"* "]],[154,154],[156,156]]],[1521017348142,["gengmei_pxf@gengmei123.local",[[1,189,"* "]],[189,189],[191,191]]],[1521017366838,["gengmei_pxf@gengmei123.local",[[-1,201,"\n"]],[202,202],[201,201]]],[1521017369740,["gengmei_pxf@gengmei123.local",[[1,201,"\n"]],[201,201],[202,202]]],[1521017370316,["gengmei_pxf@gengmei123.local",[[1,202,"\n"]],[202,202],[203,203]]],[1521017373605,["gengmei_pxf@gengmei123.local",[[1,20,"\n"]],[19,19],[20,20]]],[1521017375956,["gengmei_pxf@gengmei123.local",[[1,148,"\n"]],[147,147],[148,148]]],[1521017381496,["gengmei_pxf@gengmei123.local",[[1,20,"byte"]],[20,20],[24,24]]],[1521017389814,["gengmei_pxf@gengmei123.local",[[1,24,",shrot,intzi"]],[24,24],[36,36]]],[1521017390357,["gengmei_pxf@gengmei123.local",[[-1,34,"zi"]],[36,36],[34,34]]],[1521017402935,["gengmei_pxf@gengmei123.local",[[1,34,"字节数，范围什么的"]],[34,34],[43,43]]],[1521017404228,["gengmei_pxf@gengmei123.local",[[1,44,"\n"]],[43,43],[44,44]]],[1521017409012,["gengmei_pxf@gengmei123.local",[[1,447,"\n"]],[446,446],[447,447]]],[1521017412700,["gengmei_pxf@gengmei123.local",[[1,478,"\n"]],[477,477],[478,478]]],[1521017488825,["gengmei_pxf@gengmei123.local",[[1,450,"\n"]],[450,450],[451,451]]],[1521017490901,["gengmei_pxf@gengmei123.local",[[1,450,"# Context的应用场景\n\n![](http://img.blog.csdn.net/20150104183450879)"]],[450,450],[513,513]]],[1521017493693,["gengmei_pxf@gengmei123.local",[[-1,450,"# "]],[452,452],[450,450]]],[1521017499712,["gengmei_pxf@gengmei123.local",[[1,512,"\n"]],[511,511],[512,512]]],[1521017748885,["gengmei_pxf@gengmei123.local",[[-1,512,"\n"]],[512,512],[511,511]]],[1521017755245,["gengmei_pxf@gengmei123.local",[[-1,630,"8.查看大图功能设计注意的点"]],[630,644],[630,630]]],[1521017759007,["gengmei_pxf@gengmei123.local",[[1,912,"8.查看大图功能设计注意的点"]],[912,912],[926,926]]],[1521017761718,["gengmei_pxf@gengmei123.local",[[-1,912,"8."]],[914,914],[912,912]]],[1521019744260,["gengmei_pxf@gengmei123.local",[[1,229,"\n"]],[227,227],[228,228]]],[1521019744661,["gengmei_pxf@gengmei123.local",[[1,230,"\n"]],[228,228],[229,229]]],[1521019745398,["gengmei_pxf@gengmei123.local",[[1,229,"[Android源码解析Window系列第（二）篇---Dialog加载绘制流程](https://www.jianshu.com/p/f9303d30eb2b)\n"]],[229,229],[311,311]]],[1521019747123,["gengmei_pxf@gengmei123.local",[[-1,312,"\n"]],[311,311],[310,310]]],[1521019752908,["gengmei_pxf@gengmei123.local",[[-1,173,"3.设计模式\n* Activity继承BaseActivity的设计模式是模板方法\n* 事件分发是责任链模式"]],[175,227],[173,173]]],[1521019753093,["gengmei_pxf@gengmei123.local",[[-1,174,"\n"]],[173,173],[172,172]]],[1521019754891,["gengmei_pxf@gengmei123.local",[[1,45,"\n"]],[44,44],[45,45]]],[1521019755692,["gengmei_pxf@gengmei123.local",[[1,46,"\n"]],[45,45],[46,46]]],[1521019756422,["gengmei_pxf@gengmei123.local",[[1,45,"设计模式\n* Activity继承BaseActivity的设计模式是模板方法\n* 事件分发是责任链模式"]],[45,45],[97,97]]],[1521019759646,["gengmei_pxf@gengmei123.local",[[1,45,"## "]],[45,45],[48,48]]],[1521019765006,["gengmei_pxf@gengmei123.local",[[-1,11,"1."]],[13,13],[11,11]]],[1521019765447,["gengmei_pxf@gengmei123.local",[[1,11,"## "]],[11,11],[14,14]]],[1521019770956,["gengmei_pxf@gengmei123.local",[[-1,103,"2."]],[105,105],[103,103]]],[1521019771438,["gengmei_pxf@gengmei123.local",[[1,103,"## "]],[103,103],[106,106]]],[1521019785254,["gengmei_pxf@gengmei123.local",[[1,232,"Dialog加载绘制"]],[232,232],[242,242]]],[1521019788860,["gengmei_pxf@gengmei123.local",[[1,232,"## "]],[232,232],[235,235]]],[1521019799803,["gengmei_pxf@gengmei123.local",[[1,105,"\n"]],[105,105],[106,106]]],[1521019802194,["gengmei_pxf@gengmei123.local",[[1,105,"Android加载布局流程"]],[105,105],[118,118]]],[1521019805099,["gengmei_pxf@gengmei123.local",[[1,105," "]],[105,105],[106,106]]],[1521019807449,["gengmei_pxf@gengmei123.local",[[-1,120," "]],[121,121],[120,120]]],[1521019811017,["gengmei_pxf@gengmei123.local",[[1,148,"\n"]],[147,147],[148,148]]],[1521019814954,["gengmei_pxf@gengmei123.local",[[1,120,"tiwe"]],[120,120],[124,124]]],[1521019815697,["gengmei_pxf@gengmei123.local",[[-1,120,"tiwe"]],[124,124],[120,120]]],[1521019817323,["gengmei_pxf@gengmei123.local",[[1,120,"tiwen "]],[120,120],[126,126]]],[1521019818810,["gengmei_pxf@gengmei123.local",[[-1,120,"tiwen "]],[126,126],[120,120]]],[1521019822341,["gengmei_pxf@gengmei123.local",[[1,120,"提问的是"]],[120,120],[124,124]]],[1521019832298,["gengmei_pxf@gengmei123.local",[[-1,348,"4."]],[350,350],[348,348]]],[1521019832907,["gengmei_pxf@gengmei123.local",[[1,348,"Android加载布局流程"]],[348,348],[361,361]]],[1521019834042,["gengmei_pxf@gengmei123.local",[[-1,348,"Android加载布局流程"]],[361,361],[348,348]]],[1521019836034,["gengmei_pxf@gengmei123.local",[[1,348,"## "]],[348,348],[351,351]]],[1521019839466,["gengmei_pxf@gengmei123.local",[[-1,568,"5."]],[570,570],[568,568]]],[1521019841076,["gengmei_pxf@gengmei123.local",[[1,568,"## "]],[568,568],[571,571]]],[1521019850260,["gengmei_pxf@gengmei123.local",[[-1,633,"dialog的父类 Service不能创建dialog"]],[633,660],[633,633]]],[1521019850634,["gengmei_pxf@gengmei123.local",[[-1,634,"\n"]],[633,633],[632,632]]],[1521019852561,["gengmei_pxf@gengmei123.local",[[1,585,"\n"]],[583,583],[584,584]]],[1521019856034,["gengmei_pxf@gengmei123.local",[[1,584,"提问的是dialog的父类 Service不能创建dialog"]],[584,584],[615,615]]],[1521019860913,["gengmei_pxf@gengmei123.local",[[-1,588,"dialog的父类 "]],[588,598],[588,588]]],[1521019863731,["gengmei_pxf@gengmei123.local",[[1,595,"能"]],[595,595],[596,596]]],[1521019872321,["gengmei_pxf@gengmei123.local",[[-1,657,"6."]],[659,659],[657,657]]],[1521019873826,["gengmei_pxf@gengmei123.local",[[1,657,"## "]],[657,657],[660,660]]],[1521019877217,["gengmei_pxf@gengmei123.local",[[1,680,"\n"]],[680,680],[681,681]]],[1521019877425,["gengmei_pxf@gengmei123.local",[[1,681,"\n"]],[681,681],[682,682]]],[1521019880698,["gengmei_pxf@gengmei123.local",[[-1,682,"7."],[1,684,"## "]],[682,684],[685,685]]],[1521020188671,["gengmei_pxf@gengmei123.local",[[1,265,"\n"]],[264,264],[265,265]]],[1521020188831,["gengmei_pxf@gengmei123.local",[[1,266,"\n"]],[265,265],[266,266]]],[1521020190839,["gengmei_pxf@gengmei123.local",[[1,267,"\n"]],[265,265],[266,266]]],[1521020191231,["gengmei_pxf@gengmei123.local",[[1,266,"AlertDialog和Activity一样，内部有一个Window，我们构造AlertDialog.Builder，通过Builder设置Dialog各种属性，,这些参数会被放在一个名为P（AlertController类型）的变量中，在调用AlertDialog.Builder.create方法的时候，内部首先会new一个 AlertDialog，AlertDialog的父类Dialog的构造函数中会new一个PhoneWindow赋值给AlertDialog中的Window，并且为它设置了回调。AlertDialog创建之后执行apply方法，将P中的参数设置赋值给Dialog,后我们调用Dialog.show方法展示窗口，内部调用dispatchOnCreate，最终会走到setContentView，到此Dialog的Window和Dialog视图关联到了一起，最后执行mWindowManager.addView方法，通过WindowManager将DecorView添加到Window之中,此时Dialog显示在了我们面前。\n\n作者：LooperJing\n链接：https://www.jianshu.com/p/f9303d30eb2b\n來源：简书\n著作权归作者所有。商业转载请联系作者获得授权，非商业转载请注明出处。"]],[266,266],[838,838]]],[1521020201527,["gengmei_pxf@gengmei123.local",[[-1,742,"作者：LooperJing\n链接：https://www.jianshu.com/p/f9303d30eb2b\n來源：简书\n著作权归作者所有。商业转载请联系作者获得授权，非商业转载请注明出处。\n"]],[741,838],[741,741]]],[1521020202118,["gengmei_pxf@gengmei123.local",[[-1,742,"\n"]],[741,741],[740,740]]],[1521020564070,["gengmei_pxf@gengmei123.local",[[1,266,"* "]],[266,266],[268,268]]],[1521020575083,["gengmei_pxf@gengmei123.local",[[1,387,"\n"]],[387,387],[388,388]]],[1521020576971,["gengmei_pxf@gengmei123.local",[[1,388,"\n"]],[388,388],[389,389]]],[1521020577950,["gengmei_pxf@gengmei123.local",[[1,389,"* "]],[389,389],[391,391]]],[1521020587947,["gengmei_pxf@gengmei123.local",[[1,525,"\n"]],[525,525],[526,526]]],[1521020588530,["gengmei_pxf@gengmei123.local",[[1,526,"\n"]],[526,526],[527,527]]],[1521020589989,["gengmei_pxf@gengmei123.local",[[1,527,"* "]],[527,527],[529,529]]],[1521020598954,["gengmei_pxf@gengmei123.local",[[1,667,"\n"]],[667,667],[668,668]]],[1521020599523,["gengmei_pxf@gengmei123.local",[[1,668,"\n"]],[668,668],[669,669]]],[1521020600757,["gengmei_pxf@gengmei123.local",[[1,669,"* "]],[669,669],[671,671]]],[1521020636147,["gengmei_pxf@gengmei123.local",[[1,153,"\n"]],[151,151],[152,152]]],[1521020636449,["gengmei_pxf@gengmei123.local",[[1,154,"\n"]],[152,152],[153,153]]],[1521020636998,["gengmei_pxf@gengmei123.local",[[1,153,"流程： \nActivity setContentView—>Window setContentView—>PhoneWindow setContentView—->PhoneWindow installDecor—–>PhoneWindow generateLayout——>PhoneWindow mLayoutInflater.inflate(layoutResID, mContentParent);\n\nActivity 类中有一个Window抽象类的实现PhoneWindow类，该类中有个内部类DecorView，继承自FrameLayout，在DecorView容器中添加了根布局，根布局中包含了一个id为 contnet的FrameLayout 内容布局，我们的Activity加载的布局xml最后添加到 id为content的FrameLayout布局当中了。用一个图来描述，如下：\n\n![这里写图片描述](http://img.blog.csdn.net/20150702153425952)\n\n总结：\n\n1.关于requestWindowFeature(Window.FEATURE_NO_TITLE); 去除标题栏的疑问，如果你自己的xxxActivity是继承自Activity，那么恭喜你使用以上方法可以去除标题栏，如果你自己的xxxActivity是继承自AppCompatActivity或者ActionBarActivity，那么很遗憾告诉你，此次系统默认的标题栏已经在主题中去除，此时显示的标题栏是ActionBar导航栏，如果需要去除导航栏，你可以通过如下代码：getSupportActionBar().hide();来隐藏导航栏。\n\n2.requestWindowFeature(Window.FEATURE_NO_TITLE);方法需要在 setContentView方法之前使用，由上面 Step5分析可得，设置Activity Window 特征是在setContentView方法中设置的，因此，如果需要改变Activity Window窗口特征，需要在setContentView方法之前。其实这里有疑问？？？为什么设置全屏的方法\n\n```\ngetWindow().setFlags(WindowManager.LayoutParams.FLAG_FULLSCREEN, WindowManager.LayoutParams.FLAG_FULLSCREEN);\n```\n\n可以在setContentView之后呢？？？求解。"]],[153,153],[1240,1240]]],[1521020642579,["gengmei_pxf@gengmei123.local",[[1,153,"*"],[-1,156," "],[1,157,"  "]],[153,153],[155,155]]],[1521020644745,["gengmei_pxf@gengmei123.local",[[1,360,"* "]],[360,360],[362,362]]],[1521020650979,["gengmei_pxf@gengmei123.local",[[1,614,"* "]],[614,614],[616,616]]],[1521020661720,["gengmei_pxf@gengmei123.local",[[-1,153,"*"]],[154,154],[153,153]]],[1521020663370,["gengmei_pxf@gengmei123.local",[[1,153,"## "]],[153,153],[156,156]]],[1521020698268,[null,[[1,156," "],[-1,159," "]],[156,156],[159,159]]],[1521020698268,[null,[[-1,156," "],[1,160," "]],[159,159],[156,156]]],[1521020664807,["gengmei_pxf@gengmei123.local",[[-1,152,"\n"]],[153,153],[152,152]]],[1521020666552,["gengmei_pxf@gengmei123.local",[[1,152,"\n"]],[152,152],[153,153]]],[1521020667371,["gengmei_pxf@gengmei123.local",[[1,155,"#"]],[153,153],[154,154]]],[1521020671545,["gengmei_pxf@gengmei123.local",[[-1,617,"*"]],[618,618],[617,617]]],[1521020672467,["gengmei_pxf@gengmei123.local",[[1,617,"###"]],[617,617],[620,620]]],[1521020683062,["gengmei_pxf@gengmei123.local",[[1,163,"\n"]],[163,163],[164,164]]],[1521020683860,["gengmei_pxf@gengmei123.local",[[1,164,"* "]],[164,164],[166,166]]],[1521020687650,["gengmei_pxf@gengmei123.local",[[1,629,"* "]],[629,629],[631,631]]],[1521020689643,["gengmei_pxf@gengmei123.local",[[1,906,"* "]],[906,906],[908,908]]],[1521021735826,[null,[[1,157," "],[-1,160," "]],[157,157],[160,160]]],[1521021735826,[null,[[-1,157," "],[1,161," "]],[160,160],[157,157]]],[1521021725222,["gengmei_pxf@gengmei123.local",[[1,2279,"[深入理解View的构造函数](https://link.jianshu.com/?t=http://www.jcodecraeer.com/a/anzhuokaifa/androidkaifa/2016/0806/4575.html)和\n[理解View的构造函数](https://link.jianshu.com/?t=http://www.cnblogs.com/angeldevil/p/3479431.html#three)"]],[2279,2279],[2496,2496]]],[1521021726610,["gengmei_pxf@gengmei123.local",[[1,2497,"\n"]],[2496,2496],[2497,2497]]],[1521021728826,["gengmei_pxf@gengmei123.local",[[-1,2397,"和"]],[2398,2398],[2397,2397]]],[1521021732027,["gengmei_pxf@gengmei123.local",[[1,2279,"* "]],[2279,2279],[2281,2281]]],[1521021733681,["gengmei_pxf@gengmei123.local",[[1,2400,"\n"]],[2400,2400],[2401,2401]]],[1521021734588,["gengmei_pxf@gengmei123.local",[[1,2401,"* "]],[2401,2401],[2403,2403]]],[1521021810425,[null,[[1,157," "],[-1,160," "]],[157,157],[160,160]]],[1521021810425,[null,[[-1,157," "],[1,161," "]],[160,160],[157,157]]],[1521021807823,["gengmei_pxf@gengmei123.local",[[1,2279,"\n"]],[2277,2277],[2278,2278]]],[1521021808326,["gengmei_pxf@gengmei123.local",[[1,2280,"\n"]],[2278,2278],[2279,2279]]],[1521021808777,["gengmei_pxf@gengmei123.local",[[1,2279,"## 方法参数\n\n构造函数参数最多有四个。简单总结下：\n\n*   Context - View中随处都会用到。\n\n*   AttributeSet - XML属性（当从XML inflate的时候）。\n\n*   int defStyleAttr - 应用到View的默认风格（定义在主题中）。\n\n*   int defStyleResource - 如果没有使用defStyleAttr，应用到View的默认风格\n\n除了Context，其它的参数只是用来通过XML属性配置View的初始状态（从布局，style以及theme中）。"]],[2279,2279],[2544,2544]]],[1521021813353,[null,[[1,157," "],[-1,160," "]],[157,157],[160,160]]],[1521021813353,[null,[[-1,157," "],[1,161," "]],[160,160],[157,157]]],[1521021812515,["gengmei_pxf@gengmei123.local",[[-1,2281,""],[1,2281,"#"],[-1,2319," "],[1,2320," "],[-1,2352," "],[1,2353," "],[-1,2401," "],[1,2402," "],[-1,2451," "],[1,2452," "]],[2281,2281],[2282,2282]]],[1521021873468,[null,[[1,157," "],[-1,160," "]],[157,157],[160,160]]],[1521021873468,[null,[[-1,157," "],[1,161," "]],[160,160],[157,157]]],[1521021858589,["gengmei_pxf@gengmei123.local",[[-1,2265,"的"]],[2266,2266],[2265,2265]]],[1521021859300,["gengmei_pxf@gengmei123.local",[[1,2265,"\n"]],[2265,2265],[2266,2266]]],[1521021860044,["gengmei_pxf@gengmei123.local",[[1,2266,"\n"]],[2266,2266],[2267,2267]]],[1521021864261,["gengmei_pxf@gengmei123.local",[[1,2267,"### #"]],[2267,2267],[2272,2272]]],[1521021865380,["gengmei_pxf@gengmei123.local",[[-1,2271,"#"]],[2272,2272],[2271,2271]]],[1521021868181,["gengmei_pxf@gengmei123.local",[[1,2287,"#"]],[2287,2287],[2288,2288]]],[1521021872195,["gengmei_pxf@gengmei123.local",[[1,2776,"\n"]],[2774,2774],[2775,2775]]],[1521021872531,["gengmei_pxf@gengmei123.local",[[1,2777,"\n"]],[2775,2775],[2776,2776]]],[1521021896710,[null,[[1,157," "],[-1,160," "]],[157,157],[160,160]]],[1521021896710,[null,[[-1,157," "],[1,161," "]],[160,160],[157,157]]],[1521021876669,["gengmei_pxf@gengmei123.local",[[1,2776,"## "]],[2776,2776],[2779,2779]]],[1521021878694,["gengmei_pxf@gengmei123.local",[[1,2778,"【】"]],[2778,2778],[2780,2780]]],[1521021879707,["gengmei_pxf@gengmei123.local",[[-1,2778,"【】"]],[2780,2780],[2778,2778]]],[1521021882243,["gengmei_pxf@gengmei123.local",[[1,2778,"[]("]],[2778,2778],[2781,2781]]],[1521021883731,["gengmei_pxf@gengmei123.local",[[-1,2781," "]],[2782,2782],[2781,2781]]],[1521021885757,["gengmei_pxf@gengmei123.local",[[1,2819,")"]],[2819,2819],[2820,2820]]],[1521021895883,["gengmei_pxf@gengmei123.local",[[1,2779,"# 自定义View基础 - 最易懂的自定义View原理系列（1）"]],[2779,2779],[2811,2811]]],[1521021902103,[null,[[1,157," "],[-1,160," "],[1,2813,"https://www.jianshu.com/p/146e5cec4863)"],[-1,2851,")"]],[157,157],[2851,2851]]],[1521021902103,[null,[[-1,157," "],[1,161," "],[-1,2813,"https://www.jianshu.com/p/146e5cec4863)"],[1,2890,")"]],[2851,2851],[157,157]]],[1521021898779,["gengmei_pxf@gengmei123.local",[[-1,2779,"# "]],[2781,2781],[2779,2779]]],[1521021901107,["gengmei_pxf@gengmei123.local",[[1,2778," "]],[2778,2778],[2779,2779]]],[1521021928885,[null,[[1,157," "],[-1,160," "],[1,2812,"https://www.jianshu.com/p/146e5cec4863)"],[-1,2850,")"]],[157,157],[2850,2850]]],[1521021928885,[null,[[-1,157," "],[1,161," "],[-1,2812,"https://www.jianshu.com/p/146e5cec4863)"],[1,2889,")"]],[2850,2850],[157,157]]],[1521021926906,["gengmei_pxf@gengmei123.local",[[1,2778,"#"]],[2778,2778],[2779,2779]]],[1521021987940,[null,[[1,157," "],[-1,160," "],[1,2813,"https://www.jianshu.com/p/146e5cec4863)"],[-1,2851,")"]],[157,157],[2851,2851]]],[1521021987940,[null,[[-1,157," "],[1,161," "],[-1,2813,"https://www.jianshu.com/p/146e5cec4863)"],[1,2890,")"]],[2851,2851],[157,157]]],[1521021959768,["gengmei_pxf@gengmei123.local",[[-1,2790," - 最易懂的自定义View原理系列（1）"]],[2790,2811],[2790,2790]]],[1521021962280,["gengmei_pxf@gengmei123.local",[[-1,2780,"["]],[2781,2781],[2780,2780]]],[1521021965375,["gengmei_pxf@gengmei123.local",[[-1,2789,"](https://www.jianshu.com/p/146e5cec4863)"]],[2789,2830],[2789,2789]]],[1521021966023,["gengmei_pxf@gengmei123.local",[[1,2791,"\n"]],[2789,2789],[2790,2790]]],[1521021966999,["gengmei_pxf@gengmei123.local",[[1,2792,"\n"]],[2790,2790],[2791,2791]]],[1521021967698,["gengmei_pxf@gengmei123.local",[[1,2791,"[（1）自定义View基础 - 最易懂的自定义View原理系列](https://www.jianshu.com/p/146e5cec4863)\n[（2）自定义View Measure过程 - 最易懂的自定义View原理系列](https://www.jianshu.com/p/1dab927b2f36)\n[（3）自定义View Layout过程 - 最易懂的自定义View原理系列](https://www.jianshu.com/p/158736a2549d)\n[（4）自定义View Draw过程- 最易懂的自定义View原理系列](https://www.jianshu.com/p/95afeb7c8335)\n\n作者：Carson_Ho\n链接：https://www.jianshu.com/p/146e5cec4863\n來源：简书\n著作权归作者所有。商业转载请联系作者获得授权，非商业转载请注明出处。"]],[2791,2791],[3198,3198]]],[1521021972418,["gengmei_pxf@gengmei123.local",[[1,2791,"* "]],[2791,2791],[2793,2793]]],[1521021979360,["gengmei_pxf@gengmei123.local",[[1,2825,"* "]],[2825,2825],[2827,2827]]],[1521021980268,["gengmei_pxf@gengmei123.local",[[-1,2825,"* "]],[2827,2827],[2825,2825]]],[1521021982193,["gengmei_pxf@gengmei123.local",[[1,2866,"* "]],[2866,2866],[2868,2868]]],[1521021984737,["gengmei_pxf@gengmei123.local",[[1,2949,"* "]],[2949,2949],[2951,2951]]],[1521021986961,["gengmei_pxf@gengmei123.local",[[1,3031,"* "]],[3031,3031],[3033,3033]]],[1521021993220,[null,[[1,157," "],[-1,160," "],[-1,2789,"d的"],[1,2791,"\n\n"],[1,3208,"## 为什么handler的runnable函数是在主线程，而thread的"]],[157,157],[3246,3246]]],[1521021993220,[null,[[-1,157," "],[1,161," "],[1,2789,"d的"],[-1,2789,"\n\n"],[-1,3208,"## 为什么handler的runnable函数是在主线程，而thread的"]],[3246,3246],[157,157]]],[1521021991894,["gengmei_pxf@gengmei123.local",[[-1,3111,"作者：Carson_Ho\n链接：https://www.jianshu.com/p/146e5cec4863\n來源：简书\n著作权归作者所有。商业转载请联系作者获得授权，非商业转载请注明出处。\n"]],[3111,3207],[3111,3111]]],[1521021992070,["gengmei_pxf@gengmei123.local",[[-1,3111,"\n"]],[3111,3111],[3110,3110]]],[1521022017329,[null,[[1,157," "],[-1,160," "],[-1,2789,"d的"],[1,2791,"\n\n"],[1,3111,"## 为什么handler的runnable函数是在主线程，而thread的"]],[157,157],[3149,3149]]],[1521022017329,[null,[[-1,157," "],[1,161," "],[1,2789,"d的"],[-1,2789,"\n\n"],[-1,3111,"## 为什么handler的runnable函数是在主线程，而thread的"]],[3149,3149],[157,157]]],[1521022015520,["gengmei_pxf@gengmei123.local",[[-1,2271,"3个"],[-1,2277,"的使用场景\n\n#### "]],[2271,2289],[2275,2275]]],[1521022031186,[null,[[1,157," "],[-1,160," "],[-1,2775,"d的"],[1,2777,"\n\n"],[1,3097,"## 为什么handler的runnable函数是在主线程，而thread的"]],[157,157],[3135,3135]]],[1521022031186,[null,[[-1,157," "],[1,161," "],[1,2775,"d的"],[-1,2775,"\n\n"],[-1,3097,"## 为什么handler的runnable函数是在主线程，而thread的"]],[3135,3135],[157,157]]],[1521022029381,["gengmei_pxf@gengmei123.local",[[1,3166,"\n"]],[3164,3164],[3165,3165]]],[1521022029788,["gengmei_pxf@gengmei123.local",[[1,3167,"\n"]],[3165,3165],[3166,3166]]],[1521022045067,[null,[[1,157," "],[-1,160," "],[-1,2775,"d的"],[1,2777,"\n\n"],[1,3097,"## 为什么handler的runnable函数是在主线程，而thread的"],[1,3126,"\n\n"],[-1,3166,"\n\n"]],[157,157],[3166,3166]]],[1521022045067,[null,[[-1,157," "],[1,161," "],[1,2775,"d的"],[-1,2775,"\n\n"],[-1,3097,"## 为什么handler的runnable函数是在主线程，而thread的"],[-1,3164,"\n\n"],[1,3206,"\n\n"]],[3166,3166],[157,157]]],[1521022040596,["gengmei_pxf@gengmei123.local",[[-1,3168,"9."]],[3170,3170],[3168,3168]]],[1521022041832,["gengmei_pxf@gengmei123.local",[[1,3168,"## "]],[3168,3168],[3171,3171]]],[1521022043940,["gengmei_pxf@gengmei123.local",[[1,3186,"\n"]],[3184,3184],[3185,3185]]],[1521025405071,[null,[[1,157," "],[-1,160," "],[-1,2775,"d的"],[1,2777,"\n\n"],[1,3097,"## 为什么handler的runnable函数是在主线程，而thread的"],[-1,3128,"9."],[1,3130,"\n\n## "],[1,3143,"\n"],[-1,3166,"\n\n## "],[1,3171,"复杂"],[-1,3186,"\n"]],[157,157],[3186,3186]]],[1521025405072,[null,[[-1,157," "],[1,161," "],[1,2775,"d的"],[-1,2775,"\n\n"],[-1,3097,"## 为什么handler的runnable函数是在主线程，而thread的"],[1,3166,"9."],[-1,3166,"\n\n## "],[-1,3184,"\n"],[1,3208,"\n\n## "],[-1,3208,"复杂"],[1,3225,"\n"]],[3186,3186],[157,157]]],[1521025368579,["gengmei_pxf@gengmei123.local",[[-1,3187,"10."],[1,3190,"## "]],[3187,3190],[3190,3190]]],[1521025374340,["gengmei_pxf@gengmei123.local",[[-1,3214,"11."],[1,3217,"## "]],[3214,3217],[3217,3217]]],[1521025377177,["gengmei_pxf@gengmei123.local",[[1,3214,"\n"]],[3214,3214],[3215,3215]]],[1521025381483,["gengmei_pxf@gengmei123.local",[[-1,3244,"12."],[1,3247,"## "]],[3244,3247],[3247,3247]]],[1521025382616,["gengmei_pxf@gengmei123.local",[[1,3244,"\n"]],[3244,3244],[3245,3245]]],[1521025386667,["gengmei_pxf@gengmei123.local",[[-1,3267,"13."],[1,3270,"## "]],[3267,3270],[3270,3270]]],[1521025389784,["gengmei_pxf@gengmei123.local",[[1,3285,"\n"]],[3285,3285],[3286,3286]]],[1521025392587,["gengmei_pxf@gengmei123.local",[[-1,3286,"14."],[1,3289,"## "]],[3286,3289],[3289,3289]]],[1521025705082,[null,[[1,157," "],[-1,160," "],[-1,2775,"d的"],[1,2777,"\n\n"],[1,3097,"## 为什么handler的runnable函数是在主线程，而thread的"],[-1,3128,"9."],[1,3130,"\n\n## "],[-1,3145,"10."],[1,3148,"\n## "],[1,3166,"复杂的效果"],[-1,3171,"的效果\n11."],[-1,3186,"\n## "],[1,3190,"stu"],[-1,3205,"12."],[1,3208,"\n## "],[-1,3214,"\n## "],[1,3218,"层加锁"],[-1,3228,"13."],[1,3231,"## "],[1,3244,"g\n"],[-1,3248,"4."],[-1,3267,"## "],[1,3270,"区别\n"],[-1,3286,"## "],[1,3289,"17"]],[157,157],[3291,3291]]],[1521025705082,[null,[[-1,157," "],[1,161," "],[1,2775,"d的"],[-1,2775,"\n\n"],[-1,3097,"## 为什么handler的runnable函数是在主线程，而thread的"],[1,3166,"9."],[-1,3166,"\n\n## "],[1,3186,"10."],[-1,3186,"\n## "],[-1,3208,"复杂的效果"],[1,3218,"的效果\n11."],[1,3226,"\n## "],[-1,3226,"stu"],[1,3244,"12."],[-1,3244,"\n## "],[1,3254,"\n## "],[-1,3254,"层加锁"],[1,3267,"13."],[-1,3267,"## "],[-1,3283,"g\n"],[1,3289,"4."],[1,3306,"## "],[-1,3306,"区别\n"],[1,3325,"## "],[-1,3325,"17"]],[3291,3291],[157,157]]],[1521025655256,["gengmei_pxf@gengmei123.local",[[1,3215,"\n"]],[3213,3213],[3214,3214]]],[1521025655817,["gengmei_pxf@gengmei123.local",[[1,3216,"\n"]],[3214,3214],[3215,3215]]],[1521025656411,["gengmei_pxf@gengmei123.local",[[1,3215,"我们知道recyclerview实现GridView效果只需配置一下参数就行了\n\n```\n    GridLayoutManager layoutManage = new GridLayoutManager(getContext(), 2);\n    recycerView.setLayoutManager(layoutManage);\n\n```\n\n可以看到GridLayoutManager需要传递两个参数，一个是上下文对象，另一个是一行显示几列的参数常量，既然这个常量可以指定那么是不是这个值可以去控制呐，答案当然是yes\n\n我们会注意到GridLayoutManager里边有个setSpanSizeLookup方法,本篇的重点就是这个方法（这个方法具体意义大家可以网上搜索，会有很多相关介绍，以及通过它实现一些复杂的布局，再次不做过多讨论）\n\n```\n     layoutManage.setSpanSizeLookup(new GridLayoutManager.SpanSizeLookup() {\n                 @Override\n                 public int getSpanSize(int position) {\n                     return 0;\n                 }\n             });\n\n```\n\n其实getSpanSize返回值就是控制每行有几列的，根据这个思路我们不妨试试。因为recyclerview填充数据是根据adapter实现的，我们就把给adapter的数据源同样在setSpanSizeLookup这个方法里边判断一下不就行了吗？\n根据这个思路于是有了下面的代码\n\n```\n        /**\n         * 如果单个item显示的字数大于指定某个值就显示一列  默认2列\n         */\n\n         //设置item数据大于多少字只显示一行  默认 超过九个字的程度只显示一列\n\n         private static final int MAX = 9;\n\n        private int setSpanSize(int position, List<TagBean> listEntities) {\n            int count;\n            if (listEntities.get(position).getTag_name().length() > MAX) {\n                count = 2;\n            } else {\n                count = 1;\n            }\n\n            return count;\n        }\n\n        layoutManage.setSpanSizeLookup(new GridLayoutManager.SpanSizeLookup() {\n                             @Override\n                             public int getSpanSize(int position) {\n                                 return setSpanSize(position,list);\n                             }\n                         });\n\n```\n\n作者：lygttpod\n链接：https://www.jianshu.com/p/675883c26ef2\n來源：简书\n著作权归作者所有。商业转载请联系作者获得授权，非商业转载请注明出处。"]],[3215,3215],[4852,4852]]],[1521025666326,["gengmei_pxf@gengmei123.local",[[-1,3215,"我们知道recyclerview实现GridView效果只需配置一下参数就行了\n\n```\n    GridLayoutManager layoutManage = new GridLayoutManager(getContext(), 2);\n    recycerView.setLayoutManager(layoutManage);\n\n```\n\n可以看到GridLayoutManager需要传递两个参数，一个是上下文对象，另一个是一行显示几列的参数常量，既然这个常量可以指定那么是不是这个值可以去控制呐，答案当然是yes\n\n我们会注意到GridLayoutManager里边有个setSpanSizeLookup方法,本篇的重点就是这个方法（这个方法具体意义大家可以网上搜索，会有很多相关介绍，以及通过它实现一些复杂的布局，再次不做过多讨论）\n\n```\n     layoutManage.setSpanSizeLookup(new GridLayoutManager.SpanSizeLookup() {\n                 @Override\n                 public int getSpanSize(int position) {\n                     return 0;\n                 }\n             });\n\n```\n\n其实getSpanSize返回值就是控制每行有几列的，根据这个思路我们不妨试试。因为recyclerview填充数据是根据adapter实现的，我们就把给adapter的数据源同样在setSpanSizeLookup这个方法里边判断一下不就行了吗？\n根据这个思路于是有了下面的代码\n\n```\n        /**\n         * 如果单个item显示的字数大于指定某个值就显示一列  默认2列\n         */\n\n         //设置item数据大于多少字只显示一行  默认 超过九个字的程度只显示一列\n\n         private static final int MAX = 9;\n\n        private int setSpanSize(int position, List<TagBean> listEntities) {\n            int count;\n            if (listEntities.get(position).getTag_name().length() > MAX) {\n                count = 2;\n            } else {\n                count = 1;\n            }\n\n            return count;\n        }\n\n        layoutManage.setSpanSizeLookup(new GridLayoutManager.SpanSizeLookup() {\n                             @Override\n                             public int getSpanSize(int position) {\n                                 return setSpanSize(position,list);\n                             }\n                         });\n\n```\n\n作者：lygttpod\n链接：https://www.jianshu.com/p/675883c26ef2\n來源：简书\n著作权归作者所有。商业转载请联系作者获得授权，非商业转载请注明出处。"]],[4852,4852],[3215,3215]]],[1521025668224,["gengmei_pxf@gengmei123.local",[[1,3215,"我们知道recyclerview实现GridView效果只需配置一下参数就行了\n\n```\n    GridLayoutManager layoutManage = new GridLayoutManager(getContext(), 2);\n    recycerView.setLayoutManager(layoutManage);\n\n```\n\n可以看到GridLayoutManager需要传递两个参数，一个是上下文对象，另一个是一行显示几列的参数常量，既然这个常量可以指定那么是不是这个值可以去控制呐，答案当然是yes\n\n我们会注意到GridLayoutManager里边有个setSpanSizeLookup方法,本篇的重点就是这个方法（这个方法具体意义大家可以网上搜索，会有很多相关介绍，以及通过它实现一些复杂的布局，再次不做过多讨论）\n\n```\n     layoutManage.setSpanSizeLookup(new GridLayoutManager.SpanSizeLookup() {\n                 @Override\n                 public int getSpanSize(int position) {\n                     return 0;\n                 }\n             });\n\n```\n\n其实getSpanSize返回值就是控制每行有几列的，根据这个思路我们不妨试试。因为recyclerview填充数据是根据adapter实现的，我们就把给adapter的数据源同样在setSpanSizeLookup这个方法里边判断一下不就行了吗？\n根据这个思路于是有了下面的代码\n\n```\n        /**\n         * 如果单个item显示的字数大于指定某个值就显示一列  默认2列\n         */\n\n         //设置item数据大于多少字只显示一行  默认 超过九个字的程度只显示一列\n\n         private static final int MAX = 9;\n\n        private int setSpanSize(int position, List<TagBean> listEntities) {\n            int count;\n            if (listEntities.get(position).getTag_name().length() > MAX) {\n                count = 2;\n            } else {\n                count = 1;\n            }\n\n            return count;\n        }\n\n        layoutManage.setSpanSizeLookup(new GridLayoutManager.SpanSizeLookup() {\n                             @Override\n                             public int getSpanSize(int position) {\n                                 return setSpanSize(position,list);\n                             }\n                         });\n\n```\n\n作者：lygttpod\n链接：https://www.jianshu.com/p/675883c26ef2\n來源：简书\n著作权归作者所有。商业转载请联系作者获得授权，非商业转载请注明出处。"]],[3215,3215],[4852,4852]]],[1521025678615,["gengmei_pxf@gengmei123.local",[[-1,4758,"作者：lygttpod\n链接：https://www.jianshu.com/p/675883c26ef2\n來源：简书\n著作权归作者所有。商业转载请联系作者获得授权，非商业转载请注明出处。\n"]],[4757,4852],[4757,4757]]],[1521025678975,["gengmei_pxf@gengmei123.local",[[-1,4758,"\n"]],[4757,4757],[4756,4756]]],[1521025679535,["gengmei_pxf@gengmei123.local",[[-1,4755,"`"]],[4756,4756],[4755,4755]]],[1521025681134,["gengmei_pxf@gengmei123.local",[[1,4755,"`"]],[4755,4755],[4756,4756]]],[1521025825077,[null,[[1,157," "],[-1,160," "],[-1,2775,"d的"],[1,2777,"\n\n"],[1,3097,"## 为什么handler的runnable函数是在主线程，而thread的"],[-1,3128,"9."],[1,3130,"\n\n## "],[-1,3145,"10."],[1,3148,"\n## "],[-1,3166,"\n\n## "],[1,3171,"复杂"],[-1,3175,"11.Android \n## dio的使用，例如debug\n12.手写单例，双"],[1,4761,"Android studio的使用，例如debug\n\n## 手写单例，双层加锁"],[-1,4771,"13."],[1,4774,"## "],[1,4787,"g\n"],[-1,4791,"4."],[-1,4810,"## "],[1,4813,"区别\n"],[-1,4829,"## "],[1,4832,"17"]],[157,157],[4834,4834]]],[1521025825078,[null,[[-1,157," "],[1,161," "],[1,2775,"d的"],[-1,2775,"\n\n"],[-1,3097,"## 为什么handler的runnable函数是在主线程，而thread的"],[1,3166,"9."],[-1,3166,"\n\n## "],[1,3186,"10."],[-1,3186,"\n## "],[1,3208,"\n\n## "],[-1,3208,"复杂"],[1,3214,"11.Android \n## dio的使用，例如debug\n12.手写单例，双"],[-1,4761,"Android studio的使用，例如debug\n\n## 手写单例，双层加锁"],[1,4810,"13."],[-1,4810,"## "],[-1,4826,"g\n"],[1,4832,"4."],[1,4849,"## "],[-1,4849,"区别\n"],[1,4868,"## "],[-1,4868,"17"]],[4834,4834],[157,157]]],[1521025796419,["gengmei_pxf@gengmei123.local",[[-1,3256,"```\n    GridLayoutManager layoutManage = new GridLayoutManager(getContext(), 2);\n    recycerView.setLayoutManager(layoutManage);\n\n```"]],[3256,3389],[3256,3256]]],[1521025805926,["gengmei_pxf@gengmei123.local",[[1,3257,"![GridLayoutManager1]($res/GridLayoutManager1.png)\n\n"]],[3256,3256],[3308,3308]]],[1521025809875,["gengmei_pxf@gengmei123.local",[[-1,3511,"```\n     layoutManage.setSpanSizeLookup(new GridLayoutManager.SpanSizeLookup() {\n                 @Override\n                 public int getSpanSize(int position) {\n                     return 0;\n                 }\n             });\n\n```"]],[3511,3746],[3511,3511]]],[1521025818189,["gengmei_pxf@gengmei123.local",[[1,3512,"![GridLayoutManager2]($res/GridLayoutManager2.png)\n\n"]],[3511,3511],[3563,3563]]],[1521025819984,["gengmei_pxf@gengmei123.local",[[-1,3564,"\n"]],[3563,3563],[3562,3562]]],[1521025838994,[null,[[1,157," "],[-1,160," "],[-1,2775,"d的"],[1,2777,"\n\n"],[1,3097,"## 为什么handler的runnable函数是在主线程，而thread的"],[-1,3128,"9."],[1,3130,"\n\n## "],[-1,3145,"10."],[1,3148,"\n## "],[-1,3166,"\n\n## "],[1,3171,"复杂"],[-1,3175,"11.Android \n## dio的使用，例如debug\n12.手写单例，双"],[1,4496,"Android studio的使用，例如debug\n\n## 手写单例，双层加锁"],[-1,4506,"13."],[1,4509,"## "],[1,4522,"g\n"],[-1,4526,"4."],[-1,4545,"## "],[1,4548,"区别\n"],[-1,4564,"## "],[1,4567,"17"]],[157,157],[4569,4569]]],[1521025838994,[null,[[-1,157," "],[1,161," "],[1,2775,"d的"],[-1,2775,"\n\n"],[-1,3097,"## 为什么handler的runnable函数是在主线程，而thread的"],[1,3166,"9."],[-1,3166,"\n\n## "],[1,3186,"10."],[-1,3186,"\n## "],[1,3208,"\n\n## "],[-1,3208,"复杂"],[1,3214,"11.Android \n## dio的使用，例如debug\n12.手写单例，双"],[-1,4496,"Android studio的使用，例如debug\n\n## 手写单例，双层加锁"],[1,4545,"13."],[-1,4545,"## "],[-1,4561,"g\n"],[1,4567,"4."],[1,4584,"## "],[-1,4584,"区别\n"],[1,4603,"## "],[-1,4603,"17"]],[4569,4569],[157,157]]],[1521025827498,["gengmei_pxf@gengmei123.local",[[-1,3706,"```\n        /**\n         * 如果单个item显示的字数大于指定某个值就显示一列  默认2列\n         */\n\n         //设置item数据大于多少字只显示一行  默认 超过九个字的程度只显示一列\n\n         private static final int MAX = 9;\n\n        private int setSpanSize(int position, List<TagBean> listEntities) {\n            int count;\n            if (listEntities.get(position).getTag_name().length() > MAX) {\n                count = 2;\n            } else {\n                count = 1;\n            }\n\n            return count;\n        }\n\n        layoutManage.setSpanSizeLookup(new GridLayoutManager.SpanSizeLookup() {\n                             @Override\n                             public int getSpanSize(int position) {\n                                 return setSpanSize(position,list);\n                             }\n                         });\n\n```"]],[3706,4491],[3706,3706]]],[1521025836035,["gengmei_pxf@gengmei123.local",[[1,3707,"![GridLayoutManager3]($res/GridLayoutManager3.png)\n\n"]],[3706,3706],[3758,3758]]],[1521025837818,["gengmei_pxf@gengmei123.local",[[-1,3759,"\n"]],[3758,3758],[3757,3757]]],[1521026078996,[null,[[1,157," "],[-1,160," "],[-1,2775,"d的"],[1,2777,"\n\n"],[1,3097,"## 为什么handler的runnable函数是在主线程，而thread的"],[-1,3128,"9."],[1,3130,"\n\n## "],[-1,3145,"10."],[1,3148,"\n## "],[-1,3166,"\n\n## "],[1,3171,"复杂"],[-1,3175,"11.Android \n## dio的使用，例如debug\n12.手写单例，双"],[1,3762,"Android studio的使用，例如debug\n\n## 手写单例，双层加锁"],[-1,3772,"13."],[1,3775,"## "],[1,3788,"g\n"],[-1,3792,"4."],[-1,3811,"## "],[1,3814,"区别\n"],[-1,3830,"## "],[1,3833,"17"]],[157,157],[3835,3835]]],[1521026078996,[null,[[-1,157," "],[1,161," "],[1,2775,"d的"],[-1,2775,"\n\n"],[-1,3097,"## 为什么handler的runnable函数是在主线程，而thread的"],[1,3166,"9."],[-1,3166,"\n\n## "],[1,3186,"10."],[-1,3186,"\n## "],[1,3208,"\n\n## "],[-1,3208,"复杂"],[1,3214,"11.Android \n## dio的使用，例如debug\n12.手写单例，双"],[-1,3762,"Android studio的使用，例如debug\n\n## 手写单例，双层加锁"],[1,3811,"13."],[-1,3811,"## "],[-1,3827,"g\n"],[1,3833,"4."],[1,3850,"## "],[-1,3850,"区别\n"],[1,3869,"## "],[-1,3869,"17"]],[3835,3835],[157,157]]],[1521026063242,["gengmei_pxf@gengmei123.local",[[1,3811,"\n"]],[3809,3809],[3810,3810]]],[1521026074196,["gengmei_pxf@gengmei123.local",[[1,3811,"![Singleton1]($res/Singleton1.png)\n\n"]],[3810,3810],[3846,3846]]],[1521026086980,[null,[[1,157," "],[-1,160," "],[-1,2775,"d的"],[1,2777,"\n\n"],[1,3097,"## 为什么handler的runnable函数是在主线程，而thread的"],[-1,3128,"9."],[1,3130,"\n\n## "],[-1,3145,"10."],[1,3148,"\n## "],[-1,3166,"\n\n## "],[1,3171,"复杂"],[-1,3175,"11.Android \n## dio的使用，例如debug\n12.手写单例，双"],[-1,3762,"，为什么要双判断\n\n13.git 命令的使用 打ta"],[1,3788,"Android studio的使用，例如debug\n"],[-1,3792,"4.性能优化\n15.webg与png的"],[1,3811,"手写单例，双层加锁，为什么要双判断\n\n"],[1,3851,"git 命令的使用 打tag\n\n## 性能优化\n15.webg与png的区别\n"],[-1,3867,"## "],[1,3870,"17"]],[157,157],[3872,3872]]],[1521026086980,[null,[[-1,157," "],[1,161," "],[1,2775,"d的"],[-1,2775,"\n\n"],[-1,3097,"## 为什么handler的runnable函数是在主线程，而thread的"],[1,3166,"9."],[-1,3166,"\n\n## "],[1,3186,"10."],[-1,3186,"\n## "],[1,3208,"\n\n## "],[-1,3208,"复杂"],[1,3214,"11.Android \n## dio的使用，例如debug\n12.手写单例，双"],[1,3762,"，为什么要双判断\n\n13.git 命令的使用 打ta"],[-1,3762,"Android studio的使用，例如debug\n"],[1,3792,"4.性能优化\n15.webg与png的"],[-1,3792,"手写单例，双层加锁，为什么要双判断\n\n"],[-1,3851,"git 命令的使用 打tag\n\n## 性能优化\n15.webg与png的区别\n"],[1,3906,"## "],[-1,3906,"17"]],[3872,3872],[157,157]]],[1521026082642,["gengmei_pxf@gengmei123.local",[[1,3847,"![Singleton2]($res/Singleton2.png)\n\n"]],[3846,3846],[3882,3882]]],[1521026086034,["gengmei_pxf@gengmei123.local",[[-1,3883,"\n"]],[3882,3882],[3881,3881]]],[1521026146982,[null,[[1,157," "],[-1,160," "],[-1,2775,"d的"],[1,2777,"\n\n"],[1,3097,"## 为什么handler的runnable函数是在主线程，而thread的"],[-1,3128,"9."],[1,3130,"\n\n## "],[-1,3145,"10."],[1,3148,"\n## "],[-1,3166,"\n\n## "],[1,3171,"复杂"],[-1,3175,"11.Android \n## dio的使用，例如debug\n12.手写单例，双"],[-1,3762,"，为什么要双判断\n\n13.git 命令的使用 打ta"],[1,3788,"Android studio的使用，例如debug\n"],[-1,3792,"4.性能优化\n15.webg与png的"],[1,3811,"手写单例，双层加锁，为什么要双判断\n\n"],[1,3886,"git 命令的使用 打tag\n\n## 性能优化\n15.webg与png的区别\n"],[-1,3902,"## "],[1,3905,"17"]],[157,157],[3907,3907]]],[1521026146982,[null,[[-1,157," "],[1,161," "],[1,2775,"d的"],[-1,2775,"\n\n"],[-1,3097,"## 为什么handler的runnable函数是在主线程，而thread的"],[1,3166,"9."],[-1,3166,"\n\n## "],[1,3186,"10."],[-1,3186,"\n## "],[1,3208,"\n\n## "],[-1,3208,"复杂"],[1,3214,"11.Android \n## dio的使用，例如debug\n12.手写单例，双"],[1,3762,"，为什么要双判断\n\n13.git 命令的使用 打ta"],[-1,3762,"Android studio的使用，例如debug\n"],[1,3792,"4.性能优化\n15.webg与png的"],[-1,3792,"手写单例，双层加锁，为什么要双判断\n\n"],[-1,3886,"git 命令的使用 打tag\n\n## 性能优化\n15.webg与png的区别\n"],[1,3941,"## "],[-1,3941,"17"]],[3907,3907],[157,157]]],[1521026113832,["gengmei_pxf@gengmei123.local",[[1,3902,"\n"]],[3900,3900],[3901,3901]]],[1521026114320,["gengmei_pxf@gengmei123.local",[[1,3903,"\n"]],[3901,3901],[3902,3902]]],[1521026206982,[null,[[1,157," "],[-1,160," "],[-1,2775,"d的"],[1,2777,"\n\n"],[1,3097,"## 为什么handler的runnable函数是在主线程，而thread的"],[-1,3128,"9."],[1,3130,"\n\n## "],[-1,3145,"10."],[1,3148,"\n## "],[-1,3166,"\n\n## "],[1,3171,"复杂"],[-1,3175,"11.Android \n## dio的使用，例如debug\n12.手写单例，双"],[-1,3762,"，为什么要双判断\n\n13.git 命令的使用 打ta"],[1,3788,"Android studio的使用，例如debug\n"],[-1,3792,"4.性能优化\n15.webg与png的"],[1,3811,"手写单例，双层加锁，为什么要双判断\n\n"],[1,3886,"git 命令的使用 打tag\n\n\n\n## 性能优化\n15.webg与png的区别\n"],[-1,3902,"\n\n## "],[1,3907,"17"]],[157,157],[3909,3909]]],[1521026206982,[null,[[-1,157," "],[1,161," "],[1,2775,"d的"],[-1,2775,"\n\n"],[-1,3097,"## 为什么handler的runnable函数是在主线程，而thread的"],[1,3166,"9."],[-1,3166,"\n\n## "],[1,3186,"10."],[-1,3186,"\n## "],[1,3208,"\n\n## "],[-1,3208,"复杂"],[1,3214,"11.Android \n## dio的使用，例如debug\n12.手写单例，双"],[1,3762,"，为什么要双判断\n\n13.git 命令的使用 打ta"],[-1,3762,"Android studio的使用，例如debug\n"],[1,3792,"4.性能优化\n15.webg与png的"],[-1,3792,"手写单例，双层加锁，为什么要双判断\n\n"],[-1,3886,"git 命令的使用 打tag\n\n\n\n## 性能优化\n15.webg与png的区别\n"],[1,3943,"\n\n## "],[-1,3943,"17"]],[3909,3909],[157,157]]],[1521026206909,["gengmei_pxf@gengmei123.local",[[1,3789,"\n"]],[3787,3787],[3788,3788]]],[1521026222215,[null,[[1,157," "],[-1,160," "],[-1,2775,"d的"],[1,2777,"\n\n"],[1,3097,"## 为什么handler的runnable函数是在主线程，而thread的"],[-1,3128,"9."],[1,3130,"\n\n## "],[-1,3145,"10."],[1,3148,"\n## "],[-1,3166,"\n\n## "],[1,3171,"复杂"],[-1,3175,"11.Android \n## dio的使用，例如debug\n12.手写单例，双"],[-1,3762,"，为什么要双判断\n\n13.git 命令的使用 打ta"],[1,3788,"Android studio的使用，例如debug\n"],[-1,3793,"4.性能优化\n15.webg与png的"],[1,3812,"手写单例，双层加锁，为什么要双判断\n\n"],[1,3887,"git 命令的使用 打tag\n\n\n\n## 性能优化\n15.webg与png的区别\n"],[-1,3903,"\n\n## "],[1,3908,"17"]],[157,157],[3910,3910]]],[1521026222215,[null,[[-1,157," "],[1,161," "],[1,2775,"d的"],[-1,2775,"\n\n"],[-1,3097,"## 为什么handler的runnable函数是在主线程，而thread的"],[1,3166,"9."],[-1,3166,"\n\n## "],[1,3186,"10."],[-1,3186,"\n## "],[1,3208,"\n\n## "],[-1,3208,"复杂"],[1,3214,"11.Android \n## dio的使用，例如debug\n12.手写单例，双"],[1,3762,"，为什么要双判断\n\n13.git 命令的使用 打ta"],[-1,3762,"Android studio的使用，例如debug\n"],[1,3793,"4.性能优化\n15.webg与png的"],[-1,3793,"手写单例，双层加锁，为什么要双判断\n\n"],[-1,3887,"git 命令的使用 打tag\n\n\n\n## 性能优化\n15.webg与png的区别\n"],[1,3944,"\n\n## "],[-1,3944,"17"]],[3910,3910],[157,157]]],[1521026208061,["gengmei_pxf@gengmei123.local",[[1,3788,"【】"]],[3788,3788],[3790,3790]]],[1521026208636,["gengmei_pxf@gengmei123.local",[[-1,3788,"【】"]],[3790,3790],[3788,3788]]],[1521026210136,["gengmei_pxf@gengmei123.local",[[1,3788,"[]()"]],[3788,3788],[3792,3792]]],[1521026211773,["gengmei_pxf@gengmei123.local",[[1,3789,"# 你所不知道的Android Studio调试技巧"]],[3789,3789],[3815,3815]]],[1521026214388,["gengmei_pxf@gengmei123.local",[[-1,3789,"# "]],[3791,3791],[3789,3789]]],[1521026221118,["gengmei_pxf@gengmei123.local",[[1,3815,"http://blog.csdn.net/hehe307/article/details/51941211"]],[3815,3815],[3868,3868]]],[1521026474319,[null,[[1,157," "],[-1,160," "],[-1,2775,"d的"],[1,2777,"\n\n"],[1,3097,"## 为什么handler的runnable函数是在主线程，而thread的"],[-1,3128,"9."],[1,3130,"\n\n## "],[-1,3145,"10."],[1,3148,"\n## "],[-1,3166,"\n\n## "],[1,3171,"复杂"],[-1,3175,"11.Android \n## dio的使用，例如debug\n12.手写单例，双"],[-1,3762,"，为什么要双判断\n\n13.git 命令的使用 打ta"],[1,3788,"Android studio的使用，例如debug\n"],[-1,3874,"4.性能优化\n15.webg与png的"],[1,3893,"手写单例，双层加锁，为什么要双判断\n\n"],[1,3968,"git 命令的使用 打tag\n\n\n\n## 性能优化\n15.webg与png的区别\n"],[-1,3984,"\n\n## "],[1,3989,"17"]],[157,157],[3991,3991]]],[1521026474319,[null,[[-1,157," "],[1,161," "],[1,2775,"d的"],[-1,2775,"\n\n"],[-1,3097,"## 为什么handler的runnable函数是在主线程，而thread的"],[1,3166,"9."],[-1,3166,"\n\n## "],[1,3186,"10."],[-1,3186,"\n## "],[1,3208,"\n\n## "],[-1,3208,"复杂"],[1,3214,"11.Android \n## dio的使用，例如debug\n12.手写单例，双"],[1,3762,"，为什么要双判断\n\n13.git 命令的使用 打ta"],[-1,3762,"Android studio的使用，例如debug\n"],[1,3874,"4.性能优化\n15.webg与png的"],[-1,3874,"手写单例，双层加锁，为什么要双判断\n\n"],[-1,3968,"git 命令的使用 打tag\n\n\n\n## 性能优化\n15.webg与png的区别\n"],[1,4025,"\n\n## "],[-1,4025,"17"]],[3991,3991],[157,157]]],[1521026468720,["gengmei_pxf@gengmei123.local",[[1,3984," \n\n# [Git-命令行-使用 Tag 标记你的代码](http://blog.csdn.net/qq_32452623/article/details/73949509)"]],[3984,3984],[4071,4071]]],[1521026470723,["gengmei_pxf@gengmei123.local",[[-1,3984," "],[1,3985," "],[-1,3987,"# "]],[3989,3989],[3987,3987]]],[1521026471131,["gengmei_pxf@gengmei123.local",[[-1,3986,"\n"]],[3987,3987],[3986,3986]]],[1521026471517,["gengmei_pxf@gengmei123.local",[[-1,3985,"\n"]],[3986,3986],[3985,3985]]],[1521026472755,["gengmei_pxf@gengmei123.local",[[-1,3984," "]],[3985,3985],[3984,3984]]],[1521026534305,[null,[[1,157," "],[-1,160," "],[-1,2775,"d的"],[1,2777,"\n\n"],[1,3097,"## 为什么handler的runnable函数是在主线程，而thread的"],[-1,3128,"9."],[1,3130,"\n\n## "],[-1,3145,"10."],[1,3148,"\n## "],[-1,3166,"\n\n## "],[1,3171,"复杂"],[-1,3175,"11.Android \n## dio的使用，例如debug\n12.手写单例，双"],[-1,3762,"，为什么要双判断\n\n13.git 命令的使用 打ta"],[1,3788,"Android studio的使用，例如debug\n"],[-1,3874,"4.性能优化\n15.webg与png的"],[1,3893,"手写单例，双层加锁，为什么要双判断\n\n"],[-1,3968,"16.程序启动，内存怎么分配的"],[1,3983,"git 命令的使用 打tag\n"],[-1,4071,""],[1,4071,"性能优化\n15.webg与png的区别\n16.程序启动，内存怎么分配的\n17"]],[157,157],[4109,4109]]],[1521026534305,[null,[[-1,157," "],[1,161," "],[1,2775,"d的"],[-1,2775,"\n\n"],[-1,3097,"## 为什么handler的runnable函数是在主线程，而thread的"],[1,3166,"9."],[-1,3166,"\n\n## "],[1,3186,"10."],[-1,3186,"\n## "],[1,3208,"\n\n## "],[-1,3208,"复杂"],[1,3214,"11.Android \n## dio的使用，例如debug\n12.手写单例，双"],[1,3762,"，为什么要双判断\n\n13.git 命令的使用 打ta"],[-1,3762,"Android studio的使用，例如debug\n"],[1,3874,"4.性能优化\n15.webg与png的"],[-1,3874,"手写单例，双层加锁，为什么要双判断\n\n"],[1,3968,"16.程序启动，内存怎么分配的"],[-1,3968,"git 命令的使用 打tag\n"],[1,4071,""],[-1,4071,"性能优化\n15.webg与png的区别\n16.程序启动，内存怎么分配的\n17"]],[4109,4109],[157,157]]],[1521026518313,["gengmei_pxf@gengmei123.local",[[-1,4076,"15."]],[4079,4079],[4076,4076]]],[1521026520235,["gengmei_pxf@gengmei123.local",[[1,4076,"## "]],[4076,4076],[4079,4079]]],[1521026522977,["gengmei_pxf@gengmei123.local",[[-1,4091,"16."]],[4094,4094],[4091,4091]]],[1521026524529,["gengmei_pxf@gengmei123.local",[[1,4091,"## "]],[4091,4091],[4094,4094]]],[1521026529323,["gengmei_pxf@gengmei123.local",[[1,4110,"、"]],[4110,4110],[4111,4111]]],[1521026531073,["gengmei_pxf@gengmei123.local",[[-1,4107,"17.、"]],[4111,4111],[4107,4107]]],[1521026532363,["gengmei_pxf@gengmei123.local",[[1,4107,"## "]],[4107,4107],[4110,4110]]],[1521026574667,[null,[[1,157," "],[-1,160," "],[-1,2775,"d的"],[1,2777,"\n\n"],[1,3097,"## 为什么handler的runnable函数是在主线程，而thread的"],[-1,3128,"9."],[1,3130,"\n\n## "],[-1,3145,"10."],[1,3148,"\n## "],[-1,3166,"\n\n## "],[1,3171,"复杂"],[-1,3175,"11.Android \n## dio的使用，例如debug\n12.手写单例，双"],[-1,3762,"，为什么要双判断\n\n13.git 命令的使用 打ta"],[1,3788,"Android studio的使用，例如debug\n"],[-1,3874,"4.性能优化\n15.webg与png的"],[1,3893,"手写单例，双层加锁，为什么要双判断\n\n"],[-1,3968,"16.程序启动，内存怎么分配的"],[1,3983,"git 命令的使用 打tag\n"],[-1,4071,"."],[1,4072,"性能优化\n## webg与png的区别\n## 程序启动，内存怎么分配的\n## "],[-1,4076,"## "],[1,4079,"的优化"],[-1,4091,"## "],[1,4094,"创建会"],[-1,4107,"## "],[1,4110,"\n19"]],[157,157],[4113,4113]]],[1521026574667,[null,[[-1,157," "],[1,161," "],[1,2775,"d的"],[-1,2775,"\n\n"],[-1,3097,"## 为什么handler的runnable函数是在主线程，而thread的"],[1,3166,"9."],[-1,3166,"\n\n## "],[1,3186,"10."],[-1,3186,"\n## "],[1,3208,"\n\n## "],[-1,3208,"复杂"],[1,3214,"11.Android \n## dio的使用，例如debug\n12.手写单例，双"],[1,3762,"，为什么要双判断\n\n13.git 命令的使用 打ta"],[-1,3762,"Android studio的使用，例如debug\n"],[1,3874,"4.性能优化\n15.webg与png的"],[-1,3874,"手写单例，双层加锁，为什么要双判断\n\n"],[1,3968,"16.程序启动，内存怎么分配的"],[-1,3968,"git 命令的使用 打tag\n"],[1,4071,"."],[-1,4071,"性能优化\n## webg与png的区别\n## 程序启动，内存怎么分配的\n## "],[1,4114,"## "],[-1,4114,"的优化"],[1,4129,"## "],[-1,4129,"创建会"],[1,4145,"## "],[-1,4145,"\n19"]],[4113,4113],[157,157]]],[1521026536463,["gengmei_pxf@gengmei123.local",[[-1,4138,"18."]],[4141,4141],[4138,4138]]],[1521026538098,["gengmei_pxf@gengmei123.local",[[1,4138,"## "]],[4138,4138],[4141,4141]]],[1521026539695,["gengmei_pxf@gengmei123.local",[[-1,4146,"19."]],[4149,4149],[4146,4146]]],[1521026540799,["gengmei_pxf@gengmei123.local",[[1,4146,"## "]],[4146,4146],[4149,4149]]],[1521026546689,["gengmei_pxf@gengmei123.local",[[-1,4157,"20.handler"]],[4157,4167],[4157,4157]]],[1521026547048,["gengmei_pxf@gengmei123.local",[[-1,4157,"\n"]],[4157,4157],[4156,4156]]],[1521026562570,["gengmei_pxf@gengmei123.local",[[-1,1946,"## Handler+Message+Looper\n[从Handler+Message+Looper源码带你分析Android系统的消息处理机制](http://blog.csdn.net/feidu804677682/article/details/46817283)\n[Android Handler机制（一）---Message源码分析](http://www.cnblogs.com/jycboy/p/5786551.html)\n"]],[1946,2165],[1946,1946]]],[1521026562872,["gengmei_pxf@gengmei123.local",[[-1,1946,"\n"]],[1946,1946],[1945,1945]]],[1521026568535,["gengmei_pxf@gengmei123.local",[[1,3937,"\n"]],[3936,3936],[3937,3937]]],[1521026569625,["gengmei_pxf@gengmei123.local",[[1,3937,"## Handler+Message+Looper\n[从Handler+Message+Looper源码带你分析Android系统的消息处理机制](http://blog.csdn.net/feidu804677682/article/details/46817283)\n[Android Handler机制（一）---Message源码分析](http://www.cnblogs.com/jycboy/p/5786551.html)\n"]],[3937,3937],[4156,4156]]],[1521026572431,["gengmei_pxf@gengmei123.local",[[-1,4156,"\n"]],[4156,4156],[4155,4155]]],[1521026598146,[null,[[1,157," "],[-1,160," "],[-1,2555,"d的"],[1,2557,"\n\n"],[1,2877,"## 为什么handler的runnable函数是在主线程，而thread的"],[-1,2908,"9."],[1,2910,"\n\n## "],[-1,2925,"10."],[1,2928,"\n## "],[-1,2946,"\n\n## "],[1,2951,"复杂"],[-1,2955,"11.Android \n## dio的使用，例如debug\n12.手写单例，双"],[-1,3542,"，为什么要双判断\n\n13.git 命令的使用 打ta"],[1,3568,"Android studio的使用，例如debug\n"],[-1,3654,"4.性能优化\n15.webg与png的"],[1,3673,"手写单例，双层加锁，为什么要双判断\n\n"],[-1,3748,"16.程序启动，内存怎么分配的"],[1,3763,"git 命令的使用 打tag\n"],[-1,3851,"."],[1,3852,"性能优化\n## webg与png的区别\n## 程序启动，内存怎么分配的\n## "],[-1,3856,"## "],[1,3859,"的优化"],[-1,3871,"## "],[1,3874,"创建会"],[-1,3880,"18."],[1,3883,"## "],[1,3887,"\n"],[-1,3890,"."],[-1,3899,"20.handler\n21.移动网络通## ，对Soc## 通信、TCP/I"],[1,4156,"21.移动网络通信机制，对Socket通信、TCP/IP和HTTP\n22.s"]],[157,157],[4194,4194]]],[1521026598146,[null,[[-1,157," "],[1,161," "],[1,2555,"d的"],[-1,2555,"\n\n"],[-1,2877,"## 为什么handler的runnable函数是在主线程，而thread的"],[1,2946,"9."],[-1,2946,"\n\n## "],[1,2966,"10."],[-1,2966,"\n## "],[1,2988,"\n\n## "],[-1,2988,"复杂"],[1,2994,"11.Android \n## dio的使用，例如debug\n12.手写单例，双"],[1,3542,"，为什么要双判断\n\n13.git 命令的使用 打ta"],[-1,3542,"Android studio的使用，例如debug\n"],[1,3654,"4.性能优化\n15.webg与png的"],[-1,3654,"手写单例，双层加锁，为什么要双判断\n\n"],[1,3748,"16.程序启动，内存怎么分配的"],[-1,3748,"git 命令的使用 打tag\n"],[1,3851,"."],[-1,3851,"性能优化\n## webg与png的区别\n## 程序启动，内存怎么分配的\n## "],[1,3894,"## "],[-1,3894,"的优化"],[1,3909,"## "],[-1,3909,"创建会"],[1,3918,"18."],[-1,3918,"## "],[-1,3925,"\n"],[1,3929,"."],[1,3937,"20.handler\n21.移动网络通## ，对Soc## 通信、TCP/I"],[-1,4156,"21.移动网络通信机制，对Socket通信、TCP/IP和HTTP\n22.s"]],[4194,4194],[157,157]]],[1521026580632,["gengmei_pxf@gengmei123.local",[[1,4156,"\n"]],[4155,4155],[4156,4156]]],[1521026584297,["gengmei_pxf@gengmei123.local",[[1,4157,"## "]],[4157,4157],[4160,4160]]],[1521026588590,["gengmei_pxf@gengmei123.local",[[1,3963,"\n"]],[3963,3963],[3964,3964]]],[1521026591109,["gengmei_pxf@gengmei123.local",[[1,4195,"\n"]],[4195,4195],[4196,4196]]],[1521026592161,["gengmei_pxf@gengmei123.local",[[1,4196,"## "]],[4196,4196],[4199,4199]]],[1521026595969,["gengmei_pxf@gengmei123.local",[[1,4230,"## "]],[4230,4230],[4233,4233]]],[1521026597046,["gengmei_pxf@gengmei123.local",[[1,4230,"\n"]],[4230,4230],[4231,4231]]],[1521026637050,[null,[[1,157," "],[-1,160," "],[-1,2555,"d的"],[1,2557,"\n\n"],[1,2877,"## 为什么handler的runnable函数是在主线程，而thread的"],[-1,2908,"9."],[1,2910,"\n\n## "],[-1,2925,"10."],[1,2928,"\n## "],[-1,2946,"\n\n## "],[1,2951,"复杂"],[-1,2955,"11.Android \n## dio的使用，例如debug\n12.手写单例，双"],[-1,3542,"，为什么要双判断\n\n13.git 命令的使用 打ta"],[1,3568,"Android studio的使用，例如debug\n"],[-1,3654,"4.性能优化\n15.webg与png的"],[1,3673,"手写单例，双层加锁，为什么要双判断\n\n"],[-1,3748,"16.程序启动，内存怎么分配的"],[1,3763,"git 命令的使用 打tag\n"],[-1,3851,"."],[1,3852,"性能优化\n## webg与png的区别\n## 程序启动，内存怎么分配的\n## "],[-1,3856,"## "],[1,3859,"的优化"],[-1,3871,"## "],[1,3874,"创建会"],[-1,3880,"18."],[1,3883,"## "],[1,3887,"\n"],[-1,3890,"."],[-1,3899,"20.handler\n21.移动网络通## ，对Soc## 通信、TCP/I"],[1,4161,"21.移动网络通信机制，对Socket通信、TCP/IP和HTTP\n\n## 22.s"],[1,4188,"\n## "],[-1,4195,"\n## "],[-1,4209,"## \n"]],[157,157],[4209,4209]]],[1521026637050,[null,[[-1,157," "],[1,161," "],[1,2555,"d的"],[-1,2555,"\n\n"],[-1,2877,"## 为什么handler的runnable函数是在主线程，而thread的"],[1,2946,"9."],[-1,2946,"\n\n## "],[1,2966,"10."],[-1,2966,"\n## "],[1,2988,"\n\n## "],[-1,2988,"复杂"],[1,2994,"11.Android \n## dio的使用，例如debug\n12.手写单例，双"],[1,3542,"，为什么要双判断\n\n13.git 命令的使用 打ta"],[-1,3542,"Android studio的使用，例如debug\n"],[1,3654,"4.性能优化\n15.webg与png的"],[-1,3654,"手写单例，双层加锁，为什么要双判断\n\n"],[1,3748,"16.程序启动，内存怎么分配的"],[-1,3748,"git 命令的使用 打tag\n"],[1,3851,"."],[-1,3851,"性能优化\n## webg与png的区别\n## 程序启动，内存怎么分配的\n## "],[1,3894,"## "],[-1,3894,"的优化"],[1,3909,"## "],[-1,3909,"创建会"],[1,3918,"18."],[-1,3918,"## "],[-1,3925,"\n"],[1,3929,"."],[1,3937,"20.handler\n21.移动网络通## ，对Soc## 通信、TCP/I"],[-1,4161,"21.移动网络通信机制，对Socket通信、TCP/IP和HTTP\n\n## 22.s"],[-1,4230,"\n## "],[1,4241,"\n## "],[1,4251,"## \n"]],[4209,4209],[157,157]]],[1521026618598,["gengmei_pxf@gengmei123.local",[[1,3848,"\n"]],[3846,3846],[3847,3847]]],[1521026619769,["gengmei_pxf@gengmei123.local",[[1,3847,"【】"]],[3847,3847],[3849,3849]]],[1521026620494,["gengmei_pxf@gengmei123.local",[[-1,3847,"【】"]],[3849,3849],[3847,3847]]],[1521026621903,["gengmei_pxf@gengmei123.local",[[1,3847,"[]()"]],[3847,3847],[3851,3851]]],[1521026624680,["gengmei_pxf@gengmei123.local",[[1,3848,"# Git 基础 - 打标签"]],[3848,3848],[3862,3862]]],[1521026627596,["gengmei_pxf@gengmei123.local",[[-1,3848,"# "]],[3850,3850],[3848,3848]]],[1521026635984,["gengmei_pxf@gengmei123.local",[[1,3862,"https://git-scm.com/book/zh/v1/Git-%E5%9F%BA%E7%A1%80-%E6%89%93%E6%A0%87%E7%AD%BE"]],[3862,3862],[3943,3943]]],[1521026790120,[null,[[1,157," "],[-1,160," "],[-1,2555,"d的"],[1,2557,"\n\n"],[1,2877,"## 为什么handler的runnable函数是在主线程，而thread的"],[-1,2908,"9."],[1,2910,"\n\n## "],[-1,2925,"10."],[1,2928,"\n## "],[-1,2946,"\n\n## "],[1,2951,"复杂"],[-1,2955,"11.Android \n## dio的使用，例如debug\n12.手写单例，双"],[-1,3542,"，为什么要双判断\n\n13.git 命令的使用 打ta"],[1,3568,"Android studio的使用，例如debug\n"],[-1,3654,"4.性能优化\n15.webg与png的"],[1,3673,"手写单例，双层加锁，为什么要双判断\n\n"],[-1,3748,"16.程序启动，内存怎么分配的"],[1,3763,"git 命令的使用 打tag\n"],[-1,3949,"."],[1,3950,"性能优化\n## webg与png的区别\n## 程序启动，内存怎么分配的\n## "],[-1,3954,"## "],[1,3957,"的优化"],[-1,3969,"## "],[1,3972,"创建会"],[-1,3978,"18."],[1,3981,"## "],[1,3985,"\n"],[-1,3988,"."],[-1,3997,"20.handler\n21.移动网络通## ，对Soc## 通信、TCP/I"],[1,4259,"21.移动网络通信机制，对Socket通信、TCP/IP和HTTP\n\n## 22.s"],[1,4286,"\n## "],[-1,4293,"\n## "],[-1,4307,"## \n"]],[157,157],[4307,4307]]],[1521026790120,[null,[[-1,157," "],[1,161," "],[1,2555,"d的"],[-1,2555,"\n\n"],[-1,2877,"## 为什么handler的runnable函数是在主线程，而thread的"],[1,2946,"9."],[-1,2946,"\n\n## "],[1,2966,"10."],[-1,2966,"\n## "],[1,2988,"\n\n## "],[-1,2988,"复杂"],[1,2994,"11.Android \n## dio的使用，例如debug\n12.手写单例，双"],[1,3542,"，为什么要双判断\n\n13.git 命令的使用 打ta"],[-1,3542,"Android studio的使用，例如debug\n"],[1,3654,"4.性能优化\n15.webg与png的"],[-1,3654,"手写单例，双层加锁，为什么要双判断\n\n"],[1,3748,"16.程序启动，内存怎么分配的"],[-1,3748,"git 命令的使用 打tag\n"],[1,3949,"."],[-1,3949,"性能优化\n## webg与png的区别\n## 程序启动，内存怎么分配的\n## "],[1,3992,"## "],[-1,3992,"的优化"],[1,4007,"## "],[-1,4007,"创建会"],[1,4016,"18."],[-1,4016,"## "],[-1,4023,"\n"],[1,4027,"."],[1,4035,"20.handler\n21.移动网络通## ，对Soc## 通信、TCP/I"],[-1,4259,"21.移动网络通信机制，对Socket通信、TCP/IP和HTTP\n\n## 22.s"],[-1,4328,"\n## "],[1,4339,"\n## "],[1,4349,"## \n"]],[4307,4307],[157,157]]],[1521026771121,["gengmei_pxf@gengmei123.local",[[1,4294,"\n"]],[4292,4292],[4293,4293]]],[1521026772131,["gengmei_pxf@gengmei123.local",[[1,4293,"[]"]],[4293,4293],[4295,4295]]],[1521026773996,["gengmei_pxf@gengmei123.local",[[1,4294,"# Android之从TCP/IP、HTTP看Socket通信"]],[4294,4294],[4325,4325]]],[1521026777578,["gengmei_pxf@gengmei123.local",[[-1,4293,"[# "]],[4296,4296],[4293,4293]]],[1521026778631,["gengmei_pxf@gengmei123.local",[[1,4293,"["]],[4293,4293],[4294,4294]]],[1521026780539,["gengmei_pxf@gengmei123.local",[[1,4324,"()"]],[4324,4324],[4326,4326]]],[1521026788712,["gengmei_pxf@gengmei123.local",[[1,4325,"http://blog.csdn.net/qq_28042233/article/details/59520214"]],[4325,4325],[4382,4382]]],[1521027990106,[null,[[1,157," "],[-1,160," "],[-1,2555,"d的"],[1,2557,"\n\n"],[1,2877,"## 为什么handler的runnable函数是在主线程，而thread的"],[-1,2908,"9."],[1,2910,"\n\n## "],[-1,2925,"10."],[1,2928,"\n## "],[-1,2946,"\n\n## "],[1,2951,"复杂"],[-1,2955,"11.Android \n## dio的使用，例如debug\n12.手写单例，双"],[-1,3542,"，为什么要双判断\n\n13.git 命令的使用 打ta"],[1,3568,"Android studio的使用，例如debug\n"],[-1,3654,"4.性能优化\n15.webg与png的"],[1,3673,"手写单例，双层加锁，为什么要双判断\n\n"],[-1,3748,"16.程序启动，内存怎么分配的"],[1,3763,"git 命令的使用 打tag\n"],[-1,3949,"."],[1,3950,"性能优化\n## webg与png的区别\n## 程序启动，内存怎么分配的\n## "],[-1,3954,"## "],[1,3957,"的优化"],[-1,3969,"## "],[1,3972,"创建会"],[-1,3978,"18."],[1,3981,"## "],[1,3985,"\n"],[-1,3988,"."],[-1,3997,"20.handler\n21.移动网络通## ，对Soc## 通信、TCP/I"],[-1,4259,"qlite的使用 怎么升级，sqlite不能删除字段\n23.查看大图"],[1,4293,"21.移动网络通信机制，对Socket通信、TCP/IP和HTTP\n"],[1,4388,"22.sqlite的使用 怎么升级，sqlite不能删除字段\n\n## 23.查看大图"],[-1,4398,"## \n"]],[157,157],[4398,4398]]],[1521027990106,[null,[[-1,157," "],[1,161," "],[1,2555,"d的"],[-1,2555,"\n\n"],[-1,2877,"## 为什么handler的runnable函数是在主线程，而thread的"],[1,2946,"9."],[-1,2946,"\n\n## "],[1,2966,"10."],[-1,2966,"\n## "],[1,2988,"\n\n## "],[-1,2988,"复杂"],[1,2994,"11.Android \n## dio的使用，例如debug\n12.手写单例，双"],[1,3542,"，为什么要双判断\n\n13.git 命令的使用 打ta"],[-1,3542,"Android studio的使用，例如debug\n"],[1,3654,"4.性能优化\n15.webg与png的"],[-1,3654,"手写单例，双层加锁，为什么要双判断\n\n"],[1,3748,"16.程序启动，内存怎么分配的"],[-1,3748,"git 命令的使用 打tag\n"],[1,3949,"."],[-1,3949,"性能优化\n## webg与png的区别\n## 程序启动，内存怎么分配的\n## "],[1,3992,"## "],[-1,3992,"的优化"],[1,4007,"## "],[-1,4007,"创建会"],[1,4016,"18."],[-1,4016,"## "],[-1,4023,"\n"],[1,4027,"."],[1,4035,"20.handler\n21.移动网络通## ，对Soc## 通信、TCP/I"],[1,4259,"qlite的使用 怎么升级，sqlite不能删除字段\n23.查看大图"],[-1,4259,"21.移动网络通信机制，对Socket通信、TCP/IP和HTTP\n"],[-1,4388,"22.sqlite的使用 怎么升级，sqlite不能删除字段\n\n## 23.查看大图"],[1,4440,"## \n"]],[4398,4398],[157,157]]],[1521027938413,["gengmei_pxf@gengmei123.local",[[1,4420,"\n"]],[4418,4418],[4419,4419]]],[1521027939288,["gengmei_pxf@gengmei123.local",[[1,4419,"ALTER  TABLE   table-name  ADD COLUMN  column-name column-type \n例如在student表中添加一列名为name，类型为varchar:\nalter table student add column name varchar;\n\nalter table student drop column name // 该行在SQlite中不能用，SQlite不支持drop"]],[4419,4419],[4631,4631]]],[1521027942532,["gengmei_pxf@gengmei123.local",[[1,4633,"\n"]],[4631,4631],[4632,4632]]],[1521027942980,["gengmei_pxf@gengmei123.local",[[1,4634,"\n"]],[4632,4632],[4633,4633]]],[1521027966456,["gengmei_pxf@gengmei123.local",[[1,4633,"sqlite中是不支持删除列操作的，所以网上alter table table_name drop column col_name这个语句在sqlite中是无效的，而替代的方法可以如下：\n\n1.根据原表创建一张新表\n\n2.删除原表\n\n3.将新表重名为旧表的名称\n\n示例例子如下\n\n1.创建一张旧表Student，包含id（主码），name, tel\n\ncreate table student (\n\nid integer primary key,\n\nname text,\n\ntel text\n\n)\n\n2.给旧表插入两个值\n\ninsert into student(id,name,tel) values(101,\"Jack\",\"110\")\n\ninsert into student(id,name,tel) values(102,\"Rose\",\"119\")\n\n结果如图\n\n[![clip_image002](http://hi.csdn.net/attachment/201106/23/0_13088131818G0A.gif \"clip_image002\")](http://hi.csdn.net/attachment/201106/23/0_1308813180xXxX.gif)\n\n3.接下来我们删除电话这个列，首先根据student表创建一张新表teacher\n\ncreate table teacher as select id,name from student\n\n结果如图\n\n[![clip_image004](http://hi.csdn.net/attachment/201106/23/0_1308813181JQ7J.gif \"clip_image004\")](http://hi.csdn.net/attachment/201106/23/0_130881318134dJ.gif)\n\n可以看到tel这一列已经没有了\n\n4.然后我们删除student这个表\n\ndrop table if exists student\n\n5.将teacher这个表重命名为student\n\nalter table teacher rename to student\n\n结果演示：\n\nselect * from student order by name desc（desc降序， asc升序）\n\n[![clip_image006](http://hi.csdn.net/attachment/201106/23/0_1308813185riDE.gif \"clip_image006\")](http://hi.csdn.net/attachment/201106/23/0_1308813184vjKt.gif)\n\n这样就可以得到我们想要的结果了。\n\n另外：给自己一个提示，在android sqlite中的查询语句如果是text类型的别忘了给他加上””来指明是String类型的，例如：\n\nCursor c = mSQLiteDatabase.query(_TABLE_NAME_, **null**, _NAME_ + \"=\" + \"/\"\" + name + \"/\"\", **null**, **null**,**null**, **null**);"]],[4633,4633],[6015,6015]]],[1521028014426,[null,[[1,157," "],[-1,160," "],[-1,2555,"d的"],[1,2557,"\n\n"],[1,2877,"## 为什么handler的runnable函数是在主线程，而thread的"],[-1,2908,"9."],[1,2910,"\n\n## "],[-1,2925,"10."],[1,2928,"\n## "],[-1,2946,"\n\n## "],[1,2951,"复杂"],[-1,2955,"11.Android \n## dio的使用，例如debug\n12.手写单例，双"],[-1,3542,"，为什么要双判断\n\n13.git 命令的使用 打ta"],[1,3568,"Android studio的使用，例如debug\n"],[-1,3654,"4.性能优化\n15.webg与png的"],[1,3673,"手写单例，双层加锁，为什么要双判断\n\n"],[-1,3748,"16.程序启动，内存怎么分配的"],[1,3763,"git 命令的使用 打tag\n"],[-1,3949,"."],[1,3950,"性能优化\n## webg与png的区别\n## 程序启动，内存怎么分配的\n## "],[-1,3954,"## "],[1,3957,"的优化"],[-1,3969,"## "],[1,3972,"创建会"],[-1,3978,"18."],[1,3981,"## "],[1,3985,"\n"],[-1,3988,"."],[-1,3997,"20.handler\n21.移动网络通## ，对Soc## 通信、TCP/I"],[-1,4259,"qlite的使用 怎么升级，sqlite不能删除字段\n23.查看大图"],[1,4293,"21.移动网络通信机制，对Socket通信、TCP/IP和HTTP\n"],[-1,4388,"功能设计注意的点\n\n## \n"],[1,4402,"22.sqlite的使用 怎么升级，sqlite不能删除字段"],[-1,5999,""],[1,5999,"\n\n## 23.查看大图功能设计注意的点\n\n"]],[157,157],[6021,6021]]],[1521028014426,[null,[[-1,157," "],[1,161," "],[1,2555,"d的"],[-1,2555,"\n\n"],[-1,2877,"## 为什么handler的runnable函数是在主线程，而thread的"],[1,2946,"9."],[-1,2946,"\n\n## "],[1,2966,"10."],[-1,2966,"\n## "],[1,2988,"\n\n## "],[-1,2988,"复杂"],[1,2994,"11.Android \n## dio的使用，例如debug\n12.手写单例，双"],[1,3542,"，为什么要双判断\n\n13.git 命令的使用 打ta"],[-1,3542,"Android studio的使用，例如debug\n"],[1,3654,"4.性能优化\n15.webg与png的"],[-1,3654,"手写单例，双层加锁，为什么要双判断\n\n"],[1,3748,"16.程序启动，内存怎么分配的"],[-1,3748,"git 命令的使用 打tag\n"],[1,3949,"."],[-1,3949,"性能优化\n## webg与png的区别\n## 程序启动，内存怎么分配的\n## "],[1,3992,"## "],[-1,3992,"的优化"],[1,4007,"## "],[-1,4007,"创建会"],[1,4016,"18."],[-1,4016,"## "],[-1,4023,"\n"],[1,4027,"."],[1,4035,"20.handler\n21.移动网络通## ，对Soc## 通信、TCP/I"],[1,4259,"qlite的使用 怎么升级，sqlite不能删除字段\n23.查看大图"],[-1,4259,"21.移动网络通信机制，对Socket通信、TCP/IP和HTTP\n"],[1,4388,"功能设计注意的点\n\n## \n"],[-1,4388,"22.sqlite的使用 怎么升级，sqlite不能删除字段"],[1,6015,""],[-1,6015,"\n\n## 23.查看大图功能设计注意的点\n\n"]],[6021,6021],[157,157]]],[1521027993931,["gengmei_pxf@gengmei123.local",[[1,4419,"\n"],[-1,5930," "],[1,5931," "],[-1,5940," "],[1,5941," "],[-1,5947," "],[1,5948," "],[-1,5975," "],[1,5976," "],[-1,5985," "],[1,5986," "],[-1,6004," "],[1,6005," "]],[4418,4418],[4419,4419]]],[1521027995762,["gengmei_pxf@gengmei123.local",[[1,4420,"\n"]],[4419,4419],[4420,4420]]],[1521027996077,["gengmei_pxf@gengmei123.local",[[1,4420,"# android之存储篇_SQLite数据库_让你彻底学会SQLite的使用"]],[4420,4420],[4459,4459]]],[1521027997362,["gengmei_pxf@gengmei123.local",[[-1,4420,"# android之存储篇_SQLite数据库_让你彻底学会SQLite的使用"]],[4459,4459],[4420,4420]]],[1521027998470,["gengmei_pxf@gengmei123.local",[[1,4420,"【】"]],[4420,4420],[4422,4422]]],[1521027999155,["gengmei_pxf@gengmei123.local",[[-1,4420,"【】"]],[4422,4422],[4420,4420]]],[1521027999860,["gengmei_pxf@gengmei123.local",[[1,4420,"[]"]],[4420,4420],[4422,4422]]],[1521028001109,["gengmei_pxf@gengmei123.local",[[1,4421,"# android之存储篇_SQLite数据库_让你彻底学会SQLite的使用"]],[4421,4421],[4460,4460]]],[1521028002788,["gengmei_pxf@gengmei123.local",[[-1,4421,"# "]],[4423,4423],[4421,4421]]],[1521028004917,["gengmei_pxf@gengmei123.local",[[1,4459,"()"]],[4459,4459],[4461,4461]]],[1521028011933,["gengmei_pxf@gengmei123.local",[[1,4460,"http://blog.csdn.net/qq_35114086/article/details/52825048"]],[4460,4460],[4517,4517]]],[1521028013762,["gengmei_pxf@gengmei123.local",[[1,4519,"\n"]],[4518,4518],[4519,4519]]],[1521028030059,[null,[[1,157," "],[-1,160," "],[-1,2555,"d的"],[1,2557,"\n\n"],[1,2877,"## 为什么handler的runnable函数是在主线程，而thread的"],[-1,2908,"9."],[1,2910,"\n\n## "],[-1,2925,"10."],[1,2928,"\n## "],[-1,2946,"\n\n## "],[1,2951,"复杂"],[-1,2955,"11.Android \n## dio的使用，例如debug\n12.手写单例，双"],[-1,3542,"，为什么要双判断\n\n13.git 命令的使用 打ta"],[1,3568,"Android studio的使用，例如debug\n"],[-1,3654,"4.性能优化\n15.webg与png的"],[1,3673,"手写单例，双层加锁，为什么要双判断\n\n"],[-1,3748,"16.程序启动，内存怎么分配的"],[1,3763,"git 命令的使用 打tag\n"],[-1,3949,"."],[1,3950,"性能优化\n## webg与png的区别\n## 程序启动，内存怎么分配的\n## "],[-1,3954,"## "],[1,3957,"的优化"],[-1,3969,"## "],[1,3972,"创建会"],[-1,3978,"18."],[1,3981,"## "],[1,3985,"\n"],[-1,3988,"."],[-1,3997,"20.handler\n21.移动网络通## ，对Soc## 通信、TCP/I"],[-1,4259,"qlite的使用 怎么升级，sqlite不能删除字段\n23.查看大图"],[1,4293,"21.移动网络通信机制，对Socket通信、TCP/IP和HTTP\n"],[-1,4388,"功能设计注意的点\n\n## \n\nALTER  TABLE   t"],[1,4419,"22.sqlite的使用 怎么升级，sqlite不能删除字段\n"],[-1,4520,""],[1,4520,"ALTER  TABLE   t"],[-1,6015," "],[1,6016," "],[-1,6025," "],[1,6026," "],[1,6031,"_"],[-1,6032," "],[-1,6041," "],[1,6042,"\""],[-1,6048," "],[1,6049,"n"],[-1,6060," "],[1,6061," "],[-1,6070," "],[1,6071," "],[-1,6076," "],[1,6077,"l"],[-1,6086," *, "],[1,6090,"**, "],[1,6100,"\n\n##"],[1,6101,"23.查看大图功能设计注意的点\n\n"]],[157,157],[6118,6118]]],[1521028030059,[null,[[-1,157," "],[1,161," "],[1,2555,"d的"],[-1,2555,"\n\n"],[-1,2877,"## 为什么handler的runnable函数是在主线程，而thread的"],[1,2946,"9."],[-1,2946,"\n\n## "],[1,2966,"10."],[-1,2966,"\n## "],[1,2988,"\n\n## "],[-1,2988,"复杂"],[1,2994,"11.Android \n## dio的使用，例如debug\n12.手写单例，双"],[1,3542,"，为什么要双判断\n\n13.git 命令的使用 打ta"],[-1,3542,"Android studio的使用，例如debug\n"],[1,3654,"4.性能优化\n15.webg与png的"],[-1,3654,"手写单例，双层加锁，为什么要双判断\n\n"],[1,3748,"16.程序启动，内存怎么分配的"],[-1,3748,"git 命令的使用 打tag\n"],[1,3949,"."],[-1,3949,"性能优化\n## webg与png的区别\n## 程序启动，内存怎么分配的\n## "],[1,3992,"## "],[-1,3992,"的优化"],[1,4007,"## "],[-1,4007,"创建会"],[1,4016,"18."],[-1,4016,"## "],[-1,4023,"\n"],[1,4027,"."],[1,4035,"20.handler\n21.移动网络通## ，对Soc## 通信、TCP/I"],[1,4259,"qlite的使用 怎么升级，sqlite不能删除字段\n23.查看大图"],[-1,4259,"21.移动网络通信机制，对Socket通信、TCP/IP和HTTP\n"],[1,4388,"功能设计注意的点\n\n## \n\nALTER  TABLE   t"],[-1,4388,"22.sqlite的使用 怎么升级，sqlite不能删除字段\n"],[1,4520,""],[-1,4520,"ALTER  TABLE   t"],[1,6031," "],[-1,6031," "],[1,6041," "],[-1,6041," "],[-1,6047,"_"],[1,6049," "],[1,6057," "],[-1,6057,"\""],[1,6064," "],[-1,6064,"n"],[1,6076," "],[-1,6076," "],[1,6086," "],[-1,6086," "],[1,6092," "],[-1,6092,"l"],[1,6102," *, "],[-1,6102,"**, "],[-1,6116,"\n\n##"],[-1,6121,"23.查看大图功能设计注意的点\n\n"]],[6118,6118],[157,157]]],[1521028028249,["gengmei_pxf@gengmei123.local",[[1,6138,"\n"]],[6136,6136],[6137,6137]]],[1521028029394,["gengmei_pxf@gengmei123.local",[[1,6139,"\n"]],[6137,6137],[6138,6138]]],[1521028090058,[null,[[1,157," "],[-1,160," "],[-1,2555,"d的"],[1,2557,"\n\n"],[1,2877,"## 为什么handler的runnable函数是在主线程，而thread的"],[-1,2908,"9."],[1,2910,"\n\n## "],[-1,2925,"10."],[1,2928,"\n## "],[-1,2946,"\n\n## "],[1,2951,"复杂"],[-1,2955,"11.Android \n## dio的使用，例如debug\n12.手写单例，双"],[-1,3542,"，为什么要双判断\n\n13.git 命令的使用 打ta"],[1,3568,"Android studio的使用，例如debug\n"],[-1,3654,"4.性能优化\n15.webg与png的"],[1,3673,"手写单例，双层加锁，为什么要双判断\n\n"],[-1,3748,"16.程序启动，内存怎么分配的"],[1,3763,"git 命令的使用 打tag\n"],[-1,3949,"."],[1,3950,"性能优化\n## webg与png的区别\n## 程序启动，内存怎么分配的\n## "],[-1,3954,"## "],[1,3957,"的优化"],[-1,3969,"## "],[1,3972,"创建会"],[-1,3978,"18."],[1,3981,"## "],[1,3985,"\n"],[-1,3988,"."],[-1,3997,"20.handler\n21.移动网络通## ，对Soc## 通信、TCP/I"],[-1,4259,"qlite的使用 怎么升级，sqlite不能删除字段\n23.查看大图"],[1,4293,"21.移动网络通信机制，对Socket通信、TCP/IP和HTTP\n"],[-1,4388,"功能设计注意的点\n\n## \n\nALTER  TABLE   t"],[1,4419,"22.sqlite的使用 怎么升级，sqlite不能删除字段\n"],[-1,4520,""],[1,4520,"ALTER  TABLE   t"],[-1,6015," "],[1,6016," "],[-1,6025," "],[1,6026," "],[1,6031,"_"],[-1,6032," "],[-1,6041," "],[1,6042,"\""],[-1,6048," "],[1,6049,"n"],[-1,6060," "],[1,6061," "],[-1,6070," "],[1,6071," "],[-1,6076," "],[1,6077,"l"],[-1,6086," *, "],[1,6090,"**, "],[1,6100,"\n\n##"],[1,6101,"23.查看大图功能设计注意的点\n\n"]],[157,157],[6118,6118]]],[1521028090058,[null,[[-1,157," "],[1,161," "],[1,2555,"d的"],[-1,2555,"\n\n"],[-1,2877,"## 为什么handler的runnable函数是在主线程，而thread的"],[1,2946,"9."],[-1,2946,"\n\n## "],[1,2966,"10."],[-1,2966,"\n## "],[1,2988,"\n\n## "],[-1,2988,"复杂"],[1,2994,"11.Android \n## dio的使用，例如debug\n12.手写单例，双"],[1,3542,"，为什么要双判断\n\n13.git 命令的使用 打ta"],[-1,3542,"Android studio的使用，例如debug\n"],[1,3654,"4.性能优化\n15.webg与png的"],[-1,3654,"手写单例，双层加锁，为什么要双判断\n\n"],[1,3748,"16.程序启动，内存怎么分配的"],[-1,3748,"git 命令的使用 打tag\n"],[1,3949,"."],[-1,3949,"性能优化\n## webg与png的区别\n## 程序启动，内存怎么分配的\n## "],[1,3992,"## "],[-1,3992,"的优化"],[1,4007,"## "],[-1,4007,"创建会"],[1,4016,"18."],[-1,4016,"## "],[-1,4023,"\n"],[1,4027,"."],[1,4035,"20.handler\n21.移动网络通## ，对Soc## 通信、TCP/I"],[1,4259,"qlite的使用 怎么升级，sqlite不能删除字段\n23.查看大图"],[-1,4259,"21.移动网络通信机制，对Socket通信、TCP/IP和HTTP\n"],[1,4388,"功能设计注意的点\n\n## \n\nALTER  TABLE   t"],[-1,4388,"22.sqlite的使用 怎么升级，sqlite不能删除字段\n"],[1,4520,""],[-1,4520,"ALTER  TABLE   t"],[1,6031," "],[-1,6031," "],[1,6041," "],[-1,6041," "],[-1,6047,"_"],[1,6049," "],[1,6057," "],[-1,6057,"\""],[1,6064," "],[-1,6064,"n"],[1,6076," "],[-1,6076," "],[1,6086," "],[-1,6086," "],[1,6092," "],[-1,6092,"l"],[1,6102," *, "],[-1,6102,"**, "],[-1,6116,"\n\n##"],[-1,6121,"23.查看大图功能设计注意的点\n\n"]],[6118,6118],[157,157]]],[1521028032374,["gengmei_pxf@gengmei123.local",[[1,6138,"* "]],[6138,6138],[6140,6140]]],[1521028209330,[null,[[1,157," "],[-1,160," "],[-1,2555,"d的"],[1,2557,"\n\n"],[1,2877,"## 为什么handler的runnable函数是在主线程，而thread的"],[-1,2908,"9."],[1,2910,"\n\n## "],[-1,2925,"10."],[1,2928,"\n## "],[-1,2946,"\n\n## "],[1,2951,"复杂"],[-1,2955,"11.Android \n## dio的使用，例如debug\n12.手写单例，双"],[-1,3542,"，为什么要双判断\n\n13.git 命令的使用 打ta"],[1,3568,"Android studio的使用，例如debug\n"],[-1,3654,"4.性能优化\n15.webg与png的"],[1,3673,"手写单例，双层加锁，为什么要双判断\n\n"],[-1,3748,"16.程序启动，内存怎么分配的"],[1,3763,"git 命令的使用 打tag\n"],[-1,3949,"."],[1,3950,"性能优化\n## webg与png的区别\n## 程序启动，内存怎么分配的\n## "],[-1,3954,"## "],[1,3957,"的优化"],[-1,3969,"## "],[1,3972,"创建会"],[-1,3978,"18."],[1,3981,"## "],[1,3985,"\n"],[-1,3988,"."],[-1,3997,"20.handler\n21.移动网络通## ，对Soc## 通信、TCP/I"],[-1,4259,"qlite的使用 怎么升级，sqlite不能删除字段\n23.查看大图"],[1,4293,"21.移动网络通信机制，对Socket通信、TCP/IP和HTTP\n"],[-1,4388,"功能设计注意的点\n\n## \n\nALTER  TABLE   t"],[1,4419,"22.sqlite的使用 怎么升级，sqlite不能删除字段\n"],[-1,4520,""],[1,4520,"ALTER  TABLE   t"],[-1,6015," "],[1,6016," "],[-1,6025," "],[1,6026," "],[1,6031,"_"],[-1,6032," "],[-1,6041," "],[1,6042,"\""],[-1,6048," "],[1,6049,"n"],[-1,6060," "],[1,6061," "],[-1,6070," "],[1,6071," "],[-1,6076," "],[1,6077,"l"],[-1,6086," *, "],[1,6090,"**, "],[1,6100,"\n\n##"],[1,6101,"23.查看大图功能设计注意的点"],[1,6105,"\n\n"]],[157,157],[6107,6107]]],[1521028209330,[null,[[-1,157," "],[1,161," "],[1,2555,"d的"],[-1,2555,"\n\n"],[-1,2877,"## 为什么handler的runnable函数是在主线程，而thread的"],[1,2946,"9."],[-1,2946,"\n\n## "],[1,2966,"10."],[-1,2966,"\n## "],[1,2988,"\n\n## "],[-1,2988,"复杂"],[1,2994,"11.Android \n## dio的使用，例如debug\n12.手写单例，双"],[1,3542,"，为什么要双判断\n\n13.git 命令的使用 打ta"],[-1,3542,"Android studio的使用，例如debug\n"],[1,3654,"4.性能优化\n15.webg与png的"],[-1,3654,"手写单例，双层加锁，为什么要双判断\n\n"],[1,3748,"16.程序启动，内存怎么分配的"],[-1,3748,"git 命令的使用 打tag\n"],[1,3949,"."],[-1,3949,"性能优化\n## webg与png的区别\n## 程序启动，内存怎么分配的\n## "],[1,3992,"## "],[-1,3992,"的优化"],[1,4007,"## "],[-1,4007,"创建会"],[1,4016,"18."],[-1,4016,"## "],[-1,4023,"\n"],[1,4027,"."],[1,4035,"20.handler\n21.移动网络通## ，对Soc## 通信、TCP/I"],[1,4259,"qlite的使用 怎么升级，sqlite不能删除字段\n23.查看大图"],[-1,4259,"21.移动网络通信机制，对Socket通信、TCP/IP和HTTP\n"],[1,4388,"功能设计注意的点\n\n## \n\nALTER  TABLE   t"],[-1,4388,"22.sqlite的使用 怎么升级，sqlite不能删除字段\n"],[1,4520,""],[-1,4520,"ALTER  TABLE   t"],[1,6031," "],[-1,6031," "],[1,6041," "],[-1,6041," "],[-1,6047,"_"],[1,6049," "],[1,6057," "],[-1,6057,"\""],[1,6064," "],[-1,6064,"n"],[1,6076," "],[-1,6076," "],[1,6086," "],[-1,6086," "],[1,6092," "],[-1,6092,"l"],[1,6102," *, "],[-1,6102,"**, "],[-1,6116,"\n\n##"],[-1,6121,"23.查看大图功能设计注意的点"],[-1,6140,"\n\n"]],[6107,6107],[157,157]]],[1521028181790,["gengmei_pxf@gengmei123.local",[[1,6140,"tu"]],[6140,6140],[6142,6142]]],[1521028182717,["gengmei_pxf@gengmei123.local",[[-1,6140,"tu"]],[6142,6142],[6140,6140]]],[1521028194638,["gengmei_pxf@gengmei123.local",[[1,6140,"图片展示优化 缓存"]],[6140,6140],[6149,6149]]],[1521028199300,["gengmei_pxf@gengmei123.local",[[1,6151,"\n"]],[6149,6149],[6150,6150]]],[1521028206595,["gengmei_pxf@gengmei123.local",[[1,6150,"* 缩略图，大图"]],[6150,6150],[6158,6158]]]]],["64c93e49-73a7-407a-aa23-ff34366c2e6b",1521112929559,"面试题总结2\n===\n## Java基础\nbyte,shrot,int字节数，范围什么的\n\n## 设计模式\n* Activity继承BaseActivity的设计模式是模板方法\n* 事件分发是责任链模式\n\n## Android加载布局流程\n提问的是Activity中setContentView的父布局\n\n###  流程： \n\n* Activity setContentView—>Window setContentView—>PhoneWindow setContentView—->PhoneWindow installDecor—–>PhoneWindow generateLayout——>PhoneWindow mLayoutInflater.inflate(layoutResID, mContentParent);\n\n* Activity 类中有一个Window抽象类的实现PhoneWindow类，该类中有个内部类DecorView，继承自FrameLayout，在DecorView容器中添加了根布局，根布局中包含了一个id为 contnet的FrameLayout 内容布局，我们的Activity加载的布局xml最后添加到 id为content的FrameLayout布局当中了。用一个图来描述，如下：\n\n![这里写图片描述](http://img.blog.csdn.net/20150702153425952)\n\n### 总结：\n\n* 1.关于requestWindowFeature(Window.FEATURE_NO_TITLE); 去除标题栏的疑问，如果你自己的xxxActivity是继承自Activity，那么恭喜你使用以上方法可以去除标题栏，如果你自己的xxxActivity是继承自AppCompatActivity或者ActionBarActivity，那么很遗憾告诉你，此次系统默认的标题栏已经在主题中去除，此时显示的标题栏是ActionBar导航栏，如果需要去除导航栏，你可以通过如下代码：getSupportActionBar().hide();来隐藏导航栏。\n\n* 2.requestWindowFeature(Window.FEATURE_NO_TITLE);方法需要在 setContentView方法之前使用，由上面 Step5分析可得，设置Activity Window 特征是在setContentView方法中设置的，因此，如果需要改变Activity Window窗口特征，需要在setContentView方法之前。其实这里有疑问？？？为什么设置全屏的方法\n\n```\ngetWindow().setFlags(WindowManager.LayoutParams.FLAG_FULLSCREEN, WindowManager.LayoutParams.FLAG_FULLSCREEN);\n```\n\n可以在setContentView之后呢？？？求解。\n\n[从setContentView方法分析Android加载布局流程](http://blog.csdn.net/feidu804677682/article/details/46711921)\n\n## Dialog加载绘制\n\n* AlertDialog和Activity一样，内部有一个Window，我们构造AlertDialog.Builder，通过Builder设置Dialog各种属性，,这些参数会被放在一个名为P（AlertController类型）的变量中，\n\n* 在调用AlertDialog.Builder.create方法的时候，内部首先会new一个 AlertDialog，AlertDialog的父类Dialog的构造函数中会new一个PhoneWindow赋值给AlertDialog中的Window，并且为它设置了回调。\n\n* AlertDialog创建之后执行apply方法，将P中的参数设置赋值给Dialog,后我们调用Dialog.show方法展示窗口，内部调用dispatchOnCreate，最终会走到setContentView，到此Dialog的Window和Dialog视图关联到了一起，\n\n* 最后执行mWindowManager.addView方法，通过WindowManager将DecorView添加到Window之中,此时Dialog显示在了我们面前。\n\n[Android源码解析Window系列第（二）篇---Dialog加载绘制流程](https://www.jianshu.com/p/f9303d30eb2b)\n\n## Context的应用场景\n提问的是Service能不能创建dialog\n\n![](http://img.blog.csdn.net/20150104183450879)\n\n## 自定义View\n\n### 构造函数方法参数\n\n构造函数参数最多有四个。简单总结下：\n\n*   Context - View中随处都会用到。\n\n*   AttributeSet - XML属性（当从XML inflate的时候）。\n\n*   int defStyleAttr - 应用到View的默认风格（定义在主题中）。\n\n*   int defStyleResource - 如果没有使用defStyleAttr，应用到View的默认风格\n\n除了Context，其它的参数只是用来通过XML属性配置View的初始状态（从布局，style以及theme中）。\n\n* [深入理解View的构造函数](https://link.jianshu.com/?t=http://www.jcodecraeer.com/a/anzhuokaifa/androidkaifa/2016/0806/4575.html)\n\n* [理解View的构造函数](https://link.jianshu.com/?t=http://www.cnblogs.com/angeldevil/p/3479431.html#three)\n\n### 自定义View基础\n\n* [（1）自定义View基础 - 最易懂的自定义View原理系列](https://www.jianshu.com/p/146e5cec4863)\n* [（2）自定义View Measure过程 - 最易懂的自定义View原理系列](https://www.jianshu.com/p/1dab927b2f36)\n* [（3）自定义View Layout过程 - 最易懂的自定义View原理系列](https://www.jianshu.com/p/158736a2549d)\n* [（4）自定义View Draw过程- 最易懂的自定义View原理系列](https://www.jianshu.com/p/95afeb7c8335)\n\n## 为什么handler的runnable函数是在主线程，而thread的runnable的是在子线程，handler创建的2种方法\n\n\n\n## 多进程需要注意和解决的问题\n\n\n## RecyclerView怎么实现一些复杂的效果\n\n我们知道recyclerview实现GridView效果只需配置一下参数就行了\n\n\n![GridLayoutManager1]($res/GridLayoutManager1.png)\n\n\n可以看到GridLayoutManager需要传递两个参数，一个是上下文对象，另一个是一行显示几列的参数常量，既然这个常量可以指定那么是不是这个值可以去控制呐，答案当然是yes\n\n我们会注意到GridLayoutManager里边有个setSpanSizeLookup方法,本篇的重点就是这个方法（这个方法具体意义大家可以网上搜索，会有很多相关介绍，以及通过它实现一些复杂的布局，再次不做过多讨论）\n\n\n![GridLayoutManager2]($res/GridLayoutManager2.png)\n\n其实getSpanSize返回值就是控制每行有几列的，根据这个思路我们不妨试试。因为recyclerview填充数据是根据adapter实现的，我们就把给adapter的数据源同样在setSpanSizeLookup这个方法里边判断一下不就行了吗？\n根据这个思路于是有了下面的代码\n\n\n![GridLayoutManager3]($res/GridLayoutManager3.png)\n\n## Android studio的使用，例如debug\n[你所不知道的Android Studio调试技巧](http://blog.csdn.net/hehe307/article/details/51941211)\n\n## 手写单例，双层加锁，为什么要双判断\n\n![Singleton1]($res/Singleton1.png)\n\n![Singleton2]($res/Singleton2.png)\n\n## git 命令的使用 打tag\n\n[Git-命令行-使用 Tag 标记你的代码](http://blog.csdn.net/qq_32452623/article/details/73949509)\n[Git 基础 - 打标签](https://git-scm.com/book/zh/v1/Git-%E5%9F%BA%E7%A1%80-%E6%89%93%E6%A0%87%E7%AD%BE)\n\n## 性能优化\n## webg与png的区别\n## 程序启动，内存怎么分配的\n## 具体代码的优化，对象不要多创建，因为多创建会导致多引用\n## 事件分发\n## 自定义View\n## Handler+Message+Looper\n\n[从Handler+Message+Looper源码带你分析Android系统的消息处理机制](http://blog.csdn.net/feidu804677682/article/details/46817283)\n[Android Handler机制（一）---Message源码分析](http://www.cnblogs.com/jycboy/p/5786551.html)\n\n## 21.移动网络通信机制，对Socket通信、TCP/IP和HTTP\n[Android之从TCP/IP、HTTP看Socket通信](http://blog.csdn.net/qq_28042233/article/details/59520214)\n\n## 22.sqlite的使用 怎么升级，sqlite不能删除字段\n\n[android之存储篇_SQLite数据库_让你彻底学会SQLite的使用](http://blog.csdn.net/qq_35114086/article/details/52825048)\n\nALTER  TABLE   table-name  ADD COLUMN  column-name column-type \n例如在student表中添加一列名为name，类型为varchar:\nalter table student add column name varchar;\n\nalter table student drop column name // 该行在SQlite中不能用，SQlite不支持drop\n\nsqlite中是不支持删除列操作的，所以网上alter table table_name drop column col_name这个语句在sqlite中是无效的，而替代的方法可以如下：\n\n1.根据原表创建一张新表\n\n2.删除原表\n\n3.将新表重名为旧表的名称\n\n示例例子如下\n\n1.创建一张旧表Student，包含id（主码），name, tel\n\ncreate table student (\n\nid integer primary key,\n\nname text,\n\ntel text\n\n)\n\n2.给旧表插入两个值\n\ninsert into student(id,name,tel) values(101,\"Jack\",\"110\")\n\ninsert into student(id,name,tel) values(102,\"Rose\",\"119\")\n\n结果如图\n\n[![clip_image002](http://hi.csdn.net/attachment/201106/23/0_13088131818G0A.gif \"clip_image002\")](http://hi.csdn.net/attachment/201106/23/0_1308813180xXxX.gif)\n\n3.接下来我们删除电话这个列，首先根据student表创建一张新表teacher\n\ncreate table teacher as select id,name from student\n\n结果如图\n\n[![clip_image004](http://hi.csdn.net/attachment/201106/23/0_1308813181JQ7J.gif \"clip_image004\")](http://hi.csdn.net/attachment/201106/23/0_130881318134dJ.gif)\n\n可以看到tel这一列已经没有了\n\n4.然后我们删除student这个表\n\ndrop table if exists student\n\n5.将teacher这个表重命名为student\n\nalter table teacher rename to student\n\n结果演示：\n\nselect * from student order by name desc（desc降序， asc升序）\n\n[![clip_image006](http://hi.csdn.net/attachment/201106/23/0_1308813185riDE.gif \"clip_image006\")](http://hi.csdn.net/attachment/201106/23/0_1308813184vjKt.gif)\n\n这样就可以得到我们想要的结果了。\n\n另外：给自己一个提示，在android sqlite中的查询语句如果是text类型的别忘了给他加上””来指明是String类型的，例如：\n\nCursor c = mSQLiteDatabase.query(_TABLE_NAME_, **null**, _NAME_ + \"=\" + \"/\"\" + name + \"/\"\", **null**, **null**,**null**, **null**);\n\n## 23.查看大图功能设计注意的点\n\n* 图片展示优化 缓存\n* 缩略图，大图\n\n",[[1521112871801,["gengmei_pxf@gengmei123.local",[[1,6160,"\n"]],[6159,6159],[6160,6160]]],[1521112879861,["gengmei_pxf@gengmei123.local",[[-1,6160,"\n"],[1,6161,"## 不能用"]],[6160,6160],[6166,6166]]],[1521112901612,["gengmei_pxf@gengmei123.local",[[1,6163,"int类型的变量 啊，"]],[6163,6163],[6174,6174]]],[1521112902535,["gengmei_pxf@gengmei123.local",[[-1,6172,"啊，"]],[6174,6174],[6172,6172]]],[1521112905050,["gengmei_pxf@gengmei123.local",[[1,6172,"a,b."]],[6172,6172],[6176,6176]]],[1521112905728,["gengmei_pxf@gengmei123.local",[[-1,6175,"."]],[6176,6176],[6175,6175]]],[1521112906215,["gengmei_pxf@gengmei123.local",[[1,6175,","]],[6175,6175],[6176,6176]]],[1521112909009,["gengmei_pxf@gengmei123.local",[[1,6179,"dis"]],[6179,6179],[6182,6182]]],[1521112909617,["gengmei_pxf@gengmei123.local",[[-1,6179,"dis"]],[6182,6182],[6179,6179]]],[1521112920123,["gengmei_pxf@gengmei123.local",[[1,6179,"第三个变量的"]],[6179,6179],[6185,6185]]],[1521112921823,["gengmei_pxf@gengmei123.local",[[-1,6184,"的"]],[6185,6185],[6184,6184]]],[1521112926579,["gengmei_pxf@gengmei123.local",[[1,6184,"交换阿布"]],[6184,6184],[6188,6188]]],[1521112927599,["gengmei_pxf@gengmei123.local",[[-1,6186,"阿布"]],[6188,6188],[6186,6186]]],[1521112929073,["gengmei_pxf@gengmei123.local",[[1,6186,"ab"]],[6186,6186],[6188,6188]]],[1521112934142,["gengmei_pxf@gengmei123.local",[[1,6187,"与\n\n"]],[6187,6187],[6190,6190]]],[1521112935614,["gengmei_pxf@gengmei123.local",[[1,6191,"\n"]],[6190,6190],[6191,6191]]],[1521112937553,["gengmei_pxf@gengmei123.local",[[-1,6191,"\n"],[1,6192,"```"]],[6191,6191],[6194,6194]]],[1521112938254,["gengmei_pxf@gengmei123.local",[[1,6194,"\n\n"]],[6194,6194],[6195,6195]]],[1521112938414,["gengmei_pxf@gengmei123.local",[[1,6196,"\n"]],[6195,6195],[6196,6196]]],[1521112940216,["gengmei_pxf@gengmei123.local",[[-1,6196,"\n"],[1,6197,"```"]],[6196,6196],[6199,6199]]],[1521112949016,["gengmei_pxf@gengmei123.local",[[1,6195,"b="]],[6195,6195],[6197,6197]]],[1521113203251,[null,[[1,6188,"b"],[-1,6190,"b"]],[6188,6188],[6190,6190]]],[1521113203251,[null,[[-1,6188,"b"],[1,6191,"b"]],[6190,6190],[6188,6188]]],[1521113170856,["gengmei_pxf@gengmei123.local",[[-1,6195,"b="]],[6197,6197],[6195,6195]]],[1521113175214,["gengmei_pxf@gengmei123.local",[[1,6195,"a=a^b"]],[6195,6195],[6200,6200]]],[1521113175716,["gengmei_pxf@gengmei123.local",[[1,6201,"\n"]],[6200,6200],[6201,6201]]],[1521113184004,["gengmei_pxf@gengmei123.local",[[1,6201,"b=a^b"]],[6201,6201],[6206,6206]]],[1521113184396,["gengmei_pxf@gengmei123.local",[[1,6207,"\n"]],[6206,6206],[6207,6207]]],[1521113198622,["gengmei_pxf@gengmei123.local",[[1,6207,"a=a^b"]],[6207,6207],[6212,6212]]],[1521113263235,[null,[[1,6188,"b"],[-1,6190,"b"]],[6188,6188],[6190,6190]]],[1521113263235,[null,[[-1,6188,"b"],[1,6191,"b"]],[6190,6190],[6188,6188]]],[1521113204980,["gengmei_pxf@gengmei123.local",[[1,6213,"\n"]],[6212,6212],[6213,6213]]],[1521113206082,["gengmei_pxf@gengmei123.local",[[1,6213,"()"]],[6213,6213],[6215,6215]]],[1521113207213,["gengmei_pxf@gengmei123.local",[[1,6214,"ji"]],[6214,6214],[6216,6216]]],[1521113207821,["gengmei_pxf@gengmei123.local",[[-1,6213,"(ji"]],[6216,6216],[6213,6213]]],[1521113208156,["gengmei_pxf@gengmei123.local",[[-1,6212,"\n"]],[6213,6213],[6212,6212]]],[1521113210149,["gengmei_pxf@gengmei123.local",[[-1,6212,")"]],[6213,6213],[6212,6212]]],[1521113213061,["gengmei_pxf@gengmei123.local",[[1,6216,"\n\n"]],[6216,6216],[6217,6217]]],[1521113215365,["gengmei_pxf@gengmei123.local",[[-1,6217,"\n"],[1,6218,"()"]],[6217,6217],[6219,6219]]],[1521113217509,["gengmei_pxf@gengmei123.local",[[1,6218,"jie"]],[6218,6218],[6221,6221]]],[1521113218268,["gengmei_pxf@gengmei123.local",[[-1,6218,"jie"]],[6221,6221],[6218,6218]]],[1521113227767,["gengmei_pxf@gengmei123.local",[[1,6218,"结题关键是"]],[6218,6218],[6223,6223]]],[1521113232178,["gengmei_pxf@gengmei123.local",[[-1,6223,")"]],[6224,6224],[6223,6223]]],[1521113235359,["gengmei_pxf@gengmei123.local",[[-1,6217,"("]],[6218,6218],[6217,6217]]],[1521113236865,["gengmei_pxf@gengmei123.local",[[1,6217,"**"]],[6217,6217],[6219,6219]]],[1521113240009,["gengmei_pxf@gengmei123.local",[[1,6224,"** "]],[6224,6224],[6227,6227]]],[1521113242407,["gengmei_pxf@gengmei123.local",[[-1,6226," "]],[6227,6227],[6226,6226]]],[1521113255561,["gengmei_pxf@gengmei123.local",[[1,6226,"：异或运算具有"]],[6226,6226],[6233,6233]]],[1521113323239,[null,[[1,6188,"b"],[-1,6190,"b"]],[6188,6188],[6190,6190]]],[1521113323239,[null,[[-1,6188,"b"],[1,6191,"b"]],[6190,6190],[6188,6188]]],[1521113265946,["gengmei_pxf@gengmei123.local",[[1,6233,"交换性"]],[6233,6233],[6236,6236]]],[1521113266678,["gengmei_pxf@gengmei123.local",[[1,6236,"\n\n"]],[6236,6236],[6237,6237]]],[1521113267166,["gengmei_pxf@gengmei123.local",[[1,6238,"\n"]],[6237,6237],[6238,6238]]],[1521113288222,["gengmei_pxf@gengmei123.local",[[-1,6238,"\n"],[1,6239,"## 有1元，"]],[6238,6238],[6245,6245]]],[1521113291920,["gengmei_pxf@gengmei123.local",[[-1,6244,"，"]],[6245,6245],[6244,6244]]],[1521113304354,["gengmei_pxf@gengmei123.local",[[1,6244,"去买桃，2"]],[6244,6244],[6249,6249]]],[1521113306008,["gengmei_pxf@gengmei123.local",[[-1,6248,"2"]],[6249,6249],[6248,6248]]],[1521113322651,["gengmei_pxf@gengmei123.local",[[1,6248,"两种方案，一霾"]],[6248,6248],[6255,6255]]],[1521113383234,[null,[[1,6188,"b"],[-1,6190,"b"]],[6188,6188],[6190,6190]]],[1521113383234,[null,[[-1,6188,"b"],[1,6191,"b"]],[6190,6190],[6188,6188]]],[1521113323461,["gengmei_pxf@gengmei123.local",[[-1,6254,"霾"]],[6255,6255],[6254,6254]]],[1521113333599,["gengmei_pxf@gengmei123.local",[[1,6254,"买2个桃送一个，"]],[6254,6254],[6262,6262]]],[1521113340067,["gengmei_pxf@gengmei123.local",[[1,6254,"中"]],[6254,6254],[6255,6255]]],[1521113340983,["gengmei_pxf@gengmei123.local",[[-1,6254,"中"]],[6255,6255],[6254,6254]]],[1521113343386,["gengmei_pxf@gengmei123.local",[[1,6254,"种是"]],[6254,6254],[6256,6256]]],[1521113349978,["gengmei_pxf@gengmei123.local",[[1,6264,"第二种是"]],[6264,6264],[6268,6268]]],[1521113353289,["gengmei_pxf@gengmei123.local",[[1,6253,"都"]],[6253,6253],[6254,6254]]],[1521113354295,["gengmei_pxf@gengmei123.local",[[-1,6253,"都"]],[6254,6254],[6253,6253]]],[1521113356306,["gengmei_pxf@gengmei123.local",[[1,6253,"低"]],[6253,6253],[6254,6254]]],[1521113358262,["gengmei_pxf@gengmei123.local",[[1,6162,"\n"]],[6162,6162],[6163,6163]]],[1521113359064,["gengmei_pxf@gengmei123.local",[[1,6163,"\n"]],[6163,6163],[6164,6164]]],[1521113360726,["gengmei_pxf@gengmei123.local",[[-1,6164," "]],[6164,6165],[6164,6164]]],[1521113364891,["gengmei_pxf@gengmei123.local",[[1,6162," 算法"]],[6162,6162],[6165,6165]]],[1521113370005,["gengmei_pxf@gengmei123.local",[[1,6167,"* "]],[6167,6167],[6169,6169]]],[1521113371710,["gengmei_pxf@gengmei123.local",[[-1,6244,"##"]],[6246,6246],[6244,6244]]],[1521113372786,["gengmei_pxf@gengmei123.local",[[1,6244,"*"]],[6244,6244],[6245,6245]]],[1521113378119,["gengmei_pxf@gengmei123.local",[[-1,6258,"低"]],[6259,6259],[6258,6258]]],[1521113379936,["gengmei_pxf@gengmei123.local",[[1,6258,"第"]],[6258,6258],[6259,6259]]],[1521113443245,[null,[[1,6194,"b"],[-1,6196,"b"]],[6194,6194],[6196,6196]]],[1521113443245,[null,[[-1,6194,"b"],[1,6197,"b"]],[6196,6196],[6194,6194]]],[1521113395337,["gengmei_pxf@gengmei123.local",[[1,6274,"三个桃核换一个桃。"]],[6274,6274],[6283,6283]]],[1521113396925,["gengmei_pxf@gengmei123.local",[[-1,6282,"。"]],[6283,6283],[6282,6282]]],[1521113408592,["gengmei_pxf@gengmei123.local",[[1,6282,"，问最多能买多少个桃？"]],[6282,6282],[6293,6293]]],[1521113409156,["gengmei_pxf@gengmei123.local",[[1,6293,"\n\n"]],[6293,6293],[6294,6294]]],[1521113409540,["gengmei_pxf@gengmei123.local",[[1,6295,"\n"]],[6294,6294],[6295,6295]]],[1521113412540,["gengmei_pxf@gengmei123.local",[[-1,6295,"\n"],[1,6296,"1"]],[6295,6295],[6296,6296]]],[1521113413440,["gengmei_pxf@gengmei123.local",[[-1,6295,"1"]],[6296,6296],[6295,6295]]],[1521113414438,["gengmei_pxf@gengmei123.local",[[-1,6294,"\n"],[1,6295,"```"]],[6295,6295],[6297,6297]]],[1521113414990,["gengmei_pxf@gengmei123.local",[[1,6297,"\n\n"]],[6297,6297],[6298,6298]]],[1521113415180,["gengmei_pxf@gengmei123.local",[[1,6299,"\n"]],[6298,6298],[6299,6299]]],[1521113416207,["gengmei_pxf@gengmei123.local",[[-1,6299,"\n"],[1,6300,"```"]],[6299,6299],[6302,6302]]],[1521113561062,[null,[[1,6194,"b"],[-1,6196,"b"]],[6194,6194],[6196,6196]]],[1521113561062,[null,[[-1,6194,"b"],[1,6197,"b"]],[6196,6196],[6194,6194]]],[1521113513651,["gengmei_pxf@gengmei123.local",[[1,6298,"public int funCount(int money,int core) {\n\n if (core >= 3) {\n\n return 1 + funCount(money, core - 3 + 1);\n\n }\n\n if (money >= 22) {\n\n return 3 + funCount(money - 22, core + 3);\n\n } else if (money >= 11) {\n\n return 1 + funCount(money - 11, core + 1);\n\n }\n\n return 0;\n\n }"]],[6298,6298],[6565,6565]]],[1521113520889,["gengmei_pxf@gengmei123.local",[[1,6341,"\t"],[1,6359,"\t"],[1,6360,"\t"],[1,6403,"\t"],[1,6404,"\t"],[1,6407,"\t"],[1,6408,"\t"],[1,6428,"\t"],[1,6429,"\t"],[1,6473,"\t"],[1,6474,"\t"],[1,6501,"\t"],[1,6502,"\t"],[1,6546,"\t"],[1,6547,"\t"],[1,6550,"\t"],[1,6551,"\t"]],[6342,6561],[6343,6578]]],[1521113525454,["gengmei_pxf@gengmei123.local",[[-1,6364,"return 1 + funCount(money, core - 3 + 1);"],[1,6405,"\t"]],[6364,6405],[6365,6365]]],[1521113526855,["gengmei_pxf@gengmei123.local",[[1,6364,"return 1 + funCount(money, core - 3 + 1);"],[-1,6364,"\t"]],[6365,6365],[6364,6405]]],[1521113529380,["gengmei_pxf@gengmei123.local",[[1,6364,"\t"]],[6364,6364],[6365,6365]]],[1521113531477,["gengmei_pxf@gengmei123.local",[[1,6440,"\t"]],[6440,6440],[6441,6441]]],[1521113533374,["gengmei_pxf@gengmei123.local",[[1,6518,"\t"]],[6518,6518],[6519,6519]]],[1521113535662,["gengmei_pxf@gengmei123.local",[[-1,6562,"\t"]],[6563,6563],[6562,6562]]],[1521113537254,["gengmei_pxf@gengmei123.local",[[-1,6562,"\n"]],[6562,6562],[6561,6561]]],[1521113539261,["gengmei_pxf@gengmei123.local",[[-1,6566,"\t"]],[6567,6567],[6566,6566]]],[1521113539702,["gengmei_pxf@gengmei123.local",[[-1,6566,"\n"]],[6566,6566],[6565,6565]]],[1521113541174,["gengmei_pxf@gengmei123.local",[[-1,6578,"\n"]],[6578,6578],[6577,6577]]],[1521113543902,["gengmei_pxf@gengmei123.local",[[-1,6514,"\t"]],[6515,6515],[6514,6514]]],[1521113544399,["gengmei_pxf@gengmei123.local",[[-1,6514,"\n"]],[6514,6514],[6513,6513]]],[1521113546862,["gengmei_pxf@gengmei123.local",[[-1,6484,"\t"]],[6485,6485],[6484,6484]]],[1521113547318,["gengmei_pxf@gengmei123.local",[[-1,6484,"\n"]],[6484,6484],[6483,6483]]],[1521113548798,["gengmei_pxf@gengmei123.local",[[-1,6436,"\t"]],[6437,6437],[6436,6436]]],[1521113549173,["gengmei_pxf@gengmei123.local",[[-1,6436,"\n"]],[6436,6436],[6435,6435]]],[1521113550838,["gengmei_pxf@gengmei123.local",[[-1,6413,"\t"]],[6414,6414],[6413,6413]]],[1521113551222,["gengmei_pxf@gengmei123.local",[[-1,6413,"\n"]],[6413,6413],[6412,6412]]],[1521113552809,["gengmei_pxf@gengmei123.local",[[-1,6407,"\t"]],[6408,6408],[6407,6407]]],[1521113553158,["gengmei_pxf@gengmei123.local",[[-1,6407,"\n"]],[6407,6407],[6406,6406]]],[1521113554654,["gengmei_pxf@gengmei123.local",[[-1,6360,"\t"]],[6361,6361],[6360,6360]]],[1521113555061,["gengmei_pxf@gengmei123.local",[[-1,6360,"\n"]],[6360,6360],[6359,6359]]],[1521113556806,["gengmei_pxf@gengmei123.local",[[-1,6340,"\n"]],[6340,6340],[6339,6339]]]]],["b6fbea51-9299-43e3-9bbe-0010ed69752b",1521195790462,"面试题总结2\n===\n## Java基础\nbyte,shrot,int字节数，范围什么的\n\n## 设计模式\n* Activity继承BaseActivity的设计模式是模板方法\n* 事件分发是责任链模式\n\n## Android加载布局流程\n提问的是Activity中setContentView的父布局\n\n###  流程： \n\n* Activity setContentView—>Window setContentView—>PhoneWindow setContentView—->PhoneWindow installDecor—–>PhoneWindow generateLayout——>PhoneWindow mLayoutInflater.inflate(layoutResID, mContentParent);\n\n* Activity 类中有一个Window抽象类的实现PhoneWindow类，该类中有个内部类DecorView，继承自FrameLayout，在DecorView容器中添加了根布局，根布局中包含了一个id为 contnet的FrameLayout 内容布局，我们的Activity加载的布局xml最后添加到 id为content的FrameLayout布局当中了。用一个图来描述，如下：\n\n![这里写图片描述](http://img.blog.csdn.net/20150702153425952)\n\n### 总结：\n\n* 1.关于requestWindowFeature(Window.FEATURE_NO_TITLE); 去除标题栏的疑问，如果你自己的xxxActivity是继承自Activity，那么恭喜你使用以上方法可以去除标题栏，如果你自己的xxxActivity是继承自AppCompatActivity或者ActionBarActivity，那么很遗憾告诉你，此次系统默认的标题栏已经在主题中去除，此时显示的标题栏是ActionBar导航栏，如果需要去除导航栏，你可以通过如下代码：getSupportActionBar().hide();来隐藏导航栏。\n\n* 2.requestWindowFeature(Window.FEATURE_NO_TITLE);方法需要在 setContentView方法之前使用，由上面 Step5分析可得，设置Activity Window 特征是在setContentView方法中设置的，因此，如果需要改变Activity Window窗口特征，需要在setContentView方法之前。其实这里有疑问？？？为什么设置全屏的方法\n\n```\ngetWindow().setFlags(WindowManager.LayoutParams.FLAG_FULLSCREEN, WindowManager.LayoutParams.FLAG_FULLSCREEN);\n```\n\n可以在setContentView之后呢？？？求解。\n\n[从setContentView方法分析Android加载布局流程](http://blog.csdn.net/feidu804677682/article/details/46711921)\n\n## Dialog加载绘制\n\n* AlertDialog和Activity一样，内部有一个Window，我们构造AlertDialog.Builder，通过Builder设置Dialog各种属性，,这些参数会被放在一个名为P（AlertController类型）的变量中，\n\n* 在调用AlertDialog.Builder.create方法的时候，内部首先会new一个 AlertDialog，AlertDialog的父类Dialog的构造函数中会new一个PhoneWindow赋值给AlertDialog中的Window，并且为它设置了回调。\n\n* AlertDialog创建之后执行apply方法，将P中的参数设置赋值给Dialog,后我们调用Dialog.show方法展示窗口，内部调用dispatchOnCreate，最终会走到setContentView，到此Dialog的Window和Dialog视图关联到了一起，\n\n* 最后执行mWindowManager.addView方法，通过WindowManager将DecorView添加到Window之中,此时Dialog显示在了我们面前。\n\n[Android源码解析Window系列第（二）篇---Dialog加载绘制流程](https://www.jianshu.com/p/f9303d30eb2b)\n\n## Context的应用场景\n提问的是Service能不能创建dialog\n\n![](http://img.blog.csdn.net/20150104183450879)\n\n## 自定义View\n\n### 构造函数方法参数\n\n构造函数参数最多有四个。简单总结下：\n\n*   Context - View中随处都会用到。\n\n*   AttributeSet - XML属性（当从XML inflate的时候）。\n\n*   int defStyleAttr - 应用到View的默认风格（定义在主题中）。\n\n*   int defStyleResource - 如果没有使用defStyleAttr，应用到View的默认风格\n\n除了Context，其它的参数只是用来通过XML属性配置View的初始状态（从布局，style以及theme中）。\n\n* [深入理解View的构造函数](https://link.jianshu.com/?t=http://www.jcodecraeer.com/a/anzhuokaifa/androidkaifa/2016/0806/4575.html)\n\n* [理解View的构造函数](https://link.jianshu.com/?t=http://www.cnblogs.com/angeldevil/p/3479431.html#three)\n\n### 自定义View基础\n\n* [（1）自定义View基础 - 最易懂的自定义View原理系列](https://www.jianshu.com/p/146e5cec4863)\n* [（2）自定义View Measure过程 - 最易懂的自定义View原理系列](https://www.jianshu.com/p/1dab927b2f36)\n* [（3）自定义View Layout过程 - 最易懂的自定义View原理系列](https://www.jianshu.com/p/158736a2549d)\n* [（4）自定义View Draw过程- 最易懂的自定义View原理系列](https://www.jianshu.com/p/95afeb7c8335)\n\n## 为什么handler的runnable函数是在主线程，而thread的runnable的是在子线程，handler创建的2种方法\n\n\n\n## 多进程需要注意和解决的问题\n\n\n## RecyclerView怎么实现一些复杂的效果\n\n我们知道recyclerview实现GridView效果只需配置一下参数就行了\n\n\n![GridLayoutManager1]($res/GridLayoutManager1.png)\n\n\n可以看到GridLayoutManager需要传递两个参数，一个是上下文对象，另一个是一行显示几列的参数常量，既然这个常量可以指定那么是不是这个值可以去控制呐，答案当然是yes\n\n我们会注意到GridLayoutManager里边有个setSpanSizeLookup方法,本篇的重点就是这个方法（这个方法具体意义大家可以网上搜索，会有很多相关介绍，以及通过它实现一些复杂的布局，再次不做过多讨论）\n\n\n![GridLayoutManager2]($res/GridLayoutManager2.png)\n\n其实getSpanSize返回值就是控制每行有几列的，根据这个思路我们不妨试试。因为recyclerview填充数据是根据adapter实现的，我们就把给adapter的数据源同样在setSpanSizeLookup这个方法里边判断一下不就行了吗？\n根据这个思路于是有了下面的代码\n\n\n![GridLayoutManager3]($res/GridLayoutManager3.png)\n\n## Android studio的使用，例如debug\n[你所不知道的Android Studio调试技巧](http://blog.csdn.net/hehe307/article/details/51941211)\n\n## 手写单例，双层加锁，为什么要双判断\n\n![Singleton1]($res/Singleton1.png)\n\n![Singleton2]($res/Singleton2.png)\n\n## git 命令的使用 打tag\n\n[Git-命令行-使用 Tag 标记你的代码](http://blog.csdn.net/qq_32452623/article/details/73949509)\n[Git 基础 - 打标签](https://git-scm.com/book/zh/v1/Git-%E5%9F%BA%E7%A1%80-%E6%89%93%E6%A0%87%E7%AD%BE)\n\n## 性能优化\n## webg与png的区别\n## 程序启动，内存怎么分配的\n## 具体代码的优化，对象不要多创建，因为多创建会导致多引用\n## 事件分发\n## 自定义View\n## Handler+Message+Looper\n\n[从Handler+Message+Looper源码带你分析Android系统的消息处理机制](http://blog.csdn.net/feidu804677682/article/details/46817283)\n[Android Handler机制（一）---Message源码分析](http://www.cnblogs.com/jycboy/p/5786551.html)\n\n## 21.移动网络通信机制，对Socket通信、TCP/IP和HTTP\n[Android之从TCP/IP、HTTP看Socket通信](http://blog.csdn.net/qq_28042233/article/details/59520214)\n\n## 22.sqlite的使用 怎么升级，sqlite不能删除字段\n\n[android之存储篇_SQLite数据库_让你彻底学会SQLite的使用](http://blog.csdn.net/qq_35114086/article/details/52825048)\n\nALTER  TABLE   table-name  ADD COLUMN  column-name column-type \n例如在student表中添加一列名为name，类型为varchar:\nalter table student add column name varchar;\n\nalter table student drop column name // 该行在SQlite中不能用，SQlite不支持drop\n\nsqlite中是不支持删除列操作的，所以网上alter table table_name drop column col_name这个语句在sqlite中是无效的，而替代的方法可以如下：\n\n1.根据原表创建一张新表\n\n2.删除原表\n\n3.将新表重名为旧表的名称\n\n示例例子如下\n\n1.创建一张旧表Student，包含id（主码），name, tel\n\ncreate table student (\n\nid integer primary key,\n\nname text,\n\ntel text\n\n)\n\n2.给旧表插入两个值\n\ninsert into student(id,name,tel) values(101,\"Jack\",\"110\")\n\ninsert into student(id,name,tel) values(102,\"Rose\",\"119\")\n\n结果如图\n\n[![clip_image002](http://hi.csdn.net/attachment/201106/23/0_13088131818G0A.gif \"clip_image002\")](http://hi.csdn.net/attachment/201106/23/0_1308813180xXxX.gif)\n\n3.接下来我们删除电话这个列，首先根据student表创建一张新表teacher\n\ncreate table teacher as select id,name from student\n\n结果如图\n\n[![clip_image004](http://hi.csdn.net/attachment/201106/23/0_1308813181JQ7J.gif \"clip_image004\")](http://hi.csdn.net/attachment/201106/23/0_130881318134dJ.gif)\n\n可以看到tel这一列已经没有了\n\n4.然后我们删除student这个表\n\ndrop table if exists student\n\n5.将teacher这个表重命名为student\n\nalter table teacher rename to student\n\n结果演示：\n\nselect * from student order by name desc（desc降序， asc升序）\n\n[![clip_image006](http://hi.csdn.net/attachment/201106/23/0_1308813185riDE.gif \"clip_image006\")](http://hi.csdn.net/attachment/201106/23/0_1308813184vjKt.gif)\n\n这样就可以得到我们想要的结果了。\n\n另外：给自己一个提示，在android sqlite中的查询语句如果是text类型的别忘了给他加上””来指明是String类型的，例如：\n\nCursor c = mSQLiteDatabase.query(_TABLE_NAME_, **null**, _NAME_ + \"=\" + \"/\"\" + name + \"/\"\", **null**, **null**,**null**, **null**);\n\n## 23.查看大图功能设计注意的点\n\n* 图片展示优化 缓存\n* 缩略图，大图\n\n## 算法\n\n* int类型的变量 a,b,不能用第三个变量交换a与b\n\n```\na=a^b\nb=a^b\na=a^b\n```\n**结题关键是**：异或运算具有交换性\n\n* 有1元去买桃，两种方案，第一种是买2个桃送一个，第二种是三个桃核换一个桃，问最多能买多少个桃？\n```\npublic int funCount(int money,int core) {\n\t if (core >= 3) {\n\t \treturn 1 + funCount(money, core - 3 + 1);\n\t }\n\t if (money >= 22) {\n\t \treturn 3 + funCount(money - 22, core + 3);\n\t } else if (money >= 11) {\n\t \treturn 1 + funCount(money - 11, core + 1);\n\t }\n\t return 0;\n }\n```",[[1521195741042,["gengmei_pxf@gengmei123.local",[[1,3954,"\n"]],[3953,3953],[3954,3954]]],[1521195743340,["gengmei_pxf@gengmei123.local",[[1,3970,"\n"]],[3969,3969],[3970,3970]]],[1521195745387,["gengmei_pxf@gengmei123.local",[[1,3987,"\n"]],[3986,3986],[3987,3987]]],[1521195751163,["gengmei_pxf@gengmei123.local",[[1,4019,"\n"]],[4018,4018],[4019,4019]]],[1521195752120,["gengmei_pxf@gengmei123.local",[[1,4019,"（）"]],[4019,4019],[4021,4021]]],[1521195759300,["gengmei_pxf@gengmei123.local",[[1,4020,"具体的代码"]],[4020,4020],[4025,4025]]],[1521195767046,["gengmei_pxf@gengmei123.local",[[1,4020,"现场出"]],[4020,4020],[4023,4023]]],[1521195770109,["gengmei_pxf@gengmei123.local",[[-1,4022,"出"]],[4023,4023],[4022,4022]]],[1521195773894,["gengmei_pxf@gengmei123.local",[[1,4022,"写出对"]],[4022,4022],[4025,4025]]],[1521195779605,["gengmei_pxf@gengmei123.local",[[1,4030,"进行优化"]],[4030,4030],[4034,4034]]],[1521195784417,["gengmei_pxf@gengmei123.local",[[1,4044,"\n"]],[4043,4043],[4044,4044]]],[1521195787050,["gengmei_pxf@gengmei123.local",[[1,4056,"\n"]],[4055,4055],[4056,4056]]],[1521195839901,["gengmei_pxf@gengmei123.local",[[1,3954," [## 内存泄漏](https://pxfile.github.io/2018/02/14/Android%E5%86%85%E5%AD%98%E6%B3%84%E6%BC%8F/)"]],[3954,3954],[4046,4046]]],[1521195848377,["gengmei_pxf@gengmei123.local",[[-1,3956,"## "]],[3959,3959],[3956,3956]]],[1521195851433,["gengmei_pxf@gengmei123.local",[[1,3954,"\n"]],[3953,3953],[3954,3954]]],[1521195886290,["gengmei_pxf@gengmei123.local",[[1,3954," [## 性能优化](https://pxfile.github.io/2018/03/08/%E6%80%A7%E8%83%BD%E4%BC%98%E5%8C%96/)"]],[3954,3954],[4039,4039]]],[1521195889062,["gengmei_pxf@gengmei123.local",[[-1,3956,"## "]],[3959,3959],[3956,3956]]],[1521195927988,["gengmei_pxf@gengmei123.local",[[1,4127,"\n"]],[4126,4126],[4127,4127]]],[1521195941883,["gengmei_pxf@gengmei123.local",[[1,4209,"\n"]],[4208,4208],[4209,4209]]],[1521197591722,["gengmei_pxf@gengmei123.local",[[1,4230," [## View的绘制流程](https://pxfile.github.io/2018/03/16/View%E7%9A%84%E7%BB%98%E5%88%B6%E6%B5%81%E7%A8%8B/)"]],[4230,4230],[4333,4333]]],[1521197594167,["gengmei_pxf@gengmei123.local",[[-1,4232,"## "]],[4235,4235],[4232,4232]]],[1521197603444,["gengmei_pxf@gengmei123.local",[[1,4218," [## View事件传递机制](https://pxfile.github.io/2018/03/16/View%E4%BA%8B%E4%BB%B6%E4%BC%A0%E9%80%92%E6%9C%BA%E5%88%B6/)"]],[4218,4218],[4331,4331]]],[1521197605558,["gengmei_pxf@gengmei123.local",[[1,4332,"\n"]],[4331,4331],[4332,4332]]],[1521197614166,["gengmei_pxf@gengmei123.local",[[-1,4220,"## "]],[4223,4223],[4220,4220]]],[1521197660996,["gengmei_pxf@gengmei123.local",[[1,4161,"\n"]],[4159,4159],[4160,4160]]],[1521197668231,["gengmei_pxf@gengmei123.local",[[1,4208,"，"]],[4208,4208],[4209,4209]]],[1521197671255,["gengmei_pxf@gengmei123.local",[[1,4209,"当时问"]],[4209,4209],[4212,4212]]],[1521197672116,["gengmei_pxf@gengmei123.local",[[-1,4211,"问"]],[4212,4212],[4211,4211]]],[1521197673343,["gengmei_pxf@gengmei123.local",[[1,4211,"靠"]],[4211,4211],[4212,4212]]],[1521197673740,["gengmei_pxf@gengmei123.local",[[-1,4211,"靠"]],[4212,4212],[4211,4211]]],[1521197695878,["gengmei_pxf@gengmei123.local",[[1,4211,"考的是对象的多次创建怎么优化，具体情况具体分析"]],[4211,4211],[4234,4234]]],[1521198509232,["gengmei_pxf@gengmei123.local",[[1,4160,"【"]],[4160,4160],[4161,4161]]],[1521198509813,["gengmei_pxf@gengmei123.local",[[-1,4160,"【"]],[4161,4161],[4160,4160]]],[1521198511607,["gengmei_pxf@gengmei123.local",[[1,4160,"[]()"]],[4160,4160],[4164,4164]]],[1521198512951,["gengmei_pxf@gengmei123.local",[[1,4161,"Android中的内存管理机制以及正确的使用方式"]],[4161,4161],[4185,4185]]],[1521198521229,["gengmei_pxf@gengmei123.local",[[1,4187,"https://www.2cto.com/kf/201604/501892.html"]],[4187,4187],[4229,4229]]],[1521198524901,["gengmei_pxf@gengmei123.local",[[1,4160,"* "]],[4160,4160],[4162,4162]]],[1521198527620,["gengmei_pxf@gengmei123.local",[[1,4234,"\n"]],[4232,4232],[4233,4233]]],[1521198528506,["gengmei_pxf@gengmei123.local",[[1,4235,"\n"]],[4233,4233],[4234,4234]]],[1521198531710,["gengmei_pxf@gengmei123.local",[[1,4234,"* []()"]],[4234,4234],[4240,4240]]],[1521198575798,["gengmei_pxf@gengmei123.local",[[1,4241,"# [Android内存管理机制](http://www.cnblogs.com/nathan909/p/5372981.html)"]],[4241,4241],[4307,4307]]],[1521198578099,["gengmei_pxf@gengmei123.local",[[-1,4241,"#"]],[4242,4242],[4241,4241]]],[1521198579142,["gengmei_pxf@gengmei123.local",[[1,4241,"*"]],[4241,4241],[4242,4242]]],[1521198582523,["gengmei_pxf@gengmei123.local",[[-1,4234,"* []()"]],[4240,4240],[4234,4234]]],[1521198582692,["gengmei_pxf@gengmei123.local",[[-1,4234,"\n"]],[4234,4234],[4233,4233]]],[1521198586634,["gengmei_pxf@gengmei123.local",[[1,4301,"\n"]],[4300,4300],[4301,4301]]],[1521198878094,["gengmei_pxf@gengmei123.local",[[1,4144,"\n"]],[4143,4143],[4144,4144]]],[1521198879871,["gengmei_pxf@gengmei123.local",[[1,4145,"\n"]],[4143,4143],[4144,4144]]],[1521198880219,["gengmei_pxf@gengmei123.local",[[1,4144,"WebP作为一种较新的图片格式，在一定程度上提高了图片的压缩率，但目前压缩表现尤其对于动图，还较不稳定。\n\n而Android对WebP动图支持较差，目前仅有Fresco一个开源库支持，要引入项目中，需进一步分离出无关的功能，并考虑最低仅支持API 9的问题。"]],[4144,4144],[4273,4273]]],[1521198890265,["gengmei_pxf@gengmei123.local",[[-1,4131,"webg"],[1,4135,"## WebP"]],[4131,4135],[4138,4138]]],[1521198893039,["gengmei_pxf@gengmei123.local",[[-1,4131,"## "]],[4134,4134],[4131,4131]]],[1521198897254,["gengmei_pxf@gengmei123.local",[[-1,4136,"p"]],[4137,4137],[4136,4136]]],[1521198898386,["gengmei_pxf@gengmei123.local",[[1,4136,"P"]],[4136,4136],[4137,4137]]],[1521198900998,["gengmei_pxf@gengmei123.local",[[1,4144,"\n"]],[4142,4142],[4143,4143]]],[1521198901510,["gengmei_pxf@gengmei123.local",[[1,4145,"\n"]],[4143,4143],[4144,4144]]],[1521199047967,["gengmei_pxf@gengmei123.local",[[1,4144,"## 优点\n\n在质量相同的情况下，WebP格式图像的体积要比JPEG格式图像小40%。\n根据Google较早的测试，WebP的无损压缩比网络上找到的PNG文件少了45％的文件大小，即使这些PNG文件在使用pngcrush和PNGOUT处理过，WebP还是可以减少28％的文件大小\n\n## 缺点\n\n1.  编解码速度偏慢\n    目前WEBP与JPG相比较，编码速度慢10倍，解码速度慢1.5倍，实际上对于绝大部分的网络应用而言，图片都是静态文件，所以对于用户使用只需要关心解码速度即可。针对1.5倍的解码速度是否影响用户体验的问题，我们可以看看ebay团队的这个测试，50张同样质量的WEBP与jgp加载的速度对比：[http://www.webpagetest.org/video/view.php?id=130125_7b15e676f5fa0b736f247ff0ed36517e64d9c9ea](http://www.webpagetest.org/video/view.php?id=130125_7b15e676f5fa0b736f247ff0ed36517e64d9c9ea)\n    此测试表明，webp虽然会增加额外的解码时间，但是由于减少了文件体积，缩短了加载的时间，实际上文件的渲染速度反而变快了。\n2.  浏览器支持不全\n    移动端Android4.0以上、PC端chorme 10+（14 ~ 16 有渲染bug）、opera 11+ 、safri均支持webp格式图片。firefox曾经拒绝支持webp，今年也重启了关于webp第二次讨论[](https://bugzilla.mozilla.org/show_bug.cgi?id=856375)[https://bugzilla.mozilla.org/show_bug.cgi?id=856375](https://bugzilla.mozilla.org/show_bug.cgi?id=856375)"]],[4144,4144],[4992,4992]]],[1521199051266,["gengmei_pxf@gengmei123.local",[[1,4146,"*"]],[4146,4146],[4147,4147]]],[1521199054497,["gengmei_pxf@gengmei123.local",[[-1,4144,"##"]],[4146,4146],[4144,4144]]],[1521199057538,["gengmei_pxf@gengmei123.local",[[-1,4284,"##"]],[4285,4286],[4284,4284]]],[1521199058555,["gengmei_pxf@gengmei123.local",[[1,4284,"*"]],[4284,4284],[4285,4285]]],[1521199081770,["gengmei_pxf@gengmei123.local",[[1,4992,"3."]],[4992,4992],[4994,4994]]],[1521199087928,["gengmei_pxf@gengmei123.local",[[-1,4144,"*"]],[4145,4145],[4144,4144]]],[1521199089147,["gengmei_pxf@gengmei123.local",[[1,4144,"###"]],[4144,4144],[4147,4147]]],[1521199091760,["gengmei_pxf@gengmei123.local",[[-1,4286,"*"]],[4287,4287],[4286,4286]]],[1521199092602,["gengmei_pxf@gengmei123.local",[[1,4286,"###"]],[4286,4286],[4289,4289]]],[1521199097497,["gengmei_pxf@gengmei123.local",[[-1,4294,"1.  "],[1,4298,"* "]],[4294,4298],[4296,4296]]],[1521199100131,["gengmei_pxf@gengmei123.local",[[-1,4706,"2. "],[1,4709,"*"]],[4706,4709],[4707,4707]]],[1521199107186,["gengmei_pxf@gengmei123.local",[[-1,4992,"3."],[1,4994,"* "]],[4992,4994],[4994,4994]]],[1521199121527,["gengmei_pxf@gengmei123.local",[[-1,4304,"    "]],[4308,4308],[4304,4304]]],[1521199122558,["gengmei_pxf@gengmei123.local",[[1,4304,"\n"]],[4304,4304],[4305,4305]]],[1521199125327,["gengmei_pxf@gengmei123.local",[[-1,4713,"    "]],[4717,4717],[4713,4713]]],[1521199125966,["gengmei_pxf@gengmei123.local",[[1,4713,"\n"]],[4713,4713],[4714,4714]]],[1521199129063,["gengmei_pxf@gengmei123.local",[[-1,4638,"    "]],[4642,4642],[4638,4638]]],[1521199130455,["gengmei_pxf@gengmei123.local",[[-1,4637,"\n"]],[4638,4638],[4637,4637]]],[1521199131598,["gengmei_pxf@gengmei123.local",[[-1,4636,")"]],[4637,4637],[4636,4636]]],[1521199132053,["gengmei_pxf@gengmei123.local",[[1,4636,"\n"]],[4636,4636],[4637,4637]]],[1521199133102,["gengmei_pxf@gengmei123.local",[[1,4637,"\n"]],[4637,4637],[4638,4638]]],[1521199166126,["gengmei_pxf@gengmei123.local",[[1,4144,"\n"]],[4142,4142],[4143,4143]]],[1521199167138,["gengmei_pxf@gengmei123.local",[[1,4143,"【】"]],[4143,4143],[4145,4145]]],[1521199167894,["gengmei_pxf@gengmei123.local",[[-1,4143,"【】"]],[4145,4145],[4143,4143]]],[1521199169903,["gengmei_pxf@gengmei123.local",[[1,4143,"[]()"]],[4143,4143],[4147,4147]]],[1521199171609,["gengmei_pxf@gengmei123.local",[[1,4144,"# 关于最新APK的瘦身——关于webp与png的区别"]],[4144,4144],[4171,4171]]],[1521199174611,["gengmei_pxf@gengmei123.local",[[-1,4144,"# "]],[4146,4146],[4144,4144]]],[1521199180904,["gengmei_pxf@gengmei123.local",[[1,4171,"http://blog.csdn.net/a358583166/article/details/53258453"]],[4171,4171],[4227,4227]]],[1521199252664,["gengmei_pxf@gengmei123.local",[[1,2966," [## Android多进程使用及其带来的问题](https://pxfile.github.io/2018/03/14/Android%E5%A4%9A%E8%BF%9B%E7%A8%8B%E4%BD%BF%E7%94%A8%E5%8F%8A%E5%85%B6%E5%B8%A6%E6%9D%A5%E7%9A%84%E9%97%AE%E9%A2%98/)"]],[2966,2966],[3145,3145]]],[1521199255259,["gengmei_pxf@gengmei123.local",[[-1,2968,"## "]],[2971,2971],[2968,2968]]],[1521199257706,["gengmei_pxf@gengmei123.local",[[1,3143,"\n"]],[3142,3142],[3143,3143]]],[1521199301532,["gengmei_pxf@gengmei123.local",[[1,2946," [## Handler机制](https://pxfile.github.io/2018/03/08/%E7%B2%BE%E9%80%9AAndroid%E4%B8%8B%E7%9A%84Handler%E6%9C%BA%E5%88%B6/)"]],[2946,2946],[3068,3068]]],[1521199303920,["gengmei_pxf@gengmei123.local",[[-1,2948,"## "]],[2951,2951],[2948,2948]]],[1521211550938,["gengmei_pxf@gengmei123.local",[[1,4831,"！"]],[4831,4831],[4832,4832]]],[1521211556262,["gengmei_pxf@gengmei123.local",[[1,4831,"\n"]],[4831,4831],[4832,4832]]],[1521211558398,["gengmei_pxf@gengmei123.local",[[-1,4832,"！"]],[4833,4833],[4832,4832]]],[1521211560023,["gengmei_pxf@gengmei123.local",[[1,4832,"!"]],[4832,4832],[4833,4833]]],[1521211576187,["gengmei_pxf@gengmei123.local",[[1,5020,")"]],[5020,5020],[5021,5021]]],[1521211596298,["gengmei_pxf@gengmei123.local",[[-1,4834,"http://www.webpagetest.org/video/view.php?id=130125_7b15e676f5fa0b736f247ff0ed36517e64d9c9ea"]],[4834,4926],[4834,4834]]],[1521211613778,["gengmei_pxf@gengmei123.local",[[-1,4830,"：\n![](http://www.webpagetest.org/video/view.php?id=130125_7b15e676f5fa0b736f247ff0ed36517e64d9c9ea)"]],[4830,4929],[4830,4830]]],[1521211617356,["gengmei_pxf@gengmei123.local",[[1,4830,"."]],[4830,4830],[4831,4831]]],[1521211629228,["gengmei_pxf@gengmei123.local",[[1,4894,"\n"]],[4894,4894],[4895,4895]]],[1521211676305,["gengmei_pxf@gengmei123.local",[[-1,5015,"[](https://bugzilla.mozilla.org/show_bug.cgi?id=856375)[https://bugzilla.mozilla.org/show_bug.cgi?id=856375](https://bugzilla.mozilla.org/show_bug.cgi?id=856375)"]],[5017,5176],[5015,5015]]],[1521211677182,["gengmei_pxf@gengmei123.local",[[1,5015,"."]],[5015,5015],[5016,5016]]],[1521211681304,["gengmei_pxf@gengmei123.local",[[-1,5015,"."]],[5016,5016],[5015,5015]]],[1521211681949,["gengmei_pxf@gengmei123.local",[[1,5015,"。"]],[5015,5015],[5016,5016]]]]]]}