{"compress":true,"commitItems":[["8d96686d-3b66-46c4-88b2-312712ea95b8",1520240120206,"",[[1520240090990,["gengmei_pxf@gengmei123.local",[[1,0,"热修复,插件化\n===\n\n\n插件化相关技术，热修补技术是怎样实现的，和插件化有什么区别\n\n**相同点:**\n\n    都使用ClassLoader来实现的加载的新的功能类，都可以使用PathClassLoader与DexClassLoader\n\n**不同点：**\n\n    热修复因为是为了修复Bug的，所以要将新的同名类替代同名的Bug类，要抢先加载新的类而不是Bug类，所以多做两件事：在原先的app打包的时候，阻止相关类去打上CLASS_ISPREVERIFIED标志，还有在热修复时动态改变BaseDexClassLoader对象间接引用的dexElements，这样才能抢先代替Bug类，完成系统不加载旧的Bug类.\n\n    而插件化只是增肌新的功能类或者是资源文件，所以不涉及抢先加载旧的类这样的使命，就避过了阻止相关类去打上CLASS_ISPREVERIFIED标志和还有在热修复时动态改变BaseDexClassLoader对象间接引用的dexElements.\n\n    所以插件化比热修复简单，热修复是在插件化的基础上在进行替旧的Bug类"]],[0,0],[480,480]]],[1520240096717,["gengmei_pxf@gengmei123.local",[[1,14,"## "]],[14,14],[17,17]]],[1520240105501,["gengmei_pxf@gengmei123.local",[[1,48,"### "]],[48,48],[52,52]]],[1520240108027,["gengmei_pxf@gengmei123.local",[[1,130,"### "]],[130,130],[134,134]]],[1520240174229,["gengmei_pxf@gengmei123.local",[[-1,337,"肌"]],[338,338],[337,337]]],[1520240176151,["gengmei_pxf@gengmei123.local",[[1,337,"加"]],[337,337],[338,338]]]]]]}