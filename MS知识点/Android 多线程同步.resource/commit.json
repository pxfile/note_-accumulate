{"compress":true,"commitItems":[["910cb3a3-2032-464a-8f19-dfc62fedb2f1",1521527757437,"",[[1521527718648,["gengmei_pxf@gengmei123.local",[[1,0,"JAVA Android 多线程实现方式及并发与同步\n===\n\n\n# 概述\n\n> 说到线程，就不得不先说线程和进程的关系，这里先简单解释一下，进程是系统的执行单位，一般一个应用程序即是一个进程，程序启动时系统默认有一个主线程，即是UI线程，我们知道不能做耗时任务，否则ANR程序无响应。这时需要借助子线程实现，即多线程。由于线程是系统CPU的最小单位，用多线程其实就是为了更好的利用cpu的资源。\n\n## **多线程实现方式**\n\n### 1、继承Thread类，重写run函数方法："]],[0,0],[242,242]]],[1521527721763,["gengmei_pxf@gengmei123.local",[[-1,39,"> "]],[41,41],[39,39]]],[1521527737739,["gengmei_pxf@gengmei123.local",[[1,240,"\n\nclass xx extends Thread{\n    public void run(){\n        Thread.sleep(1000);    //线程休眠1000毫秒，sleep使线程进入Block状态，并释放资源\n    }\n}\nxx.start();    //启动线程，run函数运行"]],[240,240],[394,394]]],[1521527742272,["gengmei_pxf@gengmei123.local",[[1,241,"\n"]],[241,241],[242,242]]],[1521527743580,["gengmei_pxf@gengmei123.local",[[1,241,"·"]],[241,241],[242,242]]],[1521527744610,["gengmei_pxf@gengmei123.local",[[-1,241,"·"]],[242,242],[241,241]]],[1521527745739,["gengmei_pxf@gengmei123.local",[[1,241,"```"]],[241,241],[244,244]]],[1521527749008,["gengmei_pxf@gengmei123.local",[[1,399,"\n"]],[398,398],[399,399]]],[1521527749851,["gengmei_pxf@gengmei123.local",[[-1,399,"\n"],[1,400,"```"]],[399,399],[402,402]]],[1521527751385,["gengmei_pxf@gengmei123.local",[[1,402,"\n\n"]],[402,402],[403,403]]],[1521527877452,[null,[[-1,245,"\n"],[1,399,"\n"]],[245,245],[400,400]]],[1521527877452,[null,[[1,245,"\n"],[-1,398,"\n"]],[400,400],[245,245]]],[1521527831424,["gengmei_pxf@gengmei123.local",[[1,403,"### 2、实现Runnable接口，重写run函数方法："]],[403,403],[432,432]]],[1521527845772,["gengmei_pxf@gengmei123.local",[[1,433,"\n"]],[432,432],[433,433]]],[1521527846829,["gengmei_pxf@gengmei123.local",[[-1,433,"\n"],[1,434,"```"]],[433,433],[436,436]]],[1521527847188,["gengmei_pxf@gengmei123.local",[[1,436,"\n\n"]],[436,436],[437,437]]],[1521527847516,["gengmei_pxf@gengmei123.local",[[1,438,"\n"]],[437,437],[438,438]]],[1521527848271,["gengmei_pxf@gengmei123.local",[[-1,438,"\n"],[1,439,"```"]],[438,438],[441,441]]],[1521527850063,["gengmei_pxf@gengmei123.local",[[1,437,"### 2、实现Runnable接口，重写run函数方法："]],[437,437],[466,466]]],[1521527851227,["gengmei_pxf@gengmei123.local",[[-1,437,"### 2、实现Runnable接口，重写run函数方法："]],[466,466],[437,437]]],[1521527870518,["gengmei_pxf@gengmei123.local",[[1,437,"Runnable run =new Runnable() {\n    @Override\n    public void run() {\n        \n    }\n}"]],[437,437],[522,522]]],[1521527872939,["gengmei_pxf@gengmei123.local",[[1,526,"\n\n"]],[526,526],[527,527]]],[1521527873059,["gengmei_pxf@gengmei123.local",[[1,528,"\n"]],[527,527],[528,528]]],[1521527874172,["gengmei_pxf@gengmei123.local",[[-1,528,"\n"]],[528,528],[527,527]]],[1521527937441,[null,[[-1,245,"\n"],[1,399,"\n"]],[245,245],[400,400]]],[1521527937441,[null,[[1,245,"\n"],[-1,398,"\n"]],[400,400],[245,245]]],[1521527884974,["gengmei_pxf@gengmei123.local",[[1,527,"### 3、实现Callable接口，重写call函数方法："]],[527,527],[557,557]]],[1521527886843,["gengmei_pxf@gengmei123.local",[[1,558,"\n"]],[557,557],[558,558]]],[1521527887899,["gengmei_pxf@gengmei123.local",[[-1,558,"\n"],[1,559,"```"]],[558,558],[561,561]]],[1521527888206,["gengmei_pxf@gengmei123.local",[[1,561,"\n\n"]],[561,561],[562,562]]],[1521527888459,["gengmei_pxf@gengmei123.local",[[1,563,"\n"]],[562,562],[563,563]]],[1521527889133,["gengmei_pxf@gengmei123.local",[[-1,563,"\n"],[1,564,"```"]],[563,563],[566,566]]],[1521527898053,["gengmei_pxf@gengmei123.local",[[1,562,"Callable call =new Callable() {\n    @Override\n    public Object call() throws Exception {\n        return null;\n    }\n}"]],[562,562],[680,680]]],[1521527899908,["gengmei_pxf@gengmei123.local",[[1,684,"\n\n"]],[684,684],[685,685]]],[1521527997441,[null,[[-1,245,"\n"],[1,399,"\n"]],[245,245],[400,400]]],[1521527997441,[null,[[1,245,"\n"],[-1,398,"\n"]],[400,400],[245,245]]],[1521527960103,["gengmei_pxf@gengmei123.local",[[1,685,"小结：Callable 与 Runnable 对比。\n\n> 相同：都是可被其它线程执行的任务。\n> \n> 不同：\n> \n>      ①Callable规定的方法是call()，而Runnable规定的方法是run().\n> \n>      ②Callable的任务执行后可返回值，而Runnable的任务是不能返回值的\n> \n>      ③call()方法可抛出异常，而run()方法是不能抛出异常的。\n> \n>      ④运行Callable任务可拿到一个Future对象，Future表示异步计算的结果。通过Future对象可了解任务执行情况,可取消任务的执行。\n\n## 线程状态\n\n1、wait()。使一个线程处于等待状态，并且释放所有持有对象的lock锁，直到notify()/notifyAll()被唤醒后放到锁定池(lock blocked pool )，释放同步锁使线程回到可运行状态（Runnable）。\n\n2、sleep()。使一个线程处于睡眠状态，是一个静态方法，调用此方法要捕捉Interrupted异常，醒来后进入runnable状态，等待JVM调度。\n\n3、notify()。使一个等待状态的线程唤醒，注意并不能确切唤醒等待状态线程，是由JVM决定且不按优先级。\n\n4、allnotify()。使所有等待状态的线程唤醒，注意并不是给所有线程上锁，而是让它们竞争。\n\n5、join()。使一个线程中断，IO完成会回到Runnable状态，等待JVM的调度。\n\n6、Synchronized()。使Running状态的线程加同步锁使其进入(lock blocked pool ),同步锁被释放进入可运行状态(Runnable)。 \n\n补充：在runnable状态的线程是处于被调度的线程，此时的调度顺序是不一定的。Thread类中的yield方法可以让一个running状态的线程转入runnable。\n\n## 基础概念\n\n> 1、 并行。多个cpu实例或多台机器同时执行一段代码，是真正的同时。\n> \n> 2、并发。通过cpu调度算法，让用户看上去同时执行，实际上从cpu操作层面不是真正的同时。\n> \n> 3、线程安全。指在并发的情况之下，该代码经过多线程使用，线程的调度顺序不影响任何结果。线程不安全就意味着线程的调度顺序会影响最终结果，比如某段代码不加事务去并发访问。\n> \n> 4、线程同步。指的是通过人为的控制和调度，保证共享资源的多线程访问成为线程安全，来保证结果的准确。如某段代码加入@synchronized关键字。线程安全的优先级高于性能优化。\n> \n> 5、原子性。一个操作或者一系列操作，要么全部执行要么全部不执行。数据库中的“事物”就是个典型的院子操作。\n> \n> 6、可见性。当一个线程修改了共享属性的值，其它线程能立刻看到共享属性值的更改。比如JMM分为主存和工作内存，共享属性的修改过程是在主存中读取并复制到工作内存中，在工作内存中修改完成之后，再刷新主存中的值。若线程A在工作内存中修改完成但还来得及刷新主存中的值，这时线程B访问该属性的值仍是旧值。这样可见性就没法保证。\n> \n> 7、有序性。程序运行时代码逻辑的顺序在实际执行中不一定有序，为了提高性能，编译器和处理器都会对代码进行重新排序。前提是，重新排序的结果要和单线程执行程序顺序一致。\n\n## Synchronized 同步\n\n由于java的每个对象都有一个内置锁，当用此关键字修饰方法时， 内置锁会保护整个方法。在调用该方法前，需要获得内置锁，否则就处于阻塞状态。补充： synchronized关键字也可以修饰静态方法，此时如果调用该静态方法，将会锁住整个类。\n\n1、方法同步。给方法增加synchronized修饰符就可以成为同步方法，可以是静态方法、非静态方法，但不能是抽象方法、接口方法。小示例："]],[685,685],[2300,2300]]],[1521527965253,["gengmei_pxf@gengmei123.local",[[-1,713,">"],[-1,747,"     "],[1,752,"     "],[-1,801,"     "],[1,806,"     "],[-1,851,"     "],[1,856,"     "],[-1,894,"     "],[1,899,"     "],[-1,2106," "],[1,2107," "],[-1,2142," "],[1,2143," "]],[713,714],[713,713]]],[1521527976282,["gengmei_pxf@gengmei123.local",[[1,685,"### "]],[685,685],[689,689]]],[1521527981160,["gengmei_pxf@gengmei123.local",[[-1,736,"> \n>"]],[736,740],[736,736]]],[1521527983914,["gengmei_pxf@gengmei123.local",[[1,717,"*"]],[717,717],[718,718]]],[1521527985986,["gengmei_pxf@gengmei123.local",[[1,737,"*"]],[737,737],[738,738]]],[1521527989400,["gengmei_pxf@gengmei123.local",[[-1,743,"> \n> "]],[743,748],[743,743]]],[1521527992741,["gengmei_pxf@gengmei123.local",[[-1,792,"> \n>    "]],[792,800],[792,792]]],[1521527995617,["gengmei_pxf@gengmei123.local",[[1,794,"  "]],[792,792],[794,794]]],[1521528012497,[null,[[-1,245,"\n"],[1,399,"\n"]],[245,245],[400,400]]],[1521528012497,[null,[[1,245,"\n"],[-1,398,"\n"]],[400,400],[245,245]]],[1521527998578,["gengmei_pxf@gengmei123.local",[[-1,836,"> \n>    "]],[836,845],[837,837]]],[1521527999401,["gengmei_pxf@gengmei123.local",[[1,838,"  "]],[837,837],[839,839]]],[1521528002757,["gengmei_pxf@gengmei123.local",[[-1,873,"> \n>     "]],[873,883],[874,874]]],[1521528003977,["gengmei_pxf@gengmei123.local",[[1,874,"   "]],[874,874],[877,877]]],[1521528010759,["gengmei_pxf@gengmei123.local",[[1,737,"\n"]],[737,737],[738,738]]],[1521528072506,[null,[[-1,245,"\n"],[1,399,"\n"]],[245,245],[400,400]]],[1521528072506,[null,[[1,245,"\n"],[-1,398,"\n"]],[400,400],[245,245]]],[1521528033966,["gengmei_pxf@gengmei123.local",[[1,961,"* "]],[961,961],[963,963]]],[1521528035213,["gengmei_pxf@gengmei123.local",[[1,1081,"* "]],[1081,1081],[1083,1083]]],[1521528036370,["gengmei_pxf@gengmei123.local",[[1,1161,"* "]],[1161,1161],[1163,1163]]],[1521528037901,["gengmei_pxf@gengmei123.local",[[1,1219,"* "]],[1219,1219],[1221,1221]]],[1521528040181,["gengmei_pxf@gengmei123.local",[[1,1271,"* "]],[1271,1271],[1273,1273]]],[1521528041798,["gengmei_pxf@gengmei123.local",[[1,1319,"* "]],[1319,1319],[1321,1321]]],[1521528048173,["gengmei_pxf@gengmei123.local",[[-1,1502,">"],[1,1503,"*"]],[1502,1504],[1504,1504]]],[1521528051333,["gengmei_pxf@gengmei123.local",[[-1,1539,"> \n>"],[1,1543,"* "]],[1539,1543],[1541,1541]]],[1521528053291,["gengmei_pxf@gengmei123.local",[[-1,1541," "]],[1541,1541],[1540,1540]]],[1521528061434,["gengmei_pxf@gengmei123.local",[[1,1539,"\n"]],[1539,1539],[1540,1540]]],[1521528127426,[null,[[-1,245,"\n"],[1,399,"\n"]],[245,245],[400,400]]],[1521528127426,[null,[[1,245,"\n"],[-1,398,"\n"]],[400,400],[245,245]]],[1521528075044,["gengmei_pxf@gengmei123.local",[[-1,1588,"> \n>"],[1,1592,"* "]],[1588,1592],[1590,1590]]],[1521528077274,["gengmei_pxf@gengmei123.local",[[1,1588,"\n"]],[1588,1588],[1589,1589]]],[1521528081212,["gengmei_pxf@gengmei123.local",[[-1,1676,"> \n>"],[1,1680,"* "]],[1676,1680],[1678,1678]]],[1521528082898,["gengmei_pxf@gengmei123.local",[[1,1676,"\n"]],[1676,1676],[1677,1677]]],[1521528110424,["gengmei_pxf@gengmei123.local",[[-1,1769,"> \n>"],[1,1773,"* "]],[1769,1773],[1771,1771]]],[1521528112749,["gengmei_pxf@gengmei123.local",[[1,1769,"\n"]],[1769,1769],[1770,1770]]],[1521528117024,["gengmei_pxf@gengmei123.local",[[-1,1826,"> \n>"],[1,1830,"* "]],[1826,1830],[1828,1828]]],[1521528118148,["gengmei_pxf@gengmei123.local",[[1,1826,"\n"]],[1826,1826],[1827,1827]]],[1521528121887,["gengmei_pxf@gengmei123.local",[[-1,1988,"> \n>"],[1,1992,"* "]],[1988,1992],[1990,1990]]],[1521528123382,["gengmei_pxf@gengmei123.local",[[1,1988,"\n"]],[1988,1988],[1989,1989]]],[1521528247447,[null,[[-1,245,"\n"],[1,399,"\n"]],[245,245],[400,400]]],[1521528247447,[null,[[1,245,"\n"],[-1,398,"\n"]],[400,400],[245,245]]],[1521528190211,["gengmei_pxf@gengmei123.local",[[1,2285,"\n"]],[2284,2284],[2285,2285]]],[1521528191717,["gengmei_pxf@gengmei123.local",[[-1,2285,"\n"],[1,2286,"```"]],[2285,2285],[2288,2288]]],[1521528192003,["gengmei_pxf@gengmei123.local",[[1,2288,"\n\n"]],[2288,2288],[2289,2289]]],[1521528192211,["gengmei_pxf@gengmei123.local",[[1,2290,"\n"]],[2289,2289],[2290,2290]]],[1521528192941,["gengmei_pxf@gengmei123.local",[[-1,2290,"\n"],[1,2291,"```"]],[2290,2290],[2293,2293]]],[1521528194061,["gengmei_pxf@gengmei123.local",[[1,2289,"public synchronized void aMethod() { \n    // do something \n} \n\npublic static synchronized void anotherMethod() { \n    // do something \n} "]],[2289,2289],[2426,2426]]],[1521528244515,["gengmei_pxf@gengmei123.local",[[1,2430,"\n\n使用详解：线程在执行同步方法时是具有排它性的。当任意一个线程进入到一个对象的任意一个同步方法时，这个对象的所有同步方法都被锁定了，在此期间，其他任何线程都不能访问这个对象的任意一个同步方法，直到这个线程执行完它所调用的同步方法并从中退出，从而导致它释放了该对象的同步锁之后。在一个对象被某个线程锁定之后，其他线程是可以访问这个对象的所有非同步方法的。"]],[2430,2430],[2606,2606]]],[1521528307434,[null,[[-1,245,"\n"],[1,399,"\n"],[-1,2431,"\n"],[1,2607,"\n"]],[245,245],[2608,2608]]],[1521528307434,[null,[[1,245,"\n"],[-1,398,"\n"],[1,2431,"\n"],[-1,2606,"\n"]],[2608,2608],[245,245]]],[1521528257786,["gengmei_pxf@gengmei123.local",[[1,2215,"* "]],[2215,2215],[2217,2217]]],[1521528260654,["gengmei_pxf@gengmei123.local",[[-1,2215,"*"]],[2216,2216],[2215,2215]]],[1521528261858,["gengmei_pxf@gengmei123.local",[[1,2215,"###"]],[2215,2215],[2218,2218]]],[1521528263701,["gengmei_pxf@gengmei123.local",[[1,2226,"\n"]],[2226,2226],[2227,2227]]],[1521528265887,["gengmei_pxf@gengmei123.local",[[1,2227,"\n"]],[2227,2227],[2228,2228]]],[1521528282833,["gengmei_pxf@gengmei123.local",[[1,2286,"\n"]],[2286,2286],[2287,2287]]],[1521528283362,["gengmei_pxf@gengmei123.local",[[1,2287,"\n"]],[2287,2287],[2288,2288]]],[1521528286796,["gengmei_pxf@gengmei123.local",[[1,2228,"* "]],[2228,2228],[2230,2230]]],[1521528293868,["gengmei_pxf@gengmei123.local",[[1,2441,"* **"]],[2441,2441],[2445,2445]]],[1521528296633,["gengmei_pxf@gengmei123.local",[[1,2449,"**"]],[2449,2449],[2451,2451]]],[1521528367432,[null,[[-1,245,"\n"],[1,399,"\n"],[-1,2445,"\n"],[1,2449,"解"],[-1,2451,"解"],[1,2623,"\n"]],[245,245],[2624,2624]]],[1521528367432,[null,[[1,245,"\n"],[-1,398,"\n"],[1,2445,"\n"],[-1,2448,"解"],[1,2451,"解"],[-1,2622,"\n"]],[2624,2624],[245,245]]],[1521528341439,["gengmei_pxf@gengmei123.local",[[1,2623,"\n"]],[2622,2622],[2623,2623]]],[1521528341950,["gengmei_pxf@gengmei123.local",[[1,2624,"\n"]],[2623,2623],[2624,2624]]],[1521528342425,["gengmei_pxf@gengmei123.local",[[1,2624,"2、块同步。同步块是通过锁定一个指定的对象，来对块中的代码进行同步；同步方法和同步块之间的相互制约只限于同一个对象之间，静态同步方法只受它所属类的其它静态同步方法的制约，而跟这个类的实例没有关系。如果一个对象既有同步方法，又有同步块，那么当其中任意一个同步方法或者同步块被某个线程执行时，这个对象就被锁定了，其他线程无法在此时访问这个对象的同步方法，也不能执行同步块。\n\n3、使用方法同步保护共享数据。示例："]],[2624,2624],[2828,2828]]],[1521528345151,["gengmei_pxf@gengmei123.local",[[1,2624,"### "]],[2624,2624],[2628,2628]]],[1521528347132,["gengmei_pxf@gengmei123.local",[[1,2634,"\n"]],[2634,2634],[2635,2635]]],[1521528347646,["gengmei_pxf@gengmei123.local",[[1,2635,"\n"]],[2635,2635],[2636,2636]]],[1521528354416,["gengmei_pxf@gengmei123.local",[[1,2816,"### "]],[2816,2816],[2820,2820]]],[1521528356086,["gengmei_pxf@gengmei123.local",[[1,2835,"\n"]],[2835,2835],[2836,2836]]],[1521528357005,["gengmei_pxf@gengmei123.local",[[1,2836,"\n"]],[2836,2836],[2837,2837]]],[1521528427436,[null,[[-1,245,"\n"],[1,399,"\n"],[-1,2445,"\n"],[1,2449,"解"],[-1,2451,"解"],[1,2623,"\n"]],[245,245],[2624,2624]]],[1521528427436,[null,[[1,245,"\n"],[-1,398,"\n"],[1,2445,"\n"],[-1,2448,"解"],[1,2451,"解"],[-1,2622,"\n"]],[2624,2624],[245,245]]],[1521528368989,["gengmei_pxf@gengmei123.local",[[-1,2663,"；"]],[2664,2664],[2663,2663]]],[1521528369481,["gengmei_pxf@gengmei123.local",[[1,2663,"."]],[2663,2663],[2664,2664]]],[1521528370013,["gengmei_pxf@gengmei123.local",[[1,2664,"\n"]],[2664,2664],[2665,2665]]],[1521528487438,[null,[[-1,245,"\n"],[1,399,"\n"],[-1,2445,"\n"],[1,2449,"解"],[-1,2451,"解"],[1,2623,"\n"]],[245,245],[2624,2624]]],[1521528487438,[null,[[1,245,"\n"],[-1,398,"\n"],[1,2445,"\n"],[-1,2448,"解"],[1,2451,"解"],[-1,2622,"\n"]],[2624,2624],[245,245]]],[1521528428077,["gengmei_pxf@gengmei123.local",[[1,2665,"\n"]],[2665,2665],[2666,2666]]],[1521528430308,["gengmei_pxf@gengmei123.local",[[1,2730,"\n"]],[2730,2730],[2731,2731]]],[1521528432470,["gengmei_pxf@gengmei123.local",[[1,2731,"\n"]],[2731,2731],[2732,2732]]],[1521528436849,["gengmei_pxf@gengmei123.local",[[1,2636,"* "]],[2636,2636],[2638,2638]]],[1521528438874,["gengmei_pxf@gengmei123.local",[[1,2668,"* "]],[2668,2668],[2670,2670]]],[1521528440992,["gengmei_pxf@gengmei123.local",[[1,2736,"* "]],[2736,2736],[2738,2738]]],[1521528449582,["gengmei_pxf@gengmei123.local",[[1,2851,"\n"]],[2850,2850],[2851,2851]]],[1521528462584,["gengmei_pxf@gengmei123.local",[[1,2851,"public class ThreadTest implements Runnable{\n\npublic synchronized void run(){\n　　for(int i=0;i<10;i++) {\n　　　　System.out.print(\" \" + i);\n　　}\n}\n\npublic static void main(String[] args) {\n　　Runnable r1 = new ThreadTest(); \n　　Runnable r2 = new ThreadTest();\n　　Thread t1 = new Thread(r1);\n　　Thread t2 = new Thread(r2);\n　　t1.start();\n　　t2.start();\n}}"]],[2851,2851],[3193,3193]]],[1521528466397,["gengmei_pxf@gengmei123.local",[[1,2851,"\n"]],[2850,2850],[2851,2851]]],[1521528466832,["gengmei_pxf@gengmei123.local",[[1,2851,"·"]],[2851,2851],[2852,2852]]],[1521528467987,["gengmei_pxf@gengmei123.local",[[-1,2851,"·"]],[2852,2852],[2851,2851]]],[1521528469144,["gengmei_pxf@gengmei123.local",[[1,2851,"```"]],[2851,2851],[2854,2854]]],[1521528471615,["gengmei_pxf@gengmei123.local",[[1,3198,"\n"]],[3197,3197],[3198,3198]]],[1521528472395,["gengmei_pxf@gengmei123.local",[[-1,3198,"\n"],[1,3199,"```"]],[3198,3198],[3201,3201]]],[1521528474325,["gengmei_pxf@gengmei123.local",[[1,3201,"\n\n"]],[3201,3201],[3202,3202]]],[1521529207457,[null,[[-1,245,"\n"],[1,399,"\n"],[-1,2445,"\n"],[1,2449,"解"],[-1,2451,"解"],[1,2623,"\n"]],[245,245],[2624,2624]]],[1521529207457,[null,[[1,245,"\n"],[-1,398,"\n"],[1,2445,"\n"],[-1,2448,"解"],[1,2451,"解"],[-1,2622,"\n"]],[2624,2624],[245,245]]],[1521529181715,["gengmei_pxf@gengmei123.local",[[1,3202,"> 示例详解：代码中可见，run()被加上了synchronized 关键字，但保护的并不是共享数据。因为程序中两个线程对象 t1、t2 其实是另外两个线程对象 r1、r2 的线程，这个听起来绕，但是一眼你就能看明白；因为不同的线程对象的数据是不同的，即 r1,r2 有各自的run()方法，所以输出结果就无法预知。这时使用 synchronized 关键字可以让某个时刻只有一个线程可以访问该对象synchronized数据。每个对象都有一个“锁标志”，当这个对象的一个线程访问这个对象的某个synchronized 数据时，这个对象的所有被synchronized 修饰的数据将被上锁（因为“锁标志”被当前线程拿走了），只有当前线程访问完它要访问的synchronized 数据时，当前线程才会释放“锁标志”，这样同一个对象的其它线程才有机会访问synchronized 数据。\n\n接下来，我们把 r2 给注释掉， 即只保留一个 r 对象。如下："]],[3202,3202],[3627,3627]]],[1521529184264,["gengmei_pxf@gengmei123.local",[[-1,3203," "],[-1,3236," "],[1,3237," "],[-1,3335," "],[1,3336," "],[-1,3461," "],[1,3462," "],[-1,3486," "],[1,3487," "],[-1,3540," "],[1,3541," "],[-1,3589," "],[1,3590," "]],[3204,3204],[3203,3203]]],[1521529184592,["gengmei_pxf@gengmei123.local",[[-1,3202,">"]],[3203,3203],[3202,3202]]],[1521529198177,["gengmei_pxf@gengmei123.local",[[1,3202,"**"]],[3202,3202],[3204,3204]]],[1521529200425,["gengmei_pxf@gengmei123.local",[[1,3208,"**"]],[3208,3208],[3210,3210]]],[1521529203167,["gengmei_pxf@gengmei123.local",[[1,3211,"\n"]],[3211,3211],[3212,3212]]],[1521529204375,["gengmei_pxf@gengmei123.local",[[1,3212,"\n"]],[3212,3212],[3213,3213]]],[1521529267447,[null,[[-1,245,"\n"],[1,399,"\n"],[-1,2445,"\n"],[1,2449,"解"],[-1,2451,"解"],[1,2623,"\n"]],[245,245],[2624,2624]]],[1521529267447,[null,[[1,245,"\n"],[-1,398,"\n"],[1,2445,"\n"],[-1,2448,"解"],[1,2451,"解"],[-1,2622,"\n"]],[2624,2624],[245,245]]],[1521529216383,["gengmei_pxf@gengmei123.local",[[1,3364,"\n"]],[3364,3364],[3365,3365]]],[1521529221248,["gengmei_pxf@gengmei123.local",[[1,3213,"* "]],[3213,3213],[3215,3215]]],[1521529223182,["gengmei_pxf@gengmei123.local",[[1,3367,"\n"]],[3367,3367],[3368,3368]]],[1521529223912,["gengmei_pxf@gengmei123.local",[[1,3368,"* "]],[3368,3368],[3370,3370]]],[1521529236198,["gengmei_pxf@gengmei123.local",[[1,3638,"\n"]],[3637,3637],[3638,3638]]],[1521529237408,["gengmei_pxf@gengmei123.local",[[-1,3638,"\n"],[1,3639,"```"]],[3638,3638],[3641,3641]]],[1521529237918,["gengmei_pxf@gengmei123.local",[[1,3641,"\n\n"]],[3641,3641],[3642,3642]]],[1521529238155,["gengmei_pxf@gengmei123.local",[[1,3643,"\n"]],[3642,3642],[3643,3643]]],[1521529238824,["gengmei_pxf@gengmei123.local",[[-1,3643,"\n"],[1,3644,"```"]],[3643,3643],[3646,3646]]],[1521529249032,["gengmei_pxf@gengmei123.local",[[1,3642,"public class ThreadTest implements Runnable{\n\npublic synchronized void run(){\n　　for(int i=0;i<10;i++){\n　　　　System.out.print(\" \" + i);\n　　}\n}\n\npublic static void main(String[] args){\n　　Runnable r = new ThreadTest();\n　　Thread t1 = new Thread(r);\n　　Thread t2 = new Thread(r);\n　　t1.start();\n　　t2.start();\n}} "]],[3642,3642],[3945,3945]]],[1521529263861,["gengmei_pxf@gengmei123.local",[[1,3949,"\n\n> 示例详解：如果你运行1000 次这个程序，它的输出结果也一定每次都是：0 1 2 3 4 5 6 7 8 9 0 1 2 3 4 5 6 7 8 9。因为这里的synchronized 保护的是共享数据。t1,t2 是同一个对象（r）的两个线程，当其中的一个线程（例如：t1）开始执行run()方法时，由于run()受synchronized保护，所以同一个对象的其他线程（t2）无法访问synchronized 方法（run 方法）。只有当t1执行完后t2 才有机会执行。\n\n4、使用块同步，示例："]],[3949,3949],[4202,4202]]],[1521529265918,["gengmei_pxf@gengmei123.local",[[-1,3951," "],[-1,3966," "],[1,3967," "],[-1,4044," "],[1,4045," "],[-1,4059," "],[1,4060," "],[-1,4158," "],[1,4159," "],[-1,4165," "],[1,4166," "],[-1,4181," "],[1,4182," "]],[3952,3952],[3951,3951]]],[1521529266269,["gengmei_pxf@gengmei123.local",[[-1,3950,">"]],[3951,3951],[3950,3950]]],[1521529294120,[null,[[-1,245,"\n"],[1,399,"\n"],[-1,2445,"\n"],[1,2449,"解"],[-1,2451,"解"],[1,2623,"\n"],[-1,3950," "],[1,3964,"0"],[-1,3965," "],[1,4042,"d"],[-1,4043," "],[1,4057,"2"],[-1,4058," "],[1,4156,"d"],[-1,4157," "],[1,4163,"n"],[-1,4164," "],[1,4179,"2"],[-1,4180," "],[1,4201,"\n"]],[245,245],[4202,4202]]],[1521529294120,[null,[[1,245,"\n"],[-1,398,"\n"],[1,2445,"\n"],[-1,2448,"解"],[1,2451,"解"],[-1,2622,"\n"],[1,3950," "],[-1,3963,"0"],[1,3965," "],[-1,4041,"d"],[1,4043," "],[-1,4056,"2"],[1,4058," "],[-1,4155,"d"],[1,4157," "],[-1,4162,"n"],[1,4164," "],[-1,4178,"2"],[1,4180," "],[-1,4200,"\n"]],[4202,4202],[245,245]]],[1521529269143,["gengmei_pxf@gengmei123.local",[[1,3950,"**"]],[3950,3950],[3952,3952]]],[1521529272375,["gengmei_pxf@gengmei123.local",[[1,3956,"**"]],[3956,3956],[3958,3958]]],[1521529277972,["gengmei_pxf@gengmei123.local",[[1,3959,"\n"]],[3959,3959],[3960,3960]]],[1521529279132,["gengmei_pxf@gengmei123.local",[[1,3960,"\n"]],[3960,3960],[3961,3961]]],[1521529283644,["gengmei_pxf@gengmei123.local",[[1,4031,"\n"]],[4031,4031],[4032,4032]]],[1521529283964,["gengmei_pxf@gengmei123.local",[[1,4032,"\n"]],[4032,4032],[4033,4033]]],[1521529285431,["gengmei_pxf@gengmei123.local",[[1,4033,"* "]],[4033,4033],[4035,4035]]],[1521529288424,["gengmei_pxf@gengmei123.local",[[1,3961,"* "]],[3961,3961],[3963,3963]]],[1521529354128,[null,[[-1,245,"\n"],[1,399,"\n"],[-1,2445,"\n"],[1,2449,"解"],[-1,2451,"解"],[1,2623,"\n"],[-1,3952," "],[1,3956,"解"],[-1,3958,"解"],[1,3959,"："],[-1,3963,"："],[1,3972,"0"],[-1,3973," "],[1,4033,"。"],[-1,4037,"。"],[1,4054,"d"],[-1,4055," "],[1,4069,"2"],[-1,4070," "],[1,4168,"d"],[-1,4169," "],[1,4175,"n"],[-1,4176," "],[1,4191,"2"],[-1,4192," "],[1,4213,"\n"]],[245,245],[4214,4214]]],[1521529354128,[null,[[1,245,"\n"],[-1,398,"\n"],[1,2445,"\n"],[-1,2448,"解"],[1,2451,"解"],[-1,2622,"\n"],[1,3952," "],[-1,3955,"解"],[1,3958,"解"],[-1,3958,"："],[1,3963,"："],[-1,3971,"0"],[1,3973," "],[-1,4032,"。"],[1,4037,"。"],[-1,4053,"d"],[1,4055," "],[-1,4068,"2"],[1,4070," "],[-1,4167,"d"],[1,4169," "],[-1,4174,"n"],[1,4176," "],[-1,4190,"2"],[1,4192," "],[-1,4212,"\n"]],[4214,4214],[245,245]]],[1521529298572,["gengmei_pxf@gengmei123.local",[[1,4201,"### "]],[4201,4201],[4205,4205]]],[1521529312012,["gengmei_pxf@gengmei123.local",[[-1,201,"**"]],[203,203],[201,201]]],[1521529314091,["gengmei_pxf@gengmei123.local",[[-1,208,"**"]],[210,210],[208,208]]],[1521529329971,["gengmei_pxf@gengmei123.local",[[1,4213,"\n"]],[4212,4212],[4213,4213]]],[1521529333460,["gengmei_pxf@gengmei123.local",[[-1,4213,"\n"],[1,4214,"```"]],[4213,4213],[4216,4216]]],[1521529333962,["gengmei_pxf@gengmei123.local",[[1,4216,"\n\n"]],[4216,4216],[4217,4217]]],[1521529334266,["gengmei_pxf@gengmei123.local",[[1,4218,"\n"]],[4217,4217],[4218,4218]]],[1521529334972,["gengmei_pxf@gengmei123.local",[[-1,4218,"\n"],[1,4219,"```"]],[4218,4218],[4221,4221]]],[1521529414132,[null,[[-1,241,"\n"],[1,395,"\n"],[-1,2441,"\n"],[1,2445,"解"],[-1,2447,"解"],[1,2619,"\n"],[-1,3948," "],[1,3952,"解"],[-1,3954,"解"],[1,3955,"："],[-1,3959,"："],[1,3968,"0"],[-1,3969," "],[1,4029,"。"],[-1,4033,"。"],[1,4050,"d"],[-1,4051," "],[1,4065,"2"],[-1,4066," "],[1,4164,"d"],[-1,4165," "],[1,4171,"n"],[-1,4172," "],[1,4187,"2"],[-1,4188," "],[1,4196,"\n"],[-1,4201,"\n"],[1,4213,"\n"]],[241,241],[4214,4214]]],[1521529414132,[null,[[1,241,"\n"],[-1,394,"\n"],[1,2441,"\n"],[-1,2444,"解"],[1,2447,"解"],[-1,2618,"\n"],[1,3948," "],[-1,3951,"解"],[1,3954,"解"],[-1,3954,"："],[1,3959,"："],[-1,3967,"0"],[1,3969," "],[-1,4028,"。"],[1,4033,"。"],[-1,4049,"d"],[1,4051," "],[-1,4064,"2"],[1,4066," "],[-1,4163,"d"],[1,4165," "],[-1,4170,"n"],[1,4172," "],[-1,4186,"2"],[1,4188," "],[-1,4195,"\n"],[1,4201,"\n"],[-1,4212,"\n"]],[4214,4214],[241,241]]],[1521529356236,["gengmei_pxf@gengmei123.local",[[1,4217,"public class ThreadTest implements Runnable{\n   public void run(){\n      synchronized(this){  //与上面示例不同于关键字使用\n           for(int i=0;i<10;i++){\n               System.out.print(\" \" + i);\n           }\n      } \n   }\n   public static void main(String[] args){\n       Runnable r = new ThreadTest();\n       Thread t1 = new Thread(r);\n       Thread t2 = new Thread(r);\n       t1.start();\n       t2.start();\n   }\n} "]],[4217,4217],[4624,4624]]],[1521529374124,["gengmei_pxf@gengmei123.local",[[1,4628,"\n\n> 示例详解：这个与上面示例的运行结果也一样的。这里是把保护范围缩到最小，this 代表 ‘这个对象’   。没有必要把整个run()保护起来，run()中的代码只有一个for循环，所以只要保护for 循环就可以了。"]],[4628,4628],[4737,4737]]],[1521529375754,["gengmei_pxf@gengmei123.local",[[-1,4630," "],[-1,4670," "],[1,4671," "],[-1,4681," "],[1,4682," "],[-1,4729," "],[1,4730," "]],[4631,4631],[4630,4630]]],[1521529376185,["gengmei_pxf@gengmei123.local",[[-1,4629,">"]],[4630,4630],[4629,4629]]],[1521529377251,["gengmei_pxf@gengmei123.local",[[1,4629,"**"]],[4629,4629],[4631,4631]]],[1521529380122,["gengmei_pxf@gengmei123.local",[[1,4635,"**"]],[4635,4635],[4637,4637]]],[1521529381137,["gengmei_pxf@gengmei123.local",[[1,4638,"\n"]],[4638,4638],[4639,4639]]],[1521529381522,["gengmei_pxf@gengmei123.local",[[1,4639,"\n"]],[4639,4639],[4640,4640]]],[1521529474138,[null,[[-1,241,"\n"],[-1,395,""],[1,395,"\n"],[-1,2441,"\n"],[1,2445,"解"],[-1,2447,"解"],[1,2619,"\n"],[-1,3948," "],[1,3952,"解"],[-1,3954,"解"],[1,3955,"："],[-1,3959,"："],[1,3968,"0"],[-1,3969," "],[1,4029,"。"],[-1,4033,"。"],[1,4050,"d"],[-1,4051," "],[1,4065,"2"],[-1,4066," "],[1,4164,"d"],[-1,4165," "],[1,4171,"n"],[-1,4172," "],[1,4187,"2"],[-1,4188," "],[1,4196,"\n"],[-1,4201,"\n"],[1,4213,"\n"],[-1,4631," "],[1,4635,"解"],[-1,4637,"解"],[1,4638,"："],[-1,4640,"："],[1,4674,"s"],[-1,4675," "],[-1,4686," "],[1,4687," "],[1,4733,"r"],[-1,4734," "],[1,4742,"\n"]],[241,241],[4743,4743]]],[1521529474138,[null,[[1,241,"\n"],[1,394,""],[-1,394,"\n"],[1,2441,"\n"],[-1,2444,"解"],[1,2447,"解"],[-1,2618,"\n"],[1,3948," "],[-1,3951,"解"],[1,3954,"解"],[-1,3954,"："],[1,3959,"："],[-1,3967,"0"],[1,3969," "],[-1,4028,"。"],[1,4033,"。"],[-1,4049,"d"],[1,4051," "],[-1,4064,"2"],[1,4066," "],[-1,4163,"d"],[1,4165," "],[-1,4170,"n"],[1,4172," "],[-1,4186,"2"],[1,4188," "],[-1,4195,"\n"],[1,4201,"\n"],[-1,4212,"\n"],[1,4631," "],[-1,4634,"解"],[1,4637,"解"],[-1,4637,"："],[1,4640,"："],[-1,4673,"s"],[1,4675," "],[1,4685," "],[-1,4685," "],[-1,4732,"r"],[1,4734," "],[-1,4741,"\n"]],[4743,4743],[241,241]]],[1521529425814,["gengmei_pxf@gengmei123.local",[[1,4742,"\n"]],[4741,4741],[4742,4742]]],[1521529426213,["gengmei_pxf@gengmei123.local",[[1,4743,"\n"]],[4742,4742],[4743,4743]]],[1521529426697,["gengmei_pxf@gengmei123.local",[[1,4743,"## Volatile 同步\n\n    a.volatile关键字为域变量的访问提供了一种免锁机制\n\n    b.使用volatile修饰域相当于告诉虚拟机该域可能会被其他线程更新\n\n    c.因此每次使用该域就要重新计算，而不是使用寄存器中的值 \n\n    d.volatile不会提供任何原子操作，它也不能用来修饰final类型的变量 \n\n    例如： \n\n        在上面的例子当中，只需在account前面加上volatile修饰，即可实现线程同步。 \n\n    代码实例："]],[4743,4743],[4989,4989]]],[1521529441927,["gengmei_pxf@gengmei123.local",[[-1,4754," "],[1,4755," "],[-1,4759,"    "],[1,4763,"    *"],[-1,4794,"   "],[1,4797,"   "],[-1,4835,"   "],[1,4838,"   "],[-1,4867," \n\n   "],[1,4873," \n\n   "],[-1,4913," \n\n   "],[1,4919," \n\n   "],[-1,4923," \n\n       "],[1,4933," \n\n       "],[-1,4977," \n\n   "],[1,4983," \n\n    "]],[4763,4763],[4765,4765]]],[1521529452829,["gengmei_pxf@gengmei123.local",[[-1,4759,"    "]],[4762,4762],[4759,4759]]],[1521529458807,["gengmei_pxf@gengmei123.local",[[-1,4792,"   "],[1,4795,"*"]],[4792,4796],[4794,4794]]],[1521529461614,["gengmei_pxf@gengmei123.local",[[-1,4831,"   "],[1,4834,"*"]],[4831,4835],[4833,4833]]],[1521529464487,["gengmei_pxf@gengmei123.local",[[-1,4864,"   "],[1,4867,"*"]],[4864,4868],[4866,4866]]],[1521529467893,["gengmei_pxf@gengmei123.local",[[-1,4908,"    "]],[4908,4912],[4908,4908]]],[1521529470938,["gengmei_pxf@gengmei123.local",[[-1,4914,"        "]],[4914,4922],[4914,4914]]],[1521529534139,[null,[[-1,241,"\n"],[-1,395,""],[1,395,"\n"],[-1,2441,"\n"],[1,2445,"解"],[-1,2447,"解"],[1,2619,"\n"],[-1,3948," "],[1,3952,"解"],[-1,3954,"解"],[1,3955,"："],[-1,3959,"："],[1,3968,"0"],[-1,3969," "],[1,4029,"。"],[-1,4033,"。"],[1,4050,"d"],[-1,4051," "],[1,4065,"2"],[-1,4066," "],[1,4164,"d"],[-1,4165," "],[1,4171,"n"],[-1,4172," "],[1,4187,"2"],[-1,4188," "],[1,4196,"\n"],[-1,4201,"\n"],[1,4213,"\n"],[-1,4631," "],[1,4635,"解"],[-1,4637,"解"],[1,4638,"："],[-1,4640,"："],[1,4674,"s"],[-1,4675," "],[-1,4686," "],[1,4687," "],[1,4733,"r"],[-1,4734," "],[1,4742,"\n"],[1,4760," "],[-1,4791," "],[1,4793," "],[-1,4830," "],[1,4832," "],[-1,4863," "],[1,4865," "],[-1,4907," "],[1,4908,"例"],[-1,4913," "],[1,4914,"在"],[-1,4959," "]],[241,241],[4959,4959]]],[1521529534139,[null,[[1,241,"\n"],[1,394,""],[-1,394,"\n"],[1,2441,"\n"],[-1,2444,"解"],[1,2447,"解"],[-1,2618,"\n"],[1,3948," "],[-1,3951,"解"],[1,3954,"解"],[-1,3954,"："],[1,3959,"："],[-1,3967,"0"],[1,3969," "],[-1,4028,"。"],[1,4033,"。"],[-1,4049,"d"],[1,4051," "],[-1,4064,"2"],[1,4066," "],[-1,4163,"d"],[1,4165," "],[-1,4170,"n"],[1,4172," "],[-1,4186,"2"],[1,4188," "],[-1,4195,"\n"],[1,4201,"\n"],[-1,4212,"\n"],[1,4631," "],[-1,4634,"解"],[1,4637,"解"],[-1,4637,"："],[1,4640,"："],[-1,4673,"s"],[1,4675," "],[1,4685," "],[-1,4685," "],[-1,4732,"r"],[1,4734," "],[-1,4741,"\n"],[-1,4760," "],[1,4792," "],[-1,4793," "],[1,4831," "],[-1,4832," "],[1,4864," "],[-1,4865," "],[1,4908," "],[-1,4908,"例"],[1,4914," "],[-1,4914,"在"],[1,4960," "]],[4959,4959],[241,241]]],[1521529474754,["gengmei_pxf@gengmei123.local",[[-1,4960,"    "]],[4960,4964],[4960,4960]]],[1521529486252,["gengmei_pxf@gengmei123.local",[[1,4966,"\n"]],[4965,4965],[4966,4966]]],[1521529487357,["gengmei_pxf@gengmei123.local",[[-1,4966,"\n"],[1,4967,"```"]],[4966,4966],[4969,4969]]],[1521529487625,["gengmei_pxf@gengmei123.local",[[1,4969,"\n\n"]],[4969,4969],[4970,4970]]],[1521529487849,["gengmei_pxf@gengmei123.local",[[1,4971,"\n"]],[4970,4970],[4971,4971]]],[1521529488966,["gengmei_pxf@gengmei123.local",[[-1,4971,"\n"],[1,4972,"```"]],[4971,4971],[4974,4974]]],[1521529489878,["gengmei_pxf@gengmei123.local",[[1,4970,"        //只给出要修改的代码，其余代码与上同\n        class Bank {\n            //需要同步的变量加上volatile\n            private volatile int account = 100;\n \n            public int getAccount() {\n                return account;\n            }\n            //这里不再需要synchronized \n            public void save(int money) {\n                account += money;\n            }\n        ｝"]],[4970,4970],[5318,5318]]],[1521529527663,["gengmei_pxf@gengmei123.local",[[1,5322,"\n\n注：多线程中的非同步问题主要出现在对域的读写上，如果让域自身避免这个问题，则就不需要修改操作该域的方法。 \n\n    用final域，有锁保护的域和volatile域可以避免非同步的问题。"]],[5322,5322],[5417,5417]]],[1521529531268,["gengmei_pxf@gengmei123.local",[[-1,5375," \n\n   "],[1,5381," \n\n  "]],[5382,5382],[5381,5381]]],[1521529532517,["gengmei_pxf@gengmei123.local",[[-1,5378,"   "]],[5381,5381],[5378,5378]]],[1521529580294,[null,[[-1,241,"\n"],[-1,395,""],[1,395,"\n"],[-1,2441,"\n"],[1,2445,"解"],[-1,2447,"解"],[1,2619,"\n"],[-1,3948," "],[1,3952,"解"],[-1,3954,"解"],[1,3955,"："],[-1,3959,"："],[1,3968,"0"],[-1,3969," "],[1,4029,"。"],[-1,4033,"。"],[1,4050,"d"],[-1,4051," "],[1,4065,"2"],[-1,4066," "],[1,4164,"d"],[-1,4165," "],[1,4171,"n"],[-1,4172," "],[1,4187,"2"],[-1,4188," "],[1,4196,"\n"],[-1,4201,"\n"],[1,4213,"\n"],[-1,4631," "],[1,4635,"解"],[-1,4637,"解"],[1,4638,"："],[-1,4640,"："],[1,4674,"s"],[-1,4675," "],[-1,4686," "],[1,4687," "],[1,4733,"r"],[-1,4734," "],[1,4742,"\n"],[1,4760," "],[-1,4791," "],[1,4793," "],[-1,4830," "],[1,4832," "],[-1,4863," "],[1,4865," "],[-1,4907," "],[1,4908,"例"],[-1,4913," "],[1,4914,"在"],[-1,4959," "],[-1,5323,"\n"],[1,5375,"。"],[-1,5378," "],[1,5414,"\n"]],[241,241],[5415,5415]]],[1521529580294,[null,[[1,241,"\n"],[1,394,""],[-1,394,"\n"],[1,2441,"\n"],[-1,2444,"解"],[1,2447,"解"],[-1,2618,"\n"],[1,3948," "],[-1,3951,"解"],[1,3954,"解"],[-1,3954,"："],[1,3959,"："],[-1,3967,"0"],[1,3969," "],[-1,4028,"。"],[1,4033,"。"],[-1,4049,"d"],[1,4051," "],[-1,4064,"2"],[1,4066," "],[-1,4163,"d"],[1,4165," "],[-1,4170,"n"],[1,4172," "],[-1,4186,"2"],[1,4188," "],[-1,4195,"\n"],[1,4201,"\n"],[-1,4212,"\n"],[1,4631," "],[-1,4634,"解"],[1,4637,"解"],[-1,4637,"："],[1,4640,"："],[-1,4673,"s"],[1,4675," "],[1,4685," "],[-1,4685," "],[-1,4732,"r"],[1,4734," "],[-1,4741,"\n"],[-1,4760," "],[1,4792," "],[-1,4793," "],[1,4831," "],[-1,4832," "],[1,4864," "],[-1,4865," "],[1,4908," "],[-1,4908,"例"],[1,4914," "],[-1,4914,"在"],[1,4960," "],[1,5323,"\n"],[-1,5374,"。"],[1,5378," "],[-1,5413,"\n"]],[5415,5415],[241,241]]],[1521529535958,["gengmei_pxf@gengmei123.local",[[1,5323,"**"]],[5323,5323],[5325,5325]]],[1521529538006,["gengmei_pxf@gengmei123.local",[[1,5326,"**"]],[5326,5326],[5328,5328]]],[1521529572539,["gengmei_pxf@gengmei123.local",[[1,5418,"\n"]],[5417,5417],[5418,5418]]],[1521529572898,["gengmei_pxf@gengmei123.local",[[1,5419,"\n"]],[5418,5418],[5419,5419]]],[1521529573535,["gengmei_pxf@gengmei123.local",[[1,5419,"## 重入锁同步\n\n在 [Java](http://www.2cto.com/kf/ware/Java/)SE5.0中 新增了一个 java.util.concurrent 包来支持同步。 \n\nReentrantLock类是可重入、互斥、实现了Lock接口的锁，它与使用synchronized方法和快具有相同的基本行为和语义，并且扩展了其能力。 ReenreantLock类的常用方法有：\n\nReentrantLock() : 创建一个ReentrantLock实例 \nlock() : 获得锁 \nunlock() : 释放锁 \n\n注：ReentrantLock()还有一个可以创建公平锁的构造方法，但由于能大幅度降低程序运行效率，不推荐使用 例如："]],[5419,5419],[5745,5745]]],[1521529640295,[null,[[-1,241,"\n"],[-1,395,""],[1,395,"\n"],[-1,2441,"\n"],[1,2445,"解"],[-1,2447,"解"],[1,2619,"\n"],[-1,3948," "],[1,3952,"解"],[-1,3954,"解"],[1,3955,"："],[-1,3959,"："],[1,3968,"0"],[-1,3969," "],[1,4029,"。"],[-1,4033,"。"],[1,4050,"d"],[-1,4051," "],[1,4065,"2"],[-1,4066," "],[1,4164,"d"],[-1,4165," "],[1,4171,"n"],[-1,4172," "],[1,4187,"2"],[-1,4188," "],[1,4196,"\n"],[-1,4201,"\n"],[1,4213,"\n"],[-1,4631," "],[1,4635,"解"],[-1,4637,"解"],[1,4638,"："],[-1,4640,"："],[1,4674,"s"],[-1,4675," "],[-1,4686," "],[1,4687," "],[1,4733,"r"],[-1,4734," "],[1,4742,"\n"],[1,4760," "],[-1,4791," "],[1,4793," "],[-1,4830," "],[1,4832," "],[-1,4863," "],[1,4865," "],[-1,4907," "],[1,4908,"例"],[-1,4913," "],[1,4914,"在"],[-1,4959," "],[-1,5325,"\n"],[1,5326,"注"],[-1,5328,"注"],[1,5379,"。"],[-1,5382," "],[1,5418,"\n"]],[241,241],[5419,5419]]],[1521529640295,[null,[[1,241,"\n"],[1,394,""],[-1,394,"\n"],[1,2441,"\n"],[-1,2444,"解"],[1,2447,"解"],[-1,2618,"\n"],[1,3948," "],[-1,3951,"解"],[1,3954,"解"],[-1,3954,"："],[1,3959,"："],[-1,3967,"0"],[1,3969," "],[-1,4028,"。"],[1,4033,"。"],[-1,4049,"d"],[1,4051," "],[-1,4064,"2"],[1,4066," "],[-1,4163,"d"],[1,4165," "],[-1,4170,"n"],[1,4172," "],[-1,4186,"2"],[1,4188," "],[-1,4195,"\n"],[1,4201,"\n"],[-1,4212,"\n"],[1,4631," "],[-1,4634,"解"],[1,4637,"解"],[-1,4637,"："],[1,4640,"："],[-1,4673,"s"],[1,4675," "],[1,4685," "],[-1,4685," "],[-1,4732,"r"],[1,4734," "],[-1,4741,"\n"],[-1,4760," "],[1,4792," "],[-1,4793," "],[1,4831," "],[-1,4832," "],[1,4864," "],[-1,4865," "],[1,4908," "],[-1,4908,"例"],[1,4914," "],[-1,4914,"在"],[1,4960," "],[1,5325,"\n"],[-1,5325,"注"],[1,5328,"注"],[-1,5378,"。"],[1,5382," "],[-1,5417,"\n"]],[5419,5419],[241,241]]],[1521529606068,["gengmei_pxf@gengmei123.local",[[-1,5430," "],[1,5431," "],[-1,5478," "],[1,5479," "],[-1,5513," "],[1,5514," "],[-1,5592," "],[1,5593," "],[-1,5745,""],[1,5745,"\n"]],[5745,5745],[5746,5746]]],[1521529606870,["gengmei_pxf@gengmei123.local",[[-1,5746,"\n"],[1,5747,"```"]],[5746,5746],[5749,5749]]],[1521529607147,["gengmei_pxf@gengmei123.local",[[1,5749,"\n\n"]],[5749,5749],[5750,5750]]],[1521529607340,["gengmei_pxf@gengmei123.local",[[1,5751,"\n"]],[5750,5750],[5751,5751]]],[1521529607973,["gengmei_pxf@gengmei123.local",[[-1,5751,"\n"],[1,5752,"```"]],[5751,5751],[5754,5754]]],[1521529609054,["gengmei_pxf@gengmei123.local",[[1,5750,"        class Bank {\n            private int account = 100;\n            //需要声明这个锁\n            private Lock lock = new ReentrantLock();\n            public int getAccount() {\n                return account;\n            }\n            //这里不再需要synchronized \n            public void save(int money) {\n                lock.lock();\n                try{\n                    account += money;\n                }finally{\n                    lock.unlock();\n                }\n            }\n        ｝"]],[5750,5750],[6235,6235]]],[1521529626951,["gengmei_pxf@gengmei123.local",[[1,6239,"\n\n**注：关于Lock对象和synchronized关键字的选择：** \n\n        a.最好两个都不用，使用一种java.util.concurrent包提供的机制，能够帮助用户处理所有与锁相关的代码。 \n\n        b.如果synchronized关键字能满足用户的需求，就用synchronized，因为它能简化代码 \n\n        c.如果需要更高级的功能，就用ReentrantLock类，此时要注意及时释放锁，否则会出现死锁，通常在finally代码释放锁 \n\n## 局部变量同步\n\n    如果使用ThreadLocal管理变量，则每一个使用该变量的线程都获得该变量的副本，副本之间相互独立，这样每一个线程都可以随意修改自己的变量副本，而不会对其他线程产生影响。 ThreadLocal 类的常用方法：\n\nThreadLocal() : 创建一个线程本地变量 \nget() : 返回此线程局部变量的当前线程副本中的值 \ninitialValue() : 返回此线程局部变量的当前线程的\"初始值\" set(T value) : 将此线程局部变量的当前线程副本中的值设置为value\n\n    例如："]],[6239,6239],[6752,6752]]],[1521529700302,[null,[[-1,241,"\n"],[-1,395,""],[1,395,"\n"],[-1,2441,"\n"],[1,2445,"解"],[-1,2447,"解"],[1,2619,"\n"],[-1,3948," "],[1,3952,"解"],[-1,3954,"解"],[1,3955,"："],[-1,3959,"："],[1,3968,"0"],[-1,3969," "],[1,4029,"。"],[-1,4033,"。"],[1,4050,"d"],[-1,4051," "],[1,4065,"2"],[-1,4066," "],[1,4164,"d"],[-1,4165," "],[1,4171,"n"],[-1,4172," "],[1,4187,"2"],[-1,4188," "],[1,4196,"\n"],[-1,4201,"\n"],[1,4213,"\n"],[-1,4631," "],[1,4635,"解"],[-1,4637,"解"],[1,4638,"："],[-1,4640,"："],[1,4674,"s"],[-1,4675," "],[-1,4686," "],[1,4687," "],[1,4733,"r"],[-1,4734," "],[1,4742,"\n"],[1,4760," "],[-1,4791," "],[1,4793," "],[-1,4830," "],[1,4832," "],[-1,4863," "],[1,4865," "],[-1,4907," "],[1,4908,"例"],[-1,4913," "],[1,4914,"在"],[-1,4959," "],[-1,5325,"\n"],[1,5326,"注"],[-1,5328,"注"],[1,5379,"。"],[-1,5382," "],[1,5418,"\n"],[-1,6240,"\n"],[-1,6753,""],[1,6753,"\n"]],[241,241],[6754,6754]]],[1521529700302,[null,[[1,241,"\n"],[1,394,""],[-1,394,"\n"],[1,2441,"\n"],[-1,2444,"解"],[1,2447,"解"],[-1,2618,"\n"],[1,3948," "],[-1,3951,"解"],[1,3954,"解"],[-1,3954,"："],[1,3959,"："],[-1,3967,"0"],[1,3969," "],[-1,4028,"。"],[1,4033,"。"],[-1,4049,"d"],[1,4051," "],[-1,4064,"2"],[1,4066," "],[-1,4163,"d"],[1,4165," "],[-1,4170,"n"],[1,4172," "],[-1,4186,"2"],[1,4188," "],[-1,4195,"\n"],[1,4201,"\n"],[-1,4212,"\n"],[1,4631," "],[-1,4634,"解"],[1,4637,"解"],[-1,4637,"："],[1,4640,"："],[-1,4673,"s"],[1,4675," "],[1,4685," "],[-1,4685," "],[-1,4732,"r"],[1,4734," "],[-1,4741,"\n"],[-1,4760," "],[1,4792," "],[-1,4793," "],[1,4831," "],[-1,4832," "],[1,4864," "],[-1,4865," "],[1,4908," "],[-1,4908,"例"],[1,4914," "],[-1,4914,"在"],[1,4960," "],[1,5325,"\n"],[-1,5325,"注"],[1,5328,"注"],[-1,5378,"。"],[1,5382," "],[-1,5417,"\n"],[1,6240,"\n"],[1,6752,""],[-1,6752,"\n"]],[6754,6754],[241,241]]],[1521529655674,["gengmei_pxf@gengmei123.local",[[-1,6274," \n\n       "],[1,6284," \n\n       "],[-1,6344," \n\n       "],[1,6354," \n\n       "],[-1,6406," \n\n       "],[1,6416," \n\n       "],[-1,6481," "],[1,6482," "],[-1,6495,"    "],[1,6499,"    "],[1,6607,"*"],[-1,6745,"   "],[1,6748,"    "]],[6607,6607],[6609,6609]]],[1521529658948,["gengmei_pxf@gengmei123.local",[[1,6637,"* "]],[6637,6637],[6639,6639]]],[1521529660588,["gengmei_pxf@gengmei123.local",[[1,6668,"* "]],[6668,6668],[6670,6670]]],[1521529661740,["gengmei_pxf@gengmei123.local",[[1,6708,"* "]],[6708,6708],[6710,6710]]],[1521529663572,["gengmei_pxf@gengmei123.local",[[-1,6708,"* "]],[6710,6710],[6708,6708]]],[1521529665901,["gengmei_pxf@gengmei123.local",[[1,6708,"* "]],[6708,6708],[6710,6710]]],[1521529666895,["gengmei_pxf@gengmei123.local",[[-1,6708,"* "]],[6710,6710],[6708,6708]]],[1521529667605,["gengmei_pxf@gengmei123.local",[[1,6708," "]],[6708,6708],[6709,6709]]],[1521529669196,["gengmei_pxf@gengmei123.local",[[1,6745,"* "]],[6745,6745],[6747,6747]]],[1521529669995,["gengmei_pxf@gengmei123.local",[[-1,6745,"* "]],[6747,6747],[6745,6745]]],[1521529674682,["gengmei_pxf@gengmei123.local",[[-1,6752,"    "]],[6756,6756],[6752,6752]]],[1521529684290,["gengmei_pxf@gengmei123.local",[[1,6707,"\n"]],[6707,6707],[6708,6708]]],[1521529687805,["gengmei_pxf@gengmei123.local",[[1,6708,"*"]],[6708,6708],[6709,6709]]],[1521529690840,["gengmei_pxf@gengmei123.local",[[-1,6710," "]],[6711,6711],[6710,6710]]],[1521529760306,[null,[[-1,241,"\n"],[-1,395,""],[1,395,"\n"],[-1,2441,"\n"],[1,2445,"解"],[-1,2447,"解"],[1,2619,"\n"],[-1,3948," "],[1,3952,"解"],[-1,3954,"解"],[1,3955,"："],[-1,3959,"："],[1,3968,"0"],[-1,3969," "],[1,4029,"。"],[-1,4033,"。"],[1,4050,"d"],[-1,4051," "],[1,4065,"2"],[-1,4066," "],[1,4164,"d"],[-1,4165," "],[1,4171,"n"],[-1,4172," "],[1,4187,"2"],[-1,4188," "],[1,4196,"\n"],[-1,4201,"\n"],[1,4213,"\n"],[-1,4631," "],[1,4635,"解"],[-1,4637,"解"],[1,4638,"："],[-1,4640,"："],[1,4674,"s"],[-1,4675," "],[-1,4686," "],[1,4687," "],[1,4733,"r"],[-1,4734," "],[1,4742,"\n"],[1,4760," "],[-1,4791," "],[1,4793," "],[-1,4830," "],[1,4832," "],[-1,4863," "],[1,4865," "],[-1,4907," "],[1,4908,"例"],[-1,4913," "],[1,4914,"在"],[-1,4959," "],[-1,5325,"\n"],[1,5326,"注"],[-1,5328,"注"],[1,5379,"。"],[-1,5382," "],[1,5418,"\n"],[-1,6240,"\n"],[1,6274,"*"],[-1,6284," "],[1,6344,"。"],[-1,6354," "],[1,6406,"码"],[-1,6416," "],[1,6481,"锁"],[-1,6482," "],[1,6495,"\n"],[-1,6499," "],[-1,6607,"*\n"],[1,6609,"\n* "],[-1,6752,"  "],[1,6754,"\n"],[1,6757,"\n"]],[241,241],[6758,6758]]],[1521529760306,[null,[[1,241,"\n"],[1,394,""],[-1,394,"\n"],[1,2441,"\n"],[-1,2444,"解"],[1,2447,"解"],[-1,2618,"\n"],[1,3948," "],[-1,3951,"解"],[1,3954,"解"],[-1,3954,"："],[1,3959,"："],[-1,3967,"0"],[1,3969," "],[-1,4028,"。"],[1,4033,"。"],[-1,4049,"d"],[1,4051," "],[-1,4064,"2"],[1,4066," "],[-1,4163,"d"],[1,4165," "],[-1,4170,"n"],[1,4172," "],[-1,4186,"2"],[1,4188," "],[-1,4195,"\n"],[1,4201,"\n"],[-1,4212,"\n"],[1,4631," "],[-1,4634,"解"],[1,4637,"解"],[-1,4637,"："],[1,4640,"："],[-1,4673,"s"],[1,4675," "],[1,4685," "],[-1,4685," "],[-1,4732,"r"],[1,4734," "],[-1,4741,"\n"],[-1,4760," "],[1,4792," "],[-1,4793," "],[1,4831," "],[-1,4832," "],[1,4864," "],[-1,4865," "],[1,4908," "],[-1,4908,"例"],[1,4914," "],[-1,4914,"在"],[1,4960," "],[1,5325,"\n"],[-1,5325,"注"],[1,5328,"注"],[-1,5378,"。"],[1,5382," "],[-1,5417,"\n"],[1,6240,"\n"],[-1,6273,"*"],[1,6284," "],[-1,6343,"。"],[1,6354," "],[-1,6405,"码"],[1,6416," "],[-1,6480,"锁"],[1,6482," "],[-1,6494,"\n"],[1,6499," "],[1,6606,"*\n"],[-1,6606,"\n* "],[1,6752,"  "],[-1,6752,"\n"],[-1,6756,"\n"]],[6758,6758],[241,241]]],[1521529711184,["gengmei_pxf@gengmei123.local",[[1,6757,"\n"]],[6756,6756],[6757,6757]]],[1521529712210,["gengmei_pxf@gengmei123.local",[[-1,6757,"\n"],[1,6758,"```"]],[6757,6757],[6760,6760]]],[1521529712478,["gengmei_pxf@gengmei123.local",[[1,6760,"\n\n"]],[6760,6760],[6761,6761]]],[1521529712709,["gengmei_pxf@gengmei123.local",[[1,6762,"\n"]],[6761,6761],[6762,6762]]],[1521529713370,["gengmei_pxf@gengmei123.local",[[-1,6762,"\n"],[1,6763,"```"]],[6762,6762],[6765,6765]]],[1521529714338,["gengmei_pxf@gengmei123.local",[[1,6761,"public class Bank{\n            //使用ThreadLocal类管理共享变量account\n            private static ThreadLocal<Integer> account = new ThreadLocal<Integer>(){\n                @Override\n                protected Integer initialValue(){\n                    return 100;\n                }\n            };\n            public void save(int money){\n                account.set(account.get()+money);\n            }\n            public int getAccount(){\n                return account.get();\n            }\n        }"]],[6761,6761],[7252,7252]]],[1521529732678,["gengmei_pxf@gengmei123.local",[[1,7256,"\n\n**注：ThreadLocal与同步机制 **\n\n        a.ThreadLocal与同步机制都是为了解决多线程中相同变量的访问冲突问题。\n\n        b.前者采用以\"空间换时间\"的方法，后者采用以\"时间换空间\"的方式\n\n## 阻塞队列同步\n\n前面同步方式都是在底层实现的线程同步，但是我们在实际开发当中，应当尽量远离底层结构。 使用javaSE5.0版本中新增的java.util.concurrent包将有助于简化开发。 本小节主要是使用LinkedBlockingQueue<E>来实现线程的同步 LinkedBlockingQueue<E>是一个基于已连接节点的，范围任意的blocking queue。 队列是先进先出的顺序（FIFO），关于队列以后会详细讲解~LinkedBlockingQueue 类常用方法 LinkedBlockingQueue() : 创建一个容量为Integer.MAX_VALUE的LinkedBlockingQueue put(E e) : 在队尾添加一个元素，如果队列满则阻塞 size() : 返回队列中的元素个数 take() : 移除并返回队头元素，如果队列空则阻塞代码实例： 实现商家生产商品和买卖商品的同步\n\n注：BlockingQueue<E>定义了阻塞队列的常用方法，尤其是三种添加元素的方法，我们要多加注意，当队列满时：\n\n　　add()方法会抛出异常\n\n　　offer()方法返回false\n\n　　put()方法会阻塞\n\n## 原子变量同步\n\n需要使用线程同步的根本原因在于对普通变量的操作不是原子的。\n\n那么什么是原子操作呢？原子操作就是指将读取变量值、修改变量值、保存变量值看成一个整体来操作即-这几种行为要么同时完成，要么都不完成。在java的**util.concurrent.atomic包中提供了创建了原子类型变量的工具类**，使用该类可以简化线程同步。其中**AtomicInteger** 表可以用原子方式更新int的值，可用在应用程序中(如以原子方式增加的计数器)，但不能用于替换Integer；可扩展Number，允许那些处理机遇数字类的工具和实用工具进行统一访问。\n\n**AtomicInteger类常用方法：**\n\nAtomicInteger(int initialValue) : 创建具有给定初始值的新的\n\nAtomicIntegeraddAddGet(int dalta) : 以原子方式将给定值与当前值相加\n\nget() : 获取当前值\n\n**代码实例：**\n\n**[java]** [view plain](http://blog.csdn.net/csdn_aiyang/article/details/65442540# \"view plain\") [copy](http://blog.csdn.net/csdn_aiyang/article/details/65442540# \"copy\")\n\n1.  class Bank {  \n2.  private AtomicInteger account = new AtomicInteger(100);  \n3.  public AtomicInteger getAccount() {  \n4.  return account;   \n5.  }   \n6.  public void save(int money) {  \n7.  account.addAndGet(money);  \n8.  }  \n9.  }  \n\n**补充--原子操作主要有：**　　\n\n对于引用变量和大多数原始变量(long和double除外)的读写操作；　　\n\n对于所有使用volatile修饰的变量(包括long和double)的读写操作。"]],[7256,7256],[8853,8853]]],[1521529738136,["gengmei_pxf@gengmei123.local",[[-1,7277," "],[-1,7282,"       "],[1,7289,"       "],[-1,7332,"       "],[1,7339,"       "],[-1,7625," "],[1,7626," "],[-1,7777," "],[1,7778," "],[-1,8097," "],[1,8098," "],[-1,8352," "],[1,8353," "],[-1,8438," "],[1,8439," "],[-1,8523," "],[1,8524," "],[-1,8528," {  "],[1,8532," {  "],[-1,8544," "],[1,8545," "],[-1,8558," "],[1,8559," "],[-1,8566," = new "],[1,8573," = new "],[-1,8592,"  "],[1,8594,"  "],[-1,8605," "],[1,8606," "],[-1,8619," "],[1,8620," "],[-1,8632," {  "],[1,8636," {  "],[-1,8647," "],[1,8648," "],[-1,8656,"   "],[1,8659,"   "],[-1,8665,"   "],[1,8668,"   "],[-1,8679," "],[1,8680," "],[-1,8684," "],[1,8685," "],[-1,8693," "],[1,8694," "],[-1,8700," {  "],[1,8704," {  "],[-1,8734,"  "],[1,8736,"  "],[-1,8742,"  "],[1,8744,"  "],[-1,8750,"  "],[1,8752,"  "]],[7278,7278],[7277,7277]]],[1521529755231,["gengmei_pxf@gengmei123.local",[[-1,8341,"**[java]** [view plain](http://blog.csdn.net/csdn_aiyang/article/details/65442540# \"view plain\") [copy](http://blog.csdn.net/csdn_aiyang/article/details/65442540# \"copy\")\n\n1.  class Bank {  \n2.  private AtomicInteger account = new AtomicInteger(100);  \n3.  public AtomicInteger getAccount() {  \n4.  return account;   \n5.  }   \n6.  public void save(int money) {  \n7.  account.addAndGet(money);  \n8.  }  \n9.  } "]],[8341,8750],[8341,8341]]],[1521529758217,["gengmei_pxf@gengmei123.local",[[1,8341,"```"]],[8341,8341],[8344,8344]]],[1521529758488,["gengmei_pxf@gengmei123.local",[[1,8344,"\n"]],[8344,8344],[8345,8345]]],[1521529758750,["gengmei_pxf@gengmei123.local",[[1,8345,"\n"]],[8345,8345],[8346,8346]]],[1521529759400,["gengmei_pxf@gengmei123.local",[[1,8346,"```"]],[8346,8346],[8349,8349]]],[1521529813696,[null,[[-1,241,"\n"],[-1,395,""],[1,395,"\n"],[-1,2441,"\n"],[1,2445,"解"],[-1,2447,"解"],[1,2619,"\n"],[-1,3948," "],[1,3952,"解"],[-1,3954,"解"],[1,3955,"："],[-1,3959,"："],[1,3968,"0"],[-1,3969," "],[1,4029,"。"],[-1,4033,"。"],[1,4050,"d"],[-1,4051," "],[1,4065,"2"],[-1,4066," "],[1,4164,"d"],[-1,4165," "],[1,4171,"n"],[-1,4172," "],[1,4187,"2"],[-1,4188," "],[1,4196,"\n"],[-1,4201,"\n"],[1,4213,"\n"],[-1,4631," "],[1,4635,"解"],[-1,4637,"解"],[1,4638,"："],[-1,4640,"："],[1,4674,"s"],[-1,4675," "],[-1,4686," "],[1,4687," "],[1,4733,"r"],[-1,4734," "],[1,4742,"\n"],[1,4760," "],[-1,4791," "],[1,4793," "],[-1,4830," "],[1,4832," "],[-1,4863," "],[1,4865," "],[-1,4907," "],[1,4908,"例"],[-1,4913," "],[1,4914,"在"],[-1,4959," "],[-1,5325,"\n"],[1,5326,"注"],[-1,5328,"注"],[1,5379,"。"],[-1,5382," "],[1,5418,"\n"],[-1,6240,"\n"],[1,6274,"*"],[-1,6284," "],[1,6344,"。"],[-1,6354," "],[1,6406,"码"],[-1,6416," "],[1,6481,"锁"],[-1,6482," "],[1,6495,"\n"],[-1,6499," "],[-1,6607,"*\n"],[1,6609,"\n* "],[-1,6752,"  "],[1,6754,"\n"],[1,6757,"\n"],[-1,7257,"\n"],[-1,7277," "],[1,7278,"制"],[1,7280,"\n"],[-1,7288," "],[1,7331,"\n"],[-1,7338," "],[1,7624,"法"],[-1,7625," "],[1,7776,"："],[-1,7777," "],[1,8096,"*"],[-1,8097," "],[1,8341,"\n"],[-1,8350," "],[1,8351,""],[-1,8452,""],[1,8452,"\n"]],[241,241],[8453,8453]]],[1521529813696,[null,[[1,241,"\n"],[1,394,""],[-1,394,"\n"],[1,2441,"\n"],[-1,2444,"解"],[1,2447,"解"],[-1,2618,"\n"],[1,3948," "],[-1,3951,"解"],[1,3954,"解"],[-1,3954,"："],[1,3959,"："],[-1,3967,"0"],[1,3969," "],[-1,4028,"。"],[1,4033,"。"],[-1,4049,"d"],[1,4051," "],[-1,4064,"2"],[1,4066," "],[-1,4163,"d"],[1,4165," "],[-1,4170,"n"],[1,4172," "],[-1,4186,"2"],[1,4188," "],[-1,4195,"\n"],[1,4201,"\n"],[-1,4212,"\n"],[1,4631," "],[-1,4634,"解"],[1,4637,"解"],[-1,4637,"："],[1,4640,"："],[-1,4673,"s"],[1,4675," "],[1,4685," "],[-1,4685," "],[-1,4732,"r"],[1,4734," "],[-1,4741,"\n"],[-1,4760," "],[1,4792," "],[-1,4793," "],[1,4831," "],[-1,4832," "],[1,4864," "],[-1,4865," "],[1,4908," "],[-1,4908,"例"],[1,4914," "],[-1,4914,"在"],[1,4960," "],[1,5325,"\n"],[-1,5325,"注"],[1,5328,"注"],[-1,5378,"。"],[1,5382," "],[-1,5417,"\n"],[1,6240,"\n"],[-1,6273,"*"],[1,6284," "],[-1,6343,"。"],[1,6354," "],[-1,6405,"码"],[1,6416," "],[-1,6480,"锁"],[1,6482," "],[-1,6494,"\n"],[1,6499," "],[1,6606,"*\n"],[-1,6606,"\n* "],[1,6752,"  "],[-1,6752,"\n"],[-1,6756,"\n"],[1,7257,"\n"],[1,7276," "],[-1,7276,"制"],[-1,7279,"\n"],[1,7288," "],[-1,7330,"\n"],[1,7338," "],[-1,7623,"法"],[1,7625," "],[-1,7775,"："],[1,7777," "],[-1,8095,"*"],[1,8097," "],[-1,8340,"\n"],[1,8350," "],[-1,8350,""],[1,8451,""],[-1,8451,"\n"]],[8453,8453],[241,241]]],[1521529771343,["gengmei_pxf@gengmei123.local",[[1,8345,"class Bank {\n    private AtomicInteger account = new AtomicInteger(100);\n    public AtomicInteger getAccount() {\n        return account; \n    } \n    public void save(int money) {\n        account.addAndGet(money);\n    }\n}"]],[8345,8345],[8565,8565]]],[1521529776230,["gengmei_pxf@gengmei123.local",[[-1,8562,"}"]],[8563,8563],[8562,8562]]],[1521529777165,["gengmei_pxf@gengmei123.local",[[1,8562,"}"]],[8562,8562],[8563,8563]]],[1521529778582,["gengmei_pxf@gengmei123.local",[[-1,8563,"\n"]],[8564,8564],[8563,8563]]],[1521529779965,["gengmei_pxf@gengmei123.local",[[1,8563,"\n"]],[8563,8563],[8564,8564]]],[1521529781557,["gengmei_pxf@gengmei123.local",[[-1,8565,"\n"]],[8566,8566],[8565,8565]]],[1521529785806,["gengmei_pxf@gengmei123.local",[[-1,8340,"\n"]],[8340,8340],[8339,8339]]],[1521529789949,["gengmei_pxf@gengmei123.local",[[1,8564,"\n"]],[8564,8564],[8565,8565]]],[1521529792741,["gengmei_pxf@gengmei123.local",[[-1,8562,"\n"]],[8563,8563],[8562,8562]]],[1521529795998,["gengmei_pxf@gengmei123.local",[[-1,8562,"}"]],[8563,8563],[8562,8562]]],[1521529797869,["gengmei_pxf@gengmei123.local",[[-1,8562,"\n"]],[8563,8563],[8562,8562]]],[1521529799958,["gengmei_pxf@gengmei123.local",[[1,8562,"\n"]],[8562,8562],[8563,8563]]],[1521529803821,["gengmei_pxf@gengmei123.local",[[-1,8568,"\n"]],[8568,8568],[8567,8567]]],[1521529805885,["gengmei_pxf@gengmei123.local",[[-1,8563,"``` "]],[8567,8567],[8563,8563]]],[1521529806237,["gengmei_pxf@gengmei123.local",[[-1,8563,"\n"]],[8563,8563],[8562,8562]]],[1521529807213,["gengmei_pxf@gengmei123.local",[[-1,8561,"}"]],[8562,8562],[8561,8561]]],[1521529808027,["gengmei_pxf@gengmei123.local",[[1,8561,"}"]],[8561,8561],[8562,8562]]],[1521529808523,["gengmei_pxf@gengmei123.local",[[1,8563,"\n"]],[8562,8562],[8563,8563]]],[1521529809197,["gengmei_pxf@gengmei123.local",[[1,8563,"``` "]],[8563,8563],[8567,8567]]],[1521529809869,["gengmei_pxf@gengmei123.local",[[-1,8566," "]],[8567,8567],[8566,8566]]],[1521529830697,[null,[[-1,241,"\n"],[-1,395,""],[1,395,"\n"],[-1,2441,"\n"],[1,2445,"解"],[-1,2447,"解"],[1,2619,"\n"],[-1,3948," "],[1,3952,"解"],[-1,3954,"解"],[1,3955,"："],[-1,3959,"："],[1,3968,"0"],[-1,3969," "],[1,4029,"。"],[-1,4033,"。"],[1,4050,"d"],[-1,4051," "],[1,4065,"2"],[-1,4066," "],[1,4164,"d"],[-1,4165," "],[1,4171,"n"],[-1,4172," "],[1,4187,"2"],[-1,4188," "],[1,4196,"\n"],[-1,4201,"\n"],[1,4213,"\n"],[-1,4631," "],[1,4635,"解"],[-1,4637,"解"],[1,4638,"："],[-1,4640,"："],[1,4674,"s"],[-1,4675," "],[-1,4686," "],[1,4687," "],[1,4733,"r"],[-1,4734," "],[1,4742,"\n"],[1,4760," "],[-1,4791," "],[1,4793," "],[-1,4830," "],[1,4832," "],[-1,4863," "],[1,4865," "],[-1,4907," "],[1,4908,"例"],[-1,4913," "],[1,4914,"在"],[-1,4959," "],[-1,5325,"\n"],[1,5326,"注"],[-1,5328,"注"],[1,5379,"。"],[-1,5382," "],[1,5418,"\n"],[-1,6240,"\n"],[1,6274,"*"],[-1,6284," "],[1,6344,"。"],[-1,6354," "],[1,6406,"码"],[-1,6416," "],[1,6481,"锁"],[-1,6482," "],[1,6495,"\n"],[-1,6499," "],[-1,6607,"*\n"],[1,6609,"\n* "],[-1,6752,"  "],[1,6754,"\n"],[1,6757,"\n"],[-1,7257,"\n"],[-1,7277," "],[1,7278,"制"],[1,7280,"\n"],[-1,7288," "],[1,7331,"\n"],[-1,7338," "],[1,7624,"法"],[-1,7625," "],[1,7776,"："],[-1,7777," "],[1,8096,"*"],[-1,8097," "],[-1,8340,""],[1,8340,"\n"],[-1,8567,"\n"],[-1,8667,""],[1,8667,"\n"]],[241,241],[8668,8668]]],[1521529830697,[null,[[1,241,"\n"],[1,394,""],[-1,394,"\n"],[1,2441,"\n"],[-1,2444,"解"],[1,2447,"解"],[-1,2618,"\n"],[1,3948," "],[-1,3951,"解"],[1,3954,"解"],[-1,3954,"："],[1,3959,"："],[-1,3967,"0"],[1,3969," "],[-1,4028,"。"],[1,4033,"。"],[-1,4049,"d"],[1,4051," "],[-1,4064,"2"],[1,4066," "],[-1,4163,"d"],[1,4165," "],[-1,4170,"n"],[1,4172," "],[-1,4186,"2"],[1,4188," "],[-1,4195,"\n"],[1,4201,"\n"],[-1,4212,"\n"],[1,4631," "],[-1,4634,"解"],[1,4637,"解"],[-1,4637,"："],[1,4640,"："],[-1,4673,"s"],[1,4675," "],[1,4685," "],[-1,4685," "],[-1,4732,"r"],[1,4734," "],[-1,4741,"\n"],[-1,4760," "],[1,4792," "],[-1,4793," "],[1,4831," "],[-1,4832," "],[1,4864," "],[-1,4865," "],[1,4908," "],[-1,4908,"例"],[1,4914," "],[-1,4914,"在"],[1,4960," "],[1,5325,"\n"],[-1,5325,"注"],[1,5328,"注"],[-1,5378,"。"],[1,5382," "],[-1,5417,"\n"],[1,6240,"\n"],[-1,6273,"*"],[1,6284," "],[-1,6343,"。"],[1,6354," "],[-1,6405,"码"],[1,6416," "],[-1,6480,"锁"],[1,6482," "],[-1,6494,"\n"],[1,6499," "],[1,6606,"*\n"],[-1,6606,"\n* "],[1,6752,"  "],[-1,6752,"\n"],[-1,6756,"\n"],[1,7257,"\n"],[1,7276," "],[-1,7276,"制"],[-1,7279,"\n"],[1,7288," "],[-1,7330,"\n"],[1,7338," "],[-1,7623,"法"],[1,7625," "],[-1,7775,"："],[1,7777," "],[-1,8095,"*"],[1,8097," "],[1,8339,""],[-1,8339,"\n"],[1,8567,"\n"],[1,8666,""],[-1,8666,"\n"]],[8668,8668],[241,241]]],[1521529820356,["gengmei_pxf@gengmei123.local",[[1,7958,"\n"]],[7958,7958],[7959,7959]]],[1521529820788,["gengmei_pxf@gengmei123.local",[[1,7959,"\n"]],[7959,7959],[7960,7960]]],[1521529823398,["gengmei_pxf@gengmei123.local",[[1,7947,"**"]],[7947,7947],[7949,7949]]],[1521529826439,["gengmei_pxf@gengmei123.local",[[1,7959,"**"]],[7959,7959],[7961,7961]]],[1521529876452,[null,[[-1,241,"\n"],[-1,395,""],[1,395,"\n"],[-1,2441,"\n"],[1,2445,"解"],[-1,2447,"解"],[1,2619,"\n"],[-1,3948," "],[1,3952,"解"],[-1,3954,"解"],[1,3955,"："],[-1,3959,"："],[1,3968,"0"],[-1,3969," "],[1,4029,"。"],[-1,4033,"。"],[1,4050,"d"],[-1,4051," "],[1,4065,"2"],[-1,4066," "],[1,4164,"d"],[-1,4165," "],[1,4171,"n"],[-1,4172," "],[1,4187,"2"],[-1,4188," "],[1,4196,"\n"],[-1,4201,"\n"],[1,4213,"\n"],[-1,4631," "],[1,4635,"解"],[-1,4637,"解"],[1,4638,"："],[-1,4640,"："],[1,4674,"s"],[-1,4675," "],[-1,4686," "],[1,4687," "],[1,4733,"r"],[-1,4734," "],[1,4742,"\n"],[1,4760," "],[-1,4791," "],[1,4793," "],[-1,4830," "],[1,4832," "],[-1,4863," "],[1,4865," "],[-1,4907," "],[1,4908,"例"],[-1,4913," "],[1,4914,"在"],[-1,4959," "],[-1,5325,"\n"],[1,5326,"注"],[-1,5328,"注"],[1,5379,"。"],[-1,5382," "],[1,5418,"\n"],[-1,6240,"\n"],[1,6274,"*"],[-1,6284," "],[1,6344,"。"],[-1,6354," "],[1,6406,"码"],[-1,6416," "],[1,6481,"锁"],[-1,6482," "],[1,6495,"\n"],[-1,6499," "],[-1,6607,"*\n"],[1,6609,"\n* "],[-1,6752,"  "],[1,6754,"\n"],[1,6757,"\n"],[-1,7257,"\n"],[-1,7277," "],[1,7278,"制"],[1,7280,"\n"],[-1,7288," "],[1,7331,"\n"],[-1,7338," "],[1,7624,"法"],[-1,7625," "],[1,7776,"："],[-1,7777," "],[1,7947,"\n"],[-1,7949,"\n"],[1,7959,"呢"],[-1,7961,"呢"],[1,7962,"？"],[-1,7964,"？"],[1,8102,"*"],[-1,8103," "],[-1,8346,""],[1,8346,"\n"],[-1,8573,"\n"],[-1,8673,""],[1,8673,"\n"]],[241,241],[8674,8674]]],[1521529876452,[null,[[1,241,"\n"],[1,394,""],[-1,394,"\n"],[1,2441,"\n"],[-1,2444,"解"],[1,2447,"解"],[-1,2618,"\n"],[1,3948," "],[-1,3951,"解"],[1,3954,"解"],[-1,3954,"："],[1,3959,"："],[-1,3967,"0"],[1,3969," "],[-1,4028,"。"],[1,4033,"。"],[-1,4049,"d"],[1,4051," "],[-1,4064,"2"],[1,4066," "],[-1,4163,"d"],[1,4165," "],[-1,4170,"n"],[1,4172," "],[-1,4186,"2"],[1,4188," "],[-1,4195,"\n"],[1,4201,"\n"],[-1,4212,"\n"],[1,4631," "],[-1,4634,"解"],[1,4637,"解"],[-1,4637,"："],[1,4640,"："],[-1,4673,"s"],[1,4675," "],[1,4685," "],[-1,4685," "],[-1,4732,"r"],[1,4734," "],[-1,4741,"\n"],[-1,4760," "],[1,4792," "],[-1,4793," "],[1,4831," "],[-1,4832," "],[1,4864," "],[-1,4865," "],[1,4908," "],[-1,4908,"例"],[1,4914," "],[-1,4914,"在"],[1,4960," "],[1,5325,"\n"],[-1,5325,"注"],[1,5328,"注"],[-1,5378,"。"],[1,5382," "],[-1,5417,"\n"],[1,6240,"\n"],[-1,6273,"*"],[1,6284," "],[-1,6343,"。"],[1,6354," "],[-1,6405,"码"],[1,6416," "],[-1,6480,"锁"],[1,6482," "],[-1,6494,"\n"],[1,6499," "],[1,6606,"*\n"],[-1,6606,"\n* "],[1,6752,"  "],[-1,6752,"\n"],[-1,6756,"\n"],[1,7257,"\n"],[1,7276," "],[-1,7276,"制"],[-1,7279,"\n"],[1,7288," "],[-1,7330,"\n"],[1,7338," "],[-1,7623,"法"],[1,7625," "],[-1,7775,"："],[1,7777," "],[-1,7946,"\n"],[1,7949,"\n"],[-1,7958,"呢"],[1,7961,"呢"],[-1,7961,"？"],[1,7964,"？"],[-1,8101,"*"],[1,8103," "],[1,8345,""],[-1,8345,"\n"],[1,8573,"\n"],[1,8672,""],[-1,8672,"\n"]],[8674,8674],[241,241]]],[1521529856066,["gengmei_pxf@gengmei123.local",[[1,7475,"\n"]],[7475,7475],[7476,7476]]],[1521529856547,["gengmei_pxf@gengmei123.local",[[1,7476,"\n"]],[7476,7476],[7477,7477]]],[1521529858035,["gengmei_pxf@gengmei123.local",[[-1,7477," "]],[7478,7478],[7477,7477]]],[1521529865738,["gengmei_pxf@gengmei123.local",[[1,7570,"\n"]],[7570,7570],[7571,7571]]],[1521529867451,["gengmei_pxf@gengmei123.local",[[-1,7571," "]],[7572,7572],[7571,7571]]],[1521529868754,["gengmei_pxf@gengmei123.local",[[1,7571,"\n"]],[7571,7571],[7572,7572]]],[1521529936456,[null,[[-1,241,"\n"],[-1,395,""],[1,395,"\n"],[-1,2441,"\n"],[1,2445,"解"],[-1,2447,"解"],[1,2619,"\n"],[-1,3948," "],[1,3952,"解"],[-1,3954,"解"],[1,3955,"："],[-1,3959,"："],[1,3968,"0"],[-1,3969," "],[1,4029,"。"],[-1,4033,"。"],[1,4050,"d"],[-1,4051," "],[1,4065,"2"],[-1,4066," "],[1,4164,"d"],[-1,4165," "],[1,4171,"n"],[-1,4172," "],[1,4187,"2"],[-1,4188," "],[1,4196,"\n"],[-1,4201,"\n"],[1,4213,"\n"],[-1,4631," "],[1,4635,"解"],[-1,4637,"解"],[1,4638,"："],[-1,4640,"："],[1,4674,"s"],[-1,4675," "],[-1,4686," "],[1,4687," "],[1,4733,"r"],[-1,4734," "],[1,4742,"\n"],[1,4760," "],[-1,4791," "],[1,4793," "],[-1,4830," "],[1,4832," "],[-1,4863," "],[1,4865," "],[-1,4907," "],[1,4908,"例"],[-1,4913," "],[1,4914,"在"],[-1,4959," "],[-1,5325,"\n"],[1,5326,"注"],[-1,5328,"注"],[1,5379,"。"],[-1,5382," "],[1,5418,"\n"],[-1,6240,"\n"],[1,6274,"*"],[-1,6284," "],[1,6344,"。"],[-1,6354," "],[1,6406,"码"],[-1,6416," "],[1,6481,"锁"],[-1,6482," "],[1,6495,"\n"],[-1,6499," "],[-1,6607,"*\n"],[1,6609,"\n* "],[-1,6752,"  "],[1,6754,"\n"],[1,6757,"\n"],[-1,7257,"\n"],[-1,7277," "],[1,7278,"制"],[1,7280,"\n"],[-1,7288," "],[1,7330,"\n"],[-1,7338," "],[1,7475,"。"],[-1,7477," "],[1,7570,"。"],[-1,7572," "],[1,7626,"法"],[-1,7627," "],[1,7778,"："],[-1,7779," "],[1,7949,"\n"],[-1,7951,"\n"],[1,7961,"呢"],[-1,7963,"呢"],[1,7964,"？"],[-1,7966,"？"],[1,8104,"*"],[-1,8105," "],[-1,8348,""],[1,8348,"\n"],[-1,8575,"\n"],[-1,8675,""],[1,8675,"\n"]],[241,241],[8676,8676]]],[1521529936457,[null,[[1,241,"\n"],[1,394,""],[-1,394,"\n"],[1,2441,"\n"],[-1,2444,"解"],[1,2447,"解"],[-1,2618,"\n"],[1,3948," "],[-1,3951,"解"],[1,3954,"解"],[-1,3954,"："],[1,3959,"："],[-1,3967,"0"],[1,3969," "],[-1,4028,"。"],[1,4033,"。"],[-1,4049,"d"],[1,4051," "],[-1,4064,"2"],[1,4066," "],[-1,4163,"d"],[1,4165," "],[-1,4170,"n"],[1,4172," "],[-1,4186,"2"],[1,4188," "],[-1,4195,"\n"],[1,4201,"\n"],[-1,4212,"\n"],[1,4631," "],[-1,4634,"解"],[1,4637,"解"],[-1,4637,"："],[1,4640,"："],[-1,4673,"s"],[1,4675," "],[1,4685," "],[-1,4685," "],[-1,4732,"r"],[1,4734," "],[-1,4741,"\n"],[-1,4760," "],[1,4792," "],[-1,4793," "],[1,4831," "],[-1,4832," "],[1,4864," "],[-1,4865," "],[1,4908," "],[-1,4908,"例"],[1,4914," "],[-1,4914,"在"],[1,4960," "],[1,5325,"\n"],[-1,5325,"注"],[1,5328,"注"],[-1,5378,"。"],[1,5382," "],[-1,5417,"\n"],[1,6240,"\n"],[-1,6273,"*"],[1,6284," "],[-1,6343,"。"],[1,6354," "],[-1,6405,"码"],[1,6416," "],[-1,6480,"锁"],[1,6482," "],[-1,6494,"\n"],[1,6499," "],[1,6606,"*\n"],[-1,6606,"\n* "],[1,6752,"  "],[-1,6752,"\n"],[-1,6756,"\n"],[1,7257,"\n"],[1,7276," "],[-1,7276,"制"],[-1,7279,"\n"],[1,7288," "],[-1,7329,"\n"],[1,7338," "],[-1,7474,"。"],[1,7477," "],[-1,7569,"。"],[1,7572," "],[-1,7625,"法"],[1,7627," "],[-1,7777,"："],[1,7779," "],[-1,7948,"\n"],[1,7951,"\n"],[-1,7960,"呢"],[1,7963,"呢"],[-1,7963,"？"],[1,7966,"？"],[-1,8103,"*"],[1,8105," "],[1,8347,""],[-1,8347,"\n"],[1,8575,"\n"],[1,8674,""],[-1,8674,"\n"]],[8676,8676],[241,241]]],[1521529899970,["gengmei_pxf@gengmei123.local",[[-1,32,"\n"]],[31,31],[30,30]]],[1521530181298,[null,[[-1,240,"\n"],[-1,394,""],[1,394,"\n"],[-1,2440,"\n"],[1,2444,"解"],[-1,2446,"解"],[1,2618,"\n"],[-1,3947," "],[1,3951,"解"],[-1,3953,"解"],[1,3954,"："],[-1,3958,"："],[1,3967,"0"],[-1,3968," "],[1,4028,"。"],[-1,4032,"。"],[1,4049,"d"],[-1,4050," "],[1,4064,"2"],[-1,4065," "],[1,4163,"d"],[-1,4164," "],[1,4170,"n"],[-1,4171," "],[1,4186,"2"],[-1,4187," "],[1,4195,"\n"],[-1,4200,"\n"],[1,4212,"\n"],[-1,4630," "],[1,4634,"解"],[-1,4636,"解"],[1,4637,"："],[-1,4639,"："],[1,4673,"s"],[-1,4674," "],[-1,4685," "],[1,4686," "],[1,4732,"r"],[-1,4733," "],[1,4741,"\n"],[1,4759," "],[-1,4790," "],[1,4792," "],[-1,4829," "],[1,4831," "],[-1,4862," "],[1,4864," "],[-1,4906," "],[1,4907,"例"],[-1,4912," "],[1,4913,"在"],[-1,4958," "],[-1,5324,"\n"],[1,5325,"注"],[-1,5327,"注"],[1,5378,"。"],[-1,5381," "],[1,5417,"\n"],[-1,6239,"\n"],[1,6273,"*"],[-1,6283," "],[1,6343,"。"],[-1,6353," "],[1,6405,"码"],[-1,6415," "],[1,6480,"锁"],[-1,6481," "],[1,6494,"\n"],[-1,6498," "],[-1,6606,"*\n"],[1,6608,"\n* "],[-1,6751,"  "],[1,6753,"\n"],[1,6756,"\n"],[-1,7256,"\n"],[-1,7276," "],[1,7277,"制"],[1,7279,"\n"],[-1,7287," "],[1,7329,"\n"],[-1,7337," "],[1,7474,"。"],[-1,7476," "],[1,7569,"。"],[-1,7571," "],[1,7625,"法"],[-1,7626," "],[1,7777,"："],[-1,7778," "],[1,7948,"\n"],[-1,7950,"\n"],[1,7960,"呢"],[-1,7962,"呢"],[1,7963,"？"],[-1,7965,"？"],[1,8103,"*"],[-1,8104," "],[-1,8347,""],[1,8347,"\n"],[-1,8574,"\n"],[-1,8674,""],[1,8674,"\n"]],[240,240],[8675,8675]]],[1521530181298,[null,[[1,240,"\n"],[1,393,""],[-1,393,"\n"],[1,2440,"\n"],[-1,2443,"解"],[1,2446,"解"],[-1,2617,"\n"],[1,3947," "],[-1,3950,"解"],[1,3953,"解"],[-1,3953,"："],[1,3958,"："],[-1,3966,"0"],[1,3968," "],[-1,4027,"。"],[1,4032,"。"],[-1,4048,"d"],[1,4050," "],[-1,4063,"2"],[1,4065," "],[-1,4162,"d"],[1,4164," "],[-1,4169,"n"],[1,4171," "],[-1,4185,"2"],[1,4187," "],[-1,4194,"\n"],[1,4200,"\n"],[-1,4211,"\n"],[1,4630," "],[-1,4633,"解"],[1,4636,"解"],[-1,4636,"："],[1,4639,"："],[-1,4672,"s"],[1,4674," "],[1,4684," "],[-1,4684," "],[-1,4731,"r"],[1,4733," "],[-1,4740,"\n"],[-1,4759," "],[1,4791," "],[-1,4792," "],[1,4830," "],[-1,4831," "],[1,4863," "],[-1,4864," "],[1,4907," "],[-1,4907,"例"],[1,4913," "],[-1,4913,"在"],[1,4959," "],[1,5324,"\n"],[-1,5324,"注"],[1,5327,"注"],[-1,5377,"。"],[1,5381," "],[-1,5416,"\n"],[1,6239,"\n"],[-1,6272,"*"],[1,6283," "],[-1,6342,"。"],[1,6353," "],[-1,6404,"码"],[1,6415," "],[-1,6479,"锁"],[1,6481," "],[-1,6493,"\n"],[1,6498," "],[1,6605,"*\n"],[-1,6605,"\n* "],[1,6751,"  "],[-1,6751,"\n"],[-1,6755,"\n"],[1,7256,"\n"],[1,7275," "],[-1,7275,"制"],[-1,7278,"\n"],[1,7287," "],[-1,7328,"\n"],[1,7337," "],[-1,7473,"。"],[1,7476," "],[-1,7568,"。"],[1,7571," "],[-1,7624,"法"],[1,7626," "],[-1,7776,"："],[1,7778," "],[-1,7947,"\n"],[1,7950,"\n"],[-1,7959,"呢"],[1,7962,"呢"],[-1,7962,"？"],[1,7965,"？"],[-1,8102,"*"],[1,8104," "],[1,8346,""],[-1,8346,"\n"],[1,8574,"\n"],[1,8673,""],[-1,8673,"\n"]],[8675,8675],[240,240]]],[1521530176934,["gengmei_pxf@gengmei123.local",[[1,4,"/"]],[4,4],[5,5]]],[1521530179052,["gengmei_pxf@gengmei123.local",[[-1,5," "]],[6,6],[5,5]]]]]]}