{"compress":true,"commitItems":[["3395d6d8-0ead-4978-b97d-9cfa62462435",1516952328637,"",[[1516952275669,["gengmei_pxf@gengmei123.local",[[1,0,"悬浮窗\n===\n\n\n"]],[0,0],[10,10]]],[1516955946925,["gengmei_pxf@gengmei123.local",[[1,9,"# 悬浮窗原理"]],[9,9],[16,16]]],[1516955950248,["gengmei_pxf@gengmei123.local",[[1,17,"\n"]],[16,16],[17,17]]],[1516955952320,["gengmei_pxf@gengmei123.local",[[1,18,"\n"]],[17,17],[18,18]]],[1516955953394,["gengmei_pxf@gengmei123.local",[[-1,18,"\n"],[1,19,"#"]],[18,18],[19,19]]],[1516956066992,["gengmei_pxf@gengmei123.local",[[1,19,"权限适配"]],[19,19],[23,23]]],[1516956069223,["gengmei_pxf@gengmei123.local",[[1,19," "]],[19,19],[20,20]]],[1516956175792,["gengmei_pxf@gengmei123.local",[[1,17,"通过WindowManager这个类来实现的，调用这个类的addView方法用于添加一个悬浮窗，updateViewLayout方法用于更新悬浮窗的参数，removeView用于移除悬浮窗。其中悬浮窗的参数有必要详细说明一下。\n\nWindowManager.LayoutParams这个类用于提供悬浮窗所需的参数，其中有几个经常会用到的变量：\n\ntype值用于确定悬浮窗的类型，一般设为2002，表示在所有应用程序之上，但在状态栏之下。\n\nflags值用于确定悬浮窗的行为，比如说不可聚焦，非模态对话框等等，属性非常多，大家可以查看文档。 \n\ngravity值用于确定悬浮窗的对齐方式，一般设为左上角对齐，这样当拖动悬浮窗的时候方便计算坐标。\n\nx值用于确定悬浮窗的位置，如果要横向移动悬浮窗，就需要改变这个值。\n\ny值用于确定悬浮窗的位置，如果要纵向移动悬浮窗，就需要改变这个值。\n\nwidth值用于指定悬浮窗的宽度。\n\nheight值用于指定悬浮窗的高度。\n\n创建悬浮窗这种窗体需要向用户申请权限才可以的，因此还需要在AndroidManifest.xml中加入<uses-permission android:name=\"android.permission.SYSTEM_ALERT_WINDOW\" />"]],[17,17],[573,573]]],[1516956199485,["gengmei_pxf@gengmei123.local",[[1,190,"**"]],[190,190],[192,192]]],[1516956203660,["gengmei_pxf@gengmei123.local",[[1,196,"**"]],[196,196],[198,198]]],[1516956205117,["gengmei_pxf@gengmei123.local",[[1,241,"**"]],[241,241],[243,243]]],[1516956206398,["gengmei_pxf@gengmei123.local",[[1,248,"**"]],[248,248],[250,250]]],[1516956207477,["gengmei_pxf@gengmei123.local",[[1,297,"**"]],[297,297],[299,299]]],[1516956209755,["gengmei_pxf@gengmei123.local",[[1,306,"**"]],[306,306],[308,308]]],[1516956211109,["gengmei_pxf@gengmei123.local",[[1,352,"**"]],[352,352],[354,354]]],[1516956212541,["gengmei_pxf@gengmei123.local",[[1,355,"**"]],[355,355],[357,357]]],[1516956214237,["gengmei_pxf@gengmei123.local",[[1,391,"**"]],[391,391],[393,393]]],[1516956215782,["gengmei_pxf@gengmei123.local",[[1,394,"**"]],[394,394],[396,396]]],[1516956216853,["gengmei_pxf@gengmei123.local",[[1,430,"**"]],[430,430],[432,432]]],[1516956218043,["gengmei_pxf@gengmei123.local",[[1,437,"**"]],[437,437],[439,439]]],[1516956219103,["gengmei_pxf@gengmei123.local",[[1,453,"**"]],[453,453],[455,455]]],[1516956220533,["gengmei_pxf@gengmei123.local",[[1,461,"**"]],[461,461],[463,463]]],[1516956345350,["gengmei_pxf@gengmei123.local",[[1,528,"\n"]],[528,528],[529,529]]],[1516956349688,["gengmei_pxf@gengmei123.local",[[1,529,"\n"]],[529,529],[530,530]]],[1516956351354,["gengmei_pxf@gengmei123.local",[[1,529,"·"]],[529,529],[530,530]]],[1516956352216,["gengmei_pxf@gengmei123.local",[[-1,529,"·"]],[530,530],[529,529]]],[1516956353749,["gengmei_pxf@gengmei123.local",[[1,529,"`"]],[529,529],[530,530]]],[1516956355896,["gengmei_pxf@gengmei123.local",[[1,605,"\n"]],[604,604],[605,605]]],[1516956356362,["gengmei_pxf@gengmei123.local",[[1,605,"`"]],[605,605],[606,606]]],[1516956402923,["gengmei_pxf@gengmei123.local",[[-1,477,"创建悬浮窗这种窗体需要向用户申请权限才可以的，因此还需要在AndroidManifest.xml中加入\n`\n<uses-permission android:name=\"android.permission.SYSTEM_ALERT_WINDOW\" />\n`"]],[477,606],[477,477]]],[1516956403904,["gengmei_pxf@gengmei123.local",[[-1,477,"\n"]],[477,477],[476,476]]],[1516956405823,["gengmei_pxf@gengmei123.local",[[1,483,"\n\n"]],[483,483],[484,484]]],[1516956407095,["gengmei_pxf@gengmei123.local",[[1,485,"\n"]],[484,484],[485,485]]],[1516956407698,["gengmei_pxf@gengmei123.local",[[1,485,"创建悬浮窗这种窗体需要向用户申请权限才可以的，因此还需要在AndroidManifest.xml中加入\n`\n<uses-permission android:name=\"android.permission.SYSTEM_ALERT_WINDOW\" />\n`"]],[485,485],[614,614]]],[1516956410262,["gengmei_pxf@gengmei123.local",[[1,615,"\n"]],[614,614],[615,615]]],[1516956441752,["gengmei_pxf@gengmei123.local",[[-1,615,"\n"],[1,616,"[]()"]],[615,615],[619,619]]],[1516956444177,["gengmei_pxf@gengmei123.local",[[1,616,"# Android 悬浮窗权限各机型各系统适配大全"]],[616,616],[641,641]]],[1516956447063,["gengmei_pxf@gengmei123.local",[[-1,616,"# "]],[618,618],[616,616]]],[1516956459502,["gengmei_pxf@gengmei123.local",[[1,641,"http://blog.csdn.net/self_study/article/details/52859790\n\n"]],[641,641],[699,699]]],[1516956524594,[null,[[1,697,")"],[-1,699,")"]],[697,697],[699,699]]],[1516956524594,[null,[[-1,697,")"],[1,700,")"]],[699,699],[697,697]]],[1516956507422,["gengmei_pxf@gengmei123.local",[[-1,699,"\n"],[1,700,"zhe"]],[699,699],[702,702]]],[1516956508189,["gengmei_pxf@gengmei123.local",[[-1,700,"he"]],[702,702],[700,700]]],[1516956508347,["gengmei_pxf@gengmei123.local",[[-1,699,"z"],[1,700,"\n"]],[700,700],[699,699]]],[1516956513368,["gengmei_pxf@gengmei123.local",[[-1,699,"\n"],[1,700,"这博客将"]],[699,699],[703,703]]],[1516956514550,["gengmei_pxf@gengmei123.local",[[-1,702,"将"]],[703,703],[702,702]]],[1516956523198,["gengmei_pxf@gengmei123.local",[[1,702,"讲的很详细，"]],[702,702],[708,708]]],[1516956584597,[null,[[-1,697,"\n"],[1,698,")"]],[697,697],[699,699]]],[1516956584597,[null,[[1,697,"\n"],[-1,697,")"]],[699,699],[697,697]]],[1516956530911,["gengmei_pxf@gengmei123.local",[[1,708,"可以参考"]],[708,708],[712,712]]],[1516956540319,["gengmei_pxf@gengmei123.local",[[1,708,"适配了各个机型，"]],[708,708],[716,716]]],[1516956541935,["gengmei_pxf@gengmei123.local",[[1,720,"。"]],[720,720],[721,721]]],[1516956544116,["gengmei_pxf@gengmei123.local",[[1,721,"\n\n"]],[721,721],[722,722]]],[1516956544452,["gengmei_pxf@gengmei123.local",[[1,723,"\n"]],[722,722],[723,723]]],[1516956549736,["gengmei_pxf@gengmei123.local",[[-1,723,"\n"],[1,724,"#代码实现"]],[723,723],[728,728]]],[1516956551860,["gengmei_pxf@gengmei123.local",[[1,724," "]],[724,724],[725,725]]],[1516956553380,["gengmei_pxf@gengmei123.local",[[1,729,"\n\n"]],[729,729],[730,730]]],[1516956644600,[null,[[-1,697,"\n"],[1,698,")"]],[697,697],[699,699]]],[1516956644600,[null,[[1,697,"\n"],[-1,697,")"]],[699,699],[697,697]]],[1516956585191,["gengmei_pxf@gengmei123.local",[[1,0,"直播"]],[0,0],[2,2]]],[1516956764614,[null,[[-1,699,"\n"],[1,700,")"]],[699,699],[701,701]]],[1516956764614,[null,[[1,699,"\n"],[-1,699,")"]],[701,701],[699,699]]],[1516956715754,["gengmei_pxf@gengmei123.local",[[-1,732,"\n"],[1,733,"·"]],[732,732],[733,733]]],[1516956716954,["gengmei_pxf@gengmei123.local",[[-1,732,"·"],[1,733,"\n"]],[733,733],[732,732]]],[1516956718338,["gengmei_pxf@gengmei123.local",[[-1,732,"\n"],[1,733,"```"]],[732,732],[735,735]]],[1516956719000,["gengmei_pxf@gengmei123.local",[[1,735,"\n\n"]],[735,735],[736,736]]],[1516956719552,["gengmei_pxf@gengmei123.local",[[1,737,"\n"]],[736,736],[737,737]]],[1516956720596,["gengmei_pxf@gengmei123.local",[[-1,737,"\n"],[1,738,"```"]],[737,737],[740,740]]],[1516956721968,["gengmei_pxf@gengmei123.local",[[1,736,"public class FloatView extends FrameLayout {\n\n    private WindowManager mWindowManager;\n private WindowManager.LayoutParams mParams;\n private ClickFloatViewListener mClickFloatViewListener;    /**\n * floatView的clickListener */  public interface ClickFloatViewListener {\n        void clickFloatView();\n  }\n\n    /**\n * 设置floatView的clickListener */  public void setClickFloatViewListener(ClickFloatViewListener clickFloatViewListener) {\n        mClickFloatViewListener = clickFloatViewListener;\n  }\n\n    public FloatView(@NonNull Context context) {\n        super(context);\n  floatX = DeviceUtils.getWidth();\n  floatY = ScreenUtils.dip2px(64);\n  init(context);\n  }\n\n    public FloatView(@NonNull Context context, int x, int y) {\n        super(context);\n  floatX = x;\n  floatY = y;\n  init(context);\n  }\n\n    private void init(Context context) {\n        setBackgroundResource(R.drawable.live_shape_float_window_background);\n  initWindow(context);\n  }\n\n    private void initWindow(Context context) {\n        mWindowManager = (WindowManager) context.getApplicationContext().getSystemService(Context.WINDOW_SERVICE);\n  mParams = new WindowManager.LayoutParams();\n  mParams.packageName = context.getPackageName();\n  // 设置window type\n  mParams.type = WindowManager.LayoutParams.TYPE_SYSTEM_ALERT; // 系统提示。它总是出现在应用程序窗口之上 //        if (Build.VERSION.SDK_INT >= Build.VERSION_CODES.KITKAT) { //            mParams.type = WindowManager.LayoutParams.TYPE_TOAST; //        } else { //            mParams.type = WindowManager.LayoutParams.TYPE_PHONE; //        } //        mParams.type = WindowManager.LayoutParams.TYPE_SYSTEM_ERROR;//系统内部错误提示，显示于所有内容之上\n // 设置浮动窗口不可聚焦（实现操作除浮动窗口外的其他可见窗口的操作）  mParams.flags = WindowManager.LayoutParams.FLAG_NOT_TOUCH_MODAL | WindowManager.LayoutParams.FLAG_NOT_FOCUSABLE | WindowManager.LayoutParams.FLAG_HARDWARE_ACCELERATED;\n  // 设置图片格式，效果为背景透明\n  mParams.format = PixelFormat.RGBA_8888;\n  // 调整悬浮窗显示的停靠位置为\n  mParams.gravity = Gravity.START | Gravity.TOP;\n  // 设置悬浮窗口长宽数据\n  mParams.width = ScreenUtils.dip2px(125);\n  mParams.height = ScreenUtils.dip2px(223);\n  mParams.x = floatX;\n  mParams.y = floatY;\n  }\n\n    /**\n * 添加至Window */  public boolean addToWindow() {\n        if (mWindowManager != null) {\n            if (Build.VERSION.SDK_INT >= Build.VERSION_CODES.KITKAT) {\n                if (!isAttachedToWindow()) {\n                    refreshFloatXY();\n  mWindowManager.addView(this, mParams);\n return true;  } else {\n                    return false;\n  }\n            } else {\n                try {\n                    if (getParent() == null) {\n                        refreshFloatXY();\n  mWindowManager.addView(this, mParams);\n  }\n                    return true;\n  } catch (Exception e) {\n                    return false;\n  }\n            }\n        } else {\n            return false;\n  }\n    }\n\n    /**\n * 从Window移除 */  public boolean removeFromWindow() {\n        if (mWindowManager != null) {\n            if (Build.VERSION.SDK_INT >= Build.VERSION_CODES.KITKAT) {\n                if (isAttachedToWindow()) {\n                    mWindowManager.removeViewImmediate(this);\n return true;  } else {\n                    return false;\n  }\n            } else {\n                try {\n                    if (getParent() != null) {\n                        mWindowManager.removeViewImmediate(this);\n  }\n                    return true;\n  } catch (Exception e) {\n                    return false;\n  }\n            }\n        } else {\n            return false;\n  }\n    }\n\n    @Override\n  public boolean onInterceptTouchEvent(MotionEvent ev) {\n        return ev.getAction() != MotionEvent.ACTION_DOWN;\n  }\n\n    private int floatX;\n private int floatY;    /**\n * 记录手指按下时在小悬浮窗的View上的横坐标的值 */  private float xInView;    /**\n * 记录手指按下时在小悬浮窗的View上的纵坐标的值 */  private float yInView;\n  /**\n * 记录当前手指位置在屏幕上的横坐标值 */  private float xInScreen;    /**\n * 记录当前手指位置在屏幕上的纵坐标值 */  private float yInScreen;    /**\n * 记录手指按下时在屏幕上的横坐标的值 */  private float xDownInScreen;    /**\n * 记录手指按下时在屏幕上的纵坐标的值 */  private float yDownInScreen;    @Override\n  public boolean onTouchEvent(MotionEvent event) {\n        switch (event.getAction()) {\n            case MotionEvent.ACTION_DOWN:\n                xInView = event.getX();\n  yInView = event.getY();\n  xDownInScreen = event.getRawX();\n  yDownInScreen = event.getRawY();\n  xInScreen = event.getRawX();\n  yInScreen = event.getRawY();\n break; case MotionEvent.ACTION_UP:\n                if (Math.abs(xDownInScreen - xInScreen) <= ViewConfiguration.get(getContext()).getScaledTouchSlop()\n                        && Math.abs(yDownInScreen - yInScreen) <= ViewConfiguration.get(getContext()).getScaledTouchSlop()) {\n                    // 点击效果\n  if (null != mClickFloatViewListener) {\n                        mClickFloatViewListener.clickFloatView();\n  }\n                }\n                break;\n case MotionEvent.ACTION_MOVE:\n                xInScreen = event.getRawX();\n  yInScreen = event.getRawY();\n  // 手指移动的时候更新小悬浮窗的位置\n  updateViewPosition();\n  }\n        return super.onTouchEvent(event);\n  }\n\n    /**\n * 手指移动的时候更新小悬浮窗的位置 */  private void updateViewPosition() {\n        //增加移动误差\n  mParams.x = (int) (xInScreen - xInView);\n  mParams.y = (int) (yInScreen - yInView);\n  mWindowManager.updateViewLayout(this, mParams);\n  }\n\n    /**\n * 更新floatView的位置 */  private void refreshFloatXY() {\n        floatX = DeviceUtils.getWidth();\n  floatY = ScreenUtils.dip2px(64);\n if (null != mParams) {\n            mParams.x = floatX;\n  mParams.y = floatY;\n  }\n    }\n}"]],[736,736],[6210,6210]]],[1516956737761,["gengmei_pxf@gengmei123.local",[[-1,736,"public class FloatView extends FrameLayout {\n\n    private WindowManager mWindowManager;\n private WindowManager.LayoutParams mParams;\n private ClickFloatViewListener mClickFloatViewListener;    /**\n * floatView的clickListener */  public interface ClickFloatViewListener {\n        void clickFloatView();\n  }\n\n    /**\n * 设置floatView的clickListener */  public void setClickFloatViewListener(ClickFloatViewListener clickFloatViewListener) {\n        mClickFloatViewListener = clickFloatViewListener;\n  }\n\n    public FloatView(@NonNull Context context) {\n        super(context);\n  floatX = DeviceUtils.getWidth();\n  floatY = ScreenUtils.dip2px(64);\n  init(context);\n  }\n\n    public FloatView(@NonNull Context context, int x, int y) {\n        super(context);\n  floatX = x;\n  floatY = y;\n  init(context);\n  }\n\n    private void init(Context context) {\n        setBackgroundResource(R.drawable.live_shape_float_window_background);\n  initWindow(context);\n  }\n\n    private void initWindow(Context context) {\n        mWindowManager = (WindowManager) context.getApplicationContext().getSystemService(Context.WINDOW_SERVICE);\n  mParams = new WindowManager.LayoutParams();\n  mParams.packageName = context.getPackageName();\n  // 设置window type\n  mParams.type = WindowManager.LayoutParams.TYPE_SYSTEM_ALERT; // 系统提示。它总是出现在应用程序窗口之上 //        if (Build.VERSION.SDK_INT >= Build.VERSION_CODES.KITKAT) { //            mParams.type = WindowManager.LayoutParams.TYPE_TOAST; //        } else { //            mParams.type = WindowManager.LayoutParams.TYPE_PHONE; //        } //        mParams.type = WindowManager.LayoutParams.TYPE_SYSTEM_ERROR;//系统内部错误提示，显示于所有内容之上\n // 设置浮动窗口不可聚焦（实现操作除浮动窗口外的其他可见窗口的操作）  mParams.flags = WindowManager.LayoutParams.FLAG_NOT_TOUCH_MODAL | WindowManager.LayoutParams.FLAG_NOT_FOCUSABLE | WindowManager.LayoutParams.FLAG_HARDWARE_ACCELERATED;\n  // 设置图片格式，效果为背景透明\n  mParams.format = PixelFormat.RGBA_8888;\n  // 调整悬浮窗显示的停靠位置为\n  mParams.gravity = Gravity.START | Gravity.TOP;\n  // 设置悬浮窗口长宽数据\n  mParams.width = ScreenUtils.dip2px(125);\n  mParams.height = ScreenUtils.dip2px(223);\n  mParams.x = floatX;\n  mParams.y = floatY;\n  }\n\n    /**\n * 添加至Window */  public boolean addToWindow() {\n        if (mWindowManager != null) {\n            if (Build.VERSION.SDK_INT >= Build.VERSION_CODES.KITKAT) {\n                if (!isAttachedToWindow()) {\n                    refreshFloatXY();\n  mWindowManager.addView(this, mParams);\n return true;  } else {\n                    return false;\n  }\n            } else {\n                try {\n                    if (getParent() == null) {\n                        refreshFloatXY();\n  mWindowManager.addView(this, mParams);\n  }\n                    return true;\n  } catch (Exception e) {\n                    return false;\n  }\n            }\n        } else {\n            return false;\n  }\n    }\n\n    /**\n * 从Window移除 */  public boolean removeFromWindow() {\n        if (mWindowManager != null) {\n            if (Build.VERSION.SDK_INT >= Build.VERSION_CODES.KITKAT) {\n                if (isAttachedToWindow()) {\n                    mWindowManager.removeViewImmediate(this);\n return true;  } else {\n                    return false;\n  }\n            } else {\n                try {\n                    if (getParent() != null) {\n                        mWindowManager.removeViewImmediate(this);\n  }\n                    return true;\n  } catch (Exception e) {\n                    return false;\n  }\n            }\n        } else {\n            return false;\n  }\n    }\n\n    @Override\n  public boolean onInterceptTouchEvent(MotionEvent ev) {\n        return ev.getAction() != MotionEvent.ACTION_DOWN;\n  }\n\n    private int floatX;\n private int floatY;    /**\n * 记录手指按下时在小悬浮窗的View上的横坐标的值 */  private float xInView;    /**\n * 记录手指按下时在小悬浮窗的View上的纵坐标的值 */  private float yInView;\n  /**\n * 记录当前手指位置在屏幕上的横坐标值 */  private float xInScreen;    /**\n * 记录当前手指位置在屏幕上的纵坐标值 */  private float yInScreen;    /**\n * 记录手指按下时在屏幕上的横坐标的值 */  private float xDownInScreen;    /**\n * 记录手指按下时在屏幕上的纵坐标的值 */  private float yDownInScreen;    @Override\n  public boolean onTouchEvent(MotionEvent event) {\n        switch (event.getAction()) {\n            case MotionEvent.ACTION_DOWN:\n                xInView = event.getX();\n  yInView = event.getY();\n  xDownInScreen = event.getRawX();\n  yDownInScreen = event.getRawY();\n  xInScreen = event.getRawX();\n  yInScreen = event.getRawY();\n break; case MotionEvent.ACTION_UP:\n                if (Math.abs(xDownInScreen - xInScreen) <= ViewConfiguration.get(getContext()).getScaledTouchSlop()\n                        && Math.abs(yDownInScreen - yInScreen) <= ViewConfiguration.get(getContext()).getScaledTouchSlop()) {\n                    // 点击效果\n  if (null != mClickFloatViewListener) {\n                        mClickFloatViewListener.clickFloatView();\n  }\n                }\n                break;\n case MotionEvent.ACTION_MOVE:\n                xInScreen = event.getRawX();\n  yInScreen = event.getRawY();\n  // 手指移动的时候更新小悬浮窗的位置\n  updateViewPosition();\n  }\n        return super.onTouchEvent(event);\n  }\n\n    /**\n * 手指移动的时候更新小悬浮窗的位置 */  private void updateViewPosition() {\n        //增加移动误差\n  mParams.x = (int) (xInScreen - xInView);\n  mParams.y = (int) (yInScreen - yInView);\n  mWindowManager.updateViewLayout(this, mParams);\n  }\n\n    /**\n * 更新floatView的位置 */  private void refreshFloatXY() {\n        floatX = DeviceUtils.getWidth();\n  floatY = ScreenUtils.dip2px(64);\n if (null != mParams) {\n            mParams.x = floatX;\n  mParams.y = floatY;\n  }\n    }\n}"]],[6210,6210],[736,736]]],[1516956749159,["gengmei_pxf@gengmei123.local",[[1,737,"\n"],[-1,737,"```"]],[740,740],[737,737]]],[1516956750188,["gengmei_pxf@gengmei123.local",[[-1,737,"\n"]],[737,737],[736,736]]],[1516956750786,["gengmei_pxf@gengmei123.local",[[-1,735,"\n\n"]],[736,736],[735,735]]],[1516956751322,["gengmei_pxf@gengmei123.local",[[1,732,"\n"],[-1,732,"```"]],[735,735],[732,732]]],[1516956751753,["gengmei_pxf@gengmei123.local",[[1,732,"·"],[-1,732,"\n"]],[732,732],[733,733]]],[1516956752603,["gengmei_pxf@gengmei123.local",[[1,732,"\n"],[-1,732,"·"]],[733,733],[732,732]]],[1516956771833,[null,[[-1,699,"\n"],[1,700,")"]],[699,699],[701,701]]],[1516956771833,[null,[[1,699,"\n"],[-1,699,")"]],[701,701],[699,699]]],[1516956765992,["gengmei_pxf@gengmei123.local",[[1,733,"```\npublic class FloatView extends FrameLayout {\n\n    private WindowManager mWindowManager;\n    private WindowManager.LayoutParams mParams;\n    private ClickFloatViewListener mClickFloatViewListener;\n\n    /**\n     * floatView的clickListener\n     */\n    public interface ClickFloatViewListener {\n        void clickFloatView();\n    }\n\n    /**\n     * 设置floatView的clickListener\n     */\n    public void setClickFloatViewListener(ClickFloatViewListener clickFloatViewListener) {\n        mClickFloatViewListener = clickFloatViewListener;\n    }\n\n    public FloatView(@NonNull Context context) {\n        super(context);\n        floatX = DeviceUtils.getWidth();\n        floatY = ScreenUtils.dip2px(64);\n        init(context);\n    }\n\n    public FloatView(@NonNull Context context, int x, int y) {\n        super(context);\n        floatX = x;\n        floatY = y;\n        init(context);\n    }\n\n    private void init(Context context) {\n        setBackgroundResource(R.drawable.live_shape_float_window_background);\n        initWindow(context);\n    }\n\n    private void initWindow(Context context) {\n        mWindowManager = (WindowManager) context.getApplicationContext().getSystemService(Context.WINDOW_SERVICE);\n        mParams = new WindowManager.LayoutParams();\n        mParams.packageName = context.getPackageName();\n        // 设置window type\n        mParams.type = WindowManager.LayoutParams.TYPE_SYSTEM_ALERT; // 系统提示。它总是出现在应用程序窗口之上\n//        if (Build.VERSION.SDK_INT >= Build.VERSION_CODES.KITKAT) {\n//            mParams.type = WindowManager.LayoutParams.TYPE_TOAST;\n//        } else {\n//            mParams.type = WindowManager.LayoutParams.TYPE_PHONE;\n//        }\n//        mParams.type = WindowManager.LayoutParams.TYPE_SYSTEM_ERROR;//系统内部错误提示，显示于所有内容之上\n        // 设置浮动窗口不可聚焦（实现操作除浮动窗口外的其他可见窗口的操作）\n        mParams.flags = WindowManager.LayoutParams.FLAG_NOT_TOUCH_MODAL | WindowManager.LayoutParams.FLAG_NOT_FOCUSABLE | WindowManager.LayoutParams.FLAG_HARDWARE_ACCELERATED;\n        // 设置图片格式，效果为背景透明\n        mParams.format = PixelFormat.RGBA_8888;\n        // 调整悬浮窗显示的停靠位置为\n        mParams.gravity = Gravity.START | Gravity.TOP;\n        // 设置悬浮窗口长宽数据\n        mParams.width = ScreenUtils.dip2px(125);\n        mParams.height = ScreenUtils.dip2px(223);\n        mParams.x = floatX;\n        mParams.y = floatY;\n    }\n\n    /**\n     * 添加至Window\n     */\n    public boolean addToWindow() {\n        if (mWindowManager != null) {\n            if (Build.VERSION.SDK_INT >= Build.VERSION_CODES.KITKAT) {\n                if (!isAttachedToWindow()) {\n                    refreshFloatXY();\n                    mWindowManager.addView(this, mParams);\n                    return true;\n                } else {\n                    return false;\n                }\n            } else {\n                try {\n                    if (getParent() == null) {\n                        refreshFloatXY();\n                        mWindowManager.addView(this, mParams);\n                    }\n                    return true;\n                } catch (Exception e) {\n                    return false;\n                }\n            }\n        } else {\n            return false;\n        }\n    }\n\n    /**\n     * 从Window移除\n     */\n    public boolean removeFromWindow() {\n        if (mWindowManager != null) {\n            if (Build.VERSION.SDK_INT >= Build.VERSION_CODES.KITKAT) {\n                if (isAttachedToWindow()) {\n                    mWindowManager.removeViewImmediate(this);\n                    return true;\n                } else {\n                    return false;\n                }\n            } else {\n                try {\n                    if (getParent() != null) {\n                        mWindowManager.removeViewImmediate(this);\n                    }\n                    return true;\n                } catch (Exception e) {\n                    return false;\n                }\n            }\n        } else {\n            return false;\n        }\n    }\n\n\n    @Override\n    public boolean onInterceptTouchEvent(MotionEvent ev) {\n        return ev.getAction() != MotionEvent.ACTION_DOWN;\n    }\n\n    private int floatX;\n    private int floatY;\n\n    /**\n     * 记录手指按下时在小悬浮窗的View上的横坐标的值\n     */\n    private float xInView;\n\n    /**\n     * 记录手指按下时在小悬浮窗的View上的纵坐标的值\n     */\n    private float yInView;\n    /**\n     * 记录当前手指位置在屏幕上的横坐标值\n     */\n    private float xInScreen;\n\n    /**\n     * 记录当前手指位置在屏幕上的纵坐标值\n     */\n    private float yInScreen;\n\n    /**\n     * 记录手指按下时在屏幕上的横坐标的值\n     */\n    private float xDownInScreen;\n\n    /**\n     * 记录手指按下时在屏幕上的纵坐标的值\n     */\n    private float yDownInScreen;\n\n    @Override\n    public boolean onTouchEvent(MotionEvent event) {\n        switch (event.getAction()) {\n            case MotionEvent.ACTION_DOWN:\n                xInView = event.getX();\n                yInView = event.getY();\n                xDownInScreen = event.getRawX();\n                yDownInScreen = event.getRawY();\n                xInScreen = event.getRawX();\n                yInScreen = event.getRawY();\n                break;\n            case MotionEvent.ACTION_UP:\n                if (Math.abs(xDownInScreen - xInScreen) <= ViewConfiguration.get(getContext()).getScaledTouchSlop()\n                        && Math.abs(yDownInScreen - yInScreen) <= ViewConfiguration.get(getContext()).getScaledTouchSlop()) {\n                    // 点击效果\n                    if (null != mClickFloatViewListener) {\n                        mClickFloatViewListener.clickFloatView();\n                    }\n                }\n                break;\n            case MotionEvent.ACTION_MOVE:\n                xInScreen = event.getRawX();\n                yInScreen = event.getRawY();\n                // 手指移动的时候更新小悬浮窗的位置\n                updateViewPosition();\n        }\n        return super.onTouchEvent(event);\n    }\n\n    /**\n     * 手指移动的时候更新小悬浮窗的位置\n     */\n    private void updateViewPosition() {\n        //增加移动误差\n        mParams.x = (int) (xInScreen - xInView);\n        mParams.y = (int) (yInScreen - yInView);\n        mWindowManager.updateViewLayout(this, mParams);\n    }\n\n    /**\n     * 更新floatView的位置\n     */\n    private void refreshFloatXY() {\n        floatX = DeviceUtils.getWidth();\n        floatY = ScreenUtils.dip2px(64);\n        if (null != mParams) {\n            mParams.x = floatX;\n            mParams.y = floatY;\n        }\n    }\n}\n```\n\n"]],[732,732],[7021,7021]]],[1516956831865,[null,[[-1,699,"\n"],[1,700,")"]],[699,699],[701,701]]],[1516956831865,[null,[[1,699,"\n"],[-1,699,")"]],[701,701],[699,699]]],[1516956790538,["gengmei_pxf@gengmei123.local",[[-1,733,"```\npublic class FloatView extends FrameLayout {\n\n    private WindowManager mWindowManager;\n    private WindowManager.LayoutParams mParams;\n    private ClickFloatViewListener mClickFloatViewListener;\n\n    /**\n     * floatView的clickListener\n     */\n    public interface ClickFloatViewListener {\n        void clickFloatView();\n    }\n\n    /**\n     * 设置floatView的clickListener\n     */\n    public void setClickFloatViewListener(ClickFloatViewListener clickFloatViewListener) {\n        mClickFloatViewListener = clickFloatViewListener;\n    }\n\n    public FloatView(@NonNull Context context) {\n        super(context);\n        floatX = DeviceUtils.getWidth();\n        floatY = ScreenUtils.dip2px(64);\n        init(context);\n    }\n\n    public FloatView(@NonNull Context context, int x, int y) {\n        super(context);\n        floatX = x;\n        floatY = y;\n        init(context);\n    }\n\n    private void init(Context context) {\n        setBackgroundResource(R.drawable.live_shape_float_window_background);\n        initWindow(context);\n    }\n\n    private void initWindow(Context context) {\n        mWindowManager = (WindowManager) context.getApplicationContext().getSystemService(Context.WINDOW_SERVICE);\n        mParams = new WindowManager.LayoutParams();\n        mParams.packageName = context.getPackageName();\n        // 设置window type\n        mParams.type = WindowManager.LayoutParams.TYPE_SYSTEM_ALERT; // 系统提示。它总是出现在应用程序窗口之上\n//        if (Build.VERSION.SDK_INT >= Build.VERSION_CODES.KITKAT) {\n//            mParams.type = WindowManager.LayoutParams.TYPE_TOAST;\n//        } else {\n//            mParams.type = WindowManager.LayoutParams.TYPE_PHONE;\n//        }\n//        mParams.type = WindowManager.LayoutParams.TYPE_SYSTEM_ERROR;//系统内部错误提示，显示于所有内容之上\n        // 设置浮动窗口不可聚焦（实现操作除浮动窗口外的其他可见窗口的操作）\n        mParams.flags = WindowManager.LayoutParams.FLAG_NOT_TOUCH_MODAL | WindowManager.LayoutParams.FLAG_NOT_FOCUSABLE | WindowManager.LayoutParams.FLAG_HARDWARE_ACCELERATED;\n        // 设置图片格式，效果为背景透明\n        mParams.format = PixelFormat.RGBA_8888;\n        // 调整悬浮窗显示的停靠位置为\n        mParams.gravity = Gravity.START | Gravity.TOP;\n        // 设置悬浮窗口长宽数据\n        mParams.width = ScreenUtils.dip2px(125);\n        mParams.height = ScreenUtils.dip2px(223);\n        mParams.x = floatX;\n        mParams.y = floatY;\n    }\n\n    /**\n     * 添加至Window\n     */\n    public boolean addToWindow() {\n        if (mWindowManager != null) {\n            if (Build.VERSION.SDK_INT >= Build.VERSION_CODES.KITKAT) {\n                if (!isAttachedToWindow()) {\n                    refreshFloatXY();\n                    mWindowManager.addView(this, mParams);\n                    return true;\n                } else {\n                    return false;\n                }\n            } else {\n                try {\n                    if (getParent() == null) {\n                        refreshFloatXY();\n                        mWindowManager.addView(this, mParams);\n                    }\n                    return true;\n                } catch (Exception e) {\n                    return false;\n                }\n            }\n        } else {\n            return false;\n        }\n    }\n\n    /**\n     * 从Window移除\n     */\n    public boolean removeFromWindow() {\n        if (mWindowManager != null) {\n            if (Build.VERSION.SDK_INT >= Build.VERSION_CODES.KITKAT) {\n                if (isAttachedToWindow()) {\n                    mWindowManager.removeViewImmediate(this);\n                    return true;\n                } else {\n                    return false;\n                }\n            } else {\n                try {\n                    if (getParent() != null) {\n                        mWindowManager.removeViewImmediate(this);\n                    }\n                    return true;\n                } catch (Exception e) {\n                    return false;\n                }\n            }\n        } else {\n            return false;\n        }\n    }\n\n\n    @Override\n    public boolean onInterceptTouchEvent(MotionEvent ev) {\n        return ev.getAction() != MotionEvent.ACTION_DOWN;\n    }\n\n    private int floatX;\n    private int floatY;\n\n    /**\n     * 记录手指按下时在小悬浮窗的View上的横坐标的值\n     */\n    private float xInView;\n\n    /**\n     * 记录手指按下时在小悬浮窗的View上的纵坐标的值\n     */\n    private float yInView;\n    /**\n     * 记录当前手指位置在屏幕上的横坐标值\n     */\n    private float xInScreen;\n\n    /**\n     * 记录当前手指位置在屏幕上的纵坐标值\n     */\n    private float yInScreen;\n\n    /**\n     * 记录手指按下时在屏幕上的横坐标的值\n     */\n    private float xDownInScreen;\n\n    /**\n     * 记录手指按下时在屏幕上的纵坐标的值\n     */\n    private float yDownInScreen;\n\n    @Override\n    public boolean onTouchEvent(MotionEvent event) {\n        switch (event.getAction()) {\n            case MotionEvent.ACTION_DOWN:\n                xInView = event.getX();\n                yInView = event.getY();\n                xDownInScreen = event.getRawX();\n                yDownInScreen = event.getRawY();\n                xInScreen = event.getRawX();\n                yInScreen = event.getRawY();\n                break;\n            case MotionEvent.ACTION_UP:\n                if (Math.abs(xDownInScreen - xInScreen) <= ViewConfiguration.get(getContext()).getScaledTouchSlop()\n                        && Math.abs(yDownInScreen - yInScreen) <= ViewConfiguration.get(getContext()).getScaledTouchSlop()) {\n                    // 点击效果\n                    if (null != mClickFloatViewListener) {\n                        mClickFloatViewListener.clickFloatView();\n                    }\n                }\n                break;\n            case MotionEvent.ACTION_MOVE:\n                xInScreen = event.getRawX();\n                yInScreen = event.getRawY();\n                // 手指移动的时候更新小悬浮窗的位置\n                updateViewPosition();\n        }\n        return super.onTouchEvent(event);\n    }\n\n    /**\n     * 手指移动的时候更新小悬浮窗的位置\n     */\n    private void updateViewPosition() {\n        //增加移动误差\n        mParams.x = (int) (xInScreen - xInView);\n        mParams.y = (int) (yInScreen - yInView);\n        mWindowManager.updateViewLayout(this, mParams);\n    }\n\n    /**\n     * 更新floatView的位置\n     */\n    private void refreshFloatXY() {\n        floatX = DeviceUtils.getWidth();\n        floatY = ScreenUtils.dip2px(64);\n        if (null != mParams) {\n            mParams.x = floatX;\n            mParams.y = floatY;\n        }\n    }\n}\n```\n\n"]],[7021,7021],[732,732]]],[1516956821384,["gengmei_pxf@gengmei123.local",[[-1,732,"\n"],[1,733,"1) chushi"]],[732,732],[741,741]]],[1516956822471,["gengmei_pxf@gengmei123.local",[[-1,735,"chushi"]],[741,741],[735,735]]],[1516956827953,["gengmei_pxf@gengmei123.local",[[1,735,"初始化window"]],[735,735],[744,744]]],[1516956891836,[null,[[-1,699,"\n"],[1,700,")"]],[699,699],[701,701]]],[1516956891836,[null,[[1,699,"\n"],[-1,699,")"]],[701,701],[699,699]]],[1516956835009,["gengmei_pxf@gengmei123.local",[[1,744,"参数"]],[744,744],[746,746]]],[1516956836301,["gengmei_pxf@gengmei123.local",[[1,746,"\n\nprivate void initWindow(Context context) {\n        mWindowManager = (WindowManager) context.getApplicationContext().getSystemService(Context.WINDOW_SERVICE);\n  mParams = new WindowManager.LayoutParams();\n  mParams.packageName = context.getPackageName();\n  // 设置window type\n  mParams.type = WindowManager.LayoutParams.TYPE_SYSTEM_ALERT; // 系统提示。它总是出现在应用程序窗口之上 //        if (Build.VERSION.SDK_INT >= Build.VERSION_CODES.KITKAT) { //            mParams.type = WindowManager.LayoutParams.TYPE_TOAST; //        } else { //            mParams.type = WindowManager.LayoutParams.TYPE_PHONE; //        } //        mParams.type = WindowManager.LayoutParams.TYPE_SYSTEM_ERROR;//系统内部错误提示，显示于所有内容之上\n // 设置浮动窗口不可聚焦（实现操作除浮动窗口外的其他可见窗口的操作）  mParams.flags = WindowManager.LayoutParams.FLAG_NOT_TOUCH_MODAL | WindowManager.LayoutParams.FLAG_NOT_FOCUSABLE | WindowManager.LayoutParams.FLAG_HARDWARE_ACCELERATED;\n  // 设置图片格式，效果为背景透明\n  mParams.format = PixelFormat.RGBA_8888;\n  // 调整悬浮窗显示的停靠位置为\n  mParams.gravity = Gravity.START | Gravity.TOP;\n  // 设置悬浮窗口长宽数据\n  mParams.width = ScreenUtils.dip2px(125);\n  mParams.height = ScreenUtils.dip2px(223);\n  mParams.x = floatX;\n  mParams.y = floatY;\n  }"]],[746,746],[1919,1919]]],[1516956837783,["gengmei_pxf@gengmei123.local",[[-1,747,"private void initWindow(Context context) {\n        mWindowManager = (WindowManager) context.getApplicationContext().getSystemService(Context.WINDOW_SERVICE);\n  mParams = new WindowManager.LayoutParams();\n  mParams.packageName = context.getPackageName();\n  // 设置window type\n  mParams.type = WindowManager.LayoutParams.TYPE_SYSTEM_ALERT; // 系统提示。它总是出现在应用程序窗口之上 //        if (Build.VERSION.SDK_INT >= Build.VERSION_CODES.KITKAT) { //            mParams.type = WindowManager.LayoutParams.TYPE_TOAST; //        } else { //            mParams.type = WindowManager.LayoutParams.TYPE_PHONE; //        } //        mParams.type = WindowManager.LayoutParams.TYPE_SYSTEM_ERROR;//系统内部错误提示，显示于所有内容之上\n // 设置浮动窗口不可聚焦（实现操作除浮动窗口外的其他可见窗口的操作）  mParams.flags = WindowManager.LayoutParams.FLAG_NOT_TOUCH_MODAL | WindowManager.LayoutParams.FLAG_NOT_FOCUSABLE | WindowManager.LayoutParams.FLAG_HARDWARE_ACCELERATED;\n  // 设置图片格式，效果为背景透明\n  mParams.format = PixelFormat.RGBA_8888;\n  // 调整悬浮窗显示的停靠位置为\n  mParams.gravity = Gravity.START | Gravity.TOP;\n  // 设置悬浮窗口长宽数据\n  mParams.width = ScreenUtils.dip2px(125);\n  mParams.height = ScreenUtils.dip2px(223);\n  mParams.x = floatX;\n  mParams.y = floatY;\n  }"]],[1919,1919],[747,747]]],[1516956841867,["gengmei_pxf@gengmei123.local",[[-1,747,"\n"],[1,748,"·"]],[747,747],[748,748]]],[1516956842847,["gengmei_pxf@gengmei123.local",[[-1,747,"·"],[1,748,"\n"]],[748,748],[747,747]]],[1516956844056,["gengmei_pxf@gengmei123.local",[[-1,747,"\n"],[1,748,"```"]],[747,747],[750,750]]],[1516956844582,["gengmei_pxf@gengmei123.local",[[1,750,"\n\n"]],[750,750],[751,751]]],[1516956845079,["gengmei_pxf@gengmei123.local",[[1,752,"\n"]],[751,751],[752,752]]],[1516956845760,["gengmei_pxf@gengmei123.local",[[-1,752,"\n"],[1,753,"```"]],[752,752],[755,755]]],[1516956846908,["gengmei_pxf@gengmei123.local",[[1,751,"private void initWindow(Context context) {\n        mWindowManager = (WindowManager) context.getApplicationContext().getSystemService(Context.WINDOW_SERVICE);\n  mParams = new WindowManager.LayoutParams();\n  mParams.packageName = context.getPackageName();\n  // 设置window type\n  mParams.type = WindowManager.LayoutParams.TYPE_SYSTEM_ALERT; // 系统提示。它总是出现在应用程序窗口之上 //        if (Build.VERSION.SDK_INT >= Build.VERSION_CODES.KITKAT) { //            mParams.type = WindowManager.LayoutParams.TYPE_TOAST; //        } else { //            mParams.type = WindowManager.LayoutParams.TYPE_PHONE; //        } //        mParams.type = WindowManager.LayoutParams.TYPE_SYSTEM_ERROR;//系统内部错误提示，显示于所有内容之上\n // 设置浮动窗口不可聚焦（实现操作除浮动窗口外的其他可见窗口的操作）  mParams.flags = WindowManager.LayoutParams.FLAG_NOT_TOUCH_MODAL | WindowManager.LayoutParams.FLAG_NOT_FOCUSABLE | WindowManager.LayoutParams.FLAG_HARDWARE_ACCELERATED;\n  // 设置图片格式，效果为背景透明\n  mParams.format = PixelFormat.RGBA_8888;\n  // 调整悬浮窗显示的停靠位置为\n  mParams.gravity = Gravity.START | Gravity.TOP;\n  // 设置悬浮窗口长宽数据\n  mParams.width = ScreenUtils.dip2px(125);\n  mParams.height = ScreenUtils.dip2px(223);\n  mParams.x = floatX;\n  mParams.y = floatY;\n  }"]],[751,751],[1923,1923]]],[1516956851383,["gengmei_pxf@gengmei123.local",[[1,1927,"\n\n"]],[1927,1927],[1928,1928]]],[1516956853569,["gengmei_pxf@gengmei123.local",[[-1,1928,"\n"],[1,1929,"2)"]],[1928,1928],[1930,1930]]],[1516956951841,[null,[[-1,699,"\n"],[1,700,")"]],[699,699],[701,701]]],[1516956951841,[null,[[1,699,"\n"],[-1,699,")"]],[701,701],[699,699]]],[1516956893745,["gengmei_pxf@gengmei123.local",[[1,1930,"添加至Window"]],[1930,1930],[1939,1939]]],[1516956894324,["gengmei_pxf@gengmei123.local",[[1,1939,"\n\n"]],[1939,1939],[1940,1940]]],[1516956895789,["gengmei_pxf@gengmei123.local",[[-1,1940,"\n"],[1,1941,"··"]],[1940,1940],[1942,1942]]],[1516956896630,["gengmei_pxf@gengmei123.local",[[-1,1941,"·"]],[1942,1942],[1941,1941]]],[1516956896856,["gengmei_pxf@gengmei123.local",[[-1,1940,"·"],[1,1941,"\n"]],[1941,1941],[1940,1940]]],[1516956898143,["gengmei_pxf@gengmei123.local",[[-1,1940,"\n"],[1,1941,"```"]],[1940,1940],[1943,1943]]],[1516956898438,["gengmei_pxf@gengmei123.local",[[1,1943,"\n\n"]],[1943,1943],[1944,1944]]],[1516956899109,["gengmei_pxf@gengmei123.local",[[1,1945,"\n"]],[1944,1944],[1945,1945]]],[1516956899775,["gengmei_pxf@gengmei123.local",[[-1,1945,"\n"],[1,1946,"```"]],[1945,1945],[1948,1948]]],[1516956906376,["gengmei_pxf@gengmei123.local",[[1,1944,"public boolean addToWindow() {\n    if (mWindowManager != null) {\n        if (Build.VERSION.SDK_INT >= Build.VERSION_CODES.KITKAT) {\n            if (!isAttachedToWindow()) {\n                refreshFloatXY();\n  mWindowManager.addView(this, mParams);\n return true;  } else {\n                return false;\n  }\n        } else {\n            try {\n                if (getParent() == null) {\n                    refreshFloatXY();\n  mWindowManager.addView(this, mParams);\n  }\n                return true;\n  } catch (Exception e) {\n                return false;\n  }\n        }\n    } else {\n        return false;\n  }\n}"]],[1944,1944],[2550,2550]]],[1516956909325,["gengmei_pxf@gengmei123.local",[[1,2554,"\n\n"]],[2554,2554],[2555,2555]]],[1516956917178,["gengmei_pxf@gengmei123.local",[[-1,2555,"\n"],[1,2556,"3)从Window移除"]],[2555,2555],[2566,2566]]],[1516956917661,["gengmei_pxf@gengmei123.local",[[1,2566,"\n\n"]],[2566,2566],[2567,2567]]],[1516956919915,["gengmei_pxf@gengmei123.local",[[-1,2567,"\n"],[1,2568,"```"]],[2567,2567],[2570,2570]]],[1516956920268,["gengmei_pxf@gengmei123.local",[[1,2570,"\n\n"]],[2570,2570],[2571,2571]]],[1516956920476,["gengmei_pxf@gengmei123.local",[[1,2572,"\n"]],[2571,2571],[2572,2572]]],[1516956921199,["gengmei_pxf@gengmei123.local",[[-1,2572,"\n"],[1,2573,"```"]],[2572,2572],[2575,2575]]],[1516956929052,["gengmei_pxf@gengmei123.local",[[1,2571,"public boolean removeFromWindow() {\n    if (mWindowManager != null) {\n        if (Build.VERSION.SDK_INT >= Build.VERSION_CODES.KITKAT) {\n            if (isAttachedToWindow()) {\n                mWindowManager.removeViewImmediate(this);\n return true;  } else {\n                return false;\n  }\n        } else {\n            try {\n                if (getParent() != null) {\n                    mWindowManager.removeViewImmediate(this);\n  }\n                return true;\n  } catch (Exception e) {\n                return false;\n  }\n        }\n    } else {\n        return false;\n  }\n}"]],[2571,2571],[3147,3147]]],[1516957011848,[null,[[-1,699,"\n"],[1,700,")"]],[699,699],[701,701]]],[1516957011848,[null,[[1,699,"\n"],[-1,699,")"]],[701,701],[699,699]]],[1516956970029,["gengmei_pxf@gengmei123.local",[[1,3151,"\n\n"]],[3151,3151],[3152,3152]]],[1516956971478,["gengmei_pxf@gengmei123.local",[[-1,3152,"\n"],[1,3153,"f"]],[3152,3152],[3153,3153]]],[1516956971957,["gengmei_pxf@gengmei123.local",[[-1,3152,"f"],[1,3153,"\n"]],[3153,3153],[3152,3152]]],[1516956997143,["gengmei_pxf@gengmei123.local",[[-1,3152,"\n"],[1,3153,"封装一个FloatView悬浮窗控件（解决滑动冲突），将要驯服"]],[3152,3152],[3183,3183]]],[1516956998143,["gengmei_pxf@gengmei123.local",[[-1,3181,"驯服"]],[3183,3183],[3181,3181]]],[1516957003110,["gengmei_pxf@gengmei123.local",[[1,3181,"悬浮的Viewadd"]],[3181,3181],[3191,3191]]],[1516957004340,["gengmei_pxf@gengmei123.local",[[-1,3188,"add"]],[3191,3191],[3188,3188]]],[1516957010734,["gengmei_pxf@gengmei123.local",[[1,3179,"通过"]],[3179,3179],[3181,3181]]],[1516957071852,[null,[[-1,699,"\n"],[1,700,")"]],[699,699],[701,701]]],[1516957071852,[null,[[1,699,"\n"],[-1,699,")"]],[701,701],[699,699]]],[1516957018510,["gengmei_pxf@gengmei123.local",[[1,3181,"FloatView addView*（"]],[3181,3181],[3200,3200]]],[1516957019300,["gengmei_pxf@gengmei123.local",[[-1,3198,"*（"]],[3200,3200],[3198,3198]]],[1516957022206,["gengmei_pxf@gengmei123.local",[[1,3198,"（）发放"]],[3198,3198],[3202,3202]]],[1516957023580,["gengmei_pxf@gengmei123.local",[[-1,3200,"发放"]],[3202,3202],[3200,3200]]],[1516957025300,["gengmei_pxf@gengmei123.local",[[1,3200,"方法"]],[3200,3200],[3202,3202]]],[1516957032877,["gengmei_pxf@gengmei123.local",[[1,3211,"add"]],[3211,3211],[3214,3214]]],[1516957033939,["gengmei_pxf@gengmei123.local",[[-1,3211,"add"]],[3214,3214],[3211,3211]]],[1516957042086,["gengmei_pxf@gengmei123.local",[[1,3211,"添加进"]],[3211,3211],[3214,3214]]],[1516957049891,["gengmei_pxf@gengmei123.local",[[-1,3211,"添加进"]],[3214,3214],[3211,3211]]],[1516957053348,["gengmei_pxf@gengmei123.local",[[-1,3202,"将要"]],[3204,3204],[3202,3202]]],[1516957055533,["gengmei_pxf@gengmei123.local",[[1,3202,"添加"]],[3202,3202],[3204,3204]]],[1516957131855,[null,[[-1,699,"\n"],[1,700,")"]],[699,699],[701,701]]],[1516957131855,[null,[[1,699,"\n"],[-1,699,")"]],[701,701],[699,699]]],[1516957072901,["gengmei_pxf@gengmei123.local",[[1,3211,"。"]],[3211,3211],[3212,3212]]],[1516957251868,[null,[[-1,699,"\n"],[1,700,")"]],[699,699],[701,701]]],[1516957251868,[null,[[1,699,"\n"],[-1,699,")"]],[701,701],[699,699]]],[1516957217305,["gengmei_pxf@gengmei123.local",[[1,3212,"\n\n"]],[3212,3212],[3213,3213]]],[1516957218192,["gengmei_pxf@gengmei123.local",[[1,3214,"\n"]],[3213,3213],[3214,3214]]],[1516957224856,["gengmei_pxf@gengmei123.local",[[1,732,"\n"]],[731,731],[732,732]]],[1516957226177,["gengmei_pxf@gengmei123.local",[[1,733,"\n"]],[732,732],[733,733]]],[1516957229680,["gengmei_pxf@gengmei123.local",[[1,733,"## 构建"]],[733,733],[738,738]]],[1516957234792,["gengmei_pxf@gengmei123.local",[[-1,736,"构建"]],[738,738],[736,736]]],[1516957239320,["gengmei_pxf@gengmei123.local",[[1,736,"封装悬浮窗控件（解决滑动冲突）"]],[736,736],[751,751]]],[1516957246699,["gengmei_pxf@gengmei123.local",[[-1,3172,"封装一个FloatView悬浮窗控件（解决滑动冲突），通过FloatView addView（）方法添加悬浮的View。"]],[3172,3232],[3172,3172]]],[1516957247016,["gengmei_pxf@gengmei123.local",[[-1,3174,"\n"]],[3172,3172],[3171,3171]]],[1516957247400,["gengmei_pxf@gengmei123.local",[[-1,3170,"`"]],[3171,3171],[3170,3170]]],[1516957248936,["gengmei_pxf@gengmei123.local",[[1,3170,"`"]],[3170,3170],[3171,3171]]],[1516957311860,[null,[[-1,699,"\n"],[1,700,")"]],[699,699],[701,701]]],[1516957311860,[null,[[1,699,"\n"],[-1,699,")"]],[701,701],[699,699]]],[1516957253215,["gengmei_pxf@gengmei123.local",[[1,752,"\n"]],[751,751],[752,752]]],[1516957253882,["gengmei_pxf@gengmei123.local",[[1,752,"封装一个FloatView悬浮窗控件（解决滑动冲突），通过FloatView addView（）方法添加悬浮的View。"]],[752,752],[812,812]]],[1516957255398,["gengmei_pxf@gengmei123.local",[[1,813,"\n"]],[812,812],[813,813]]],[1516957271551,["gengmei_pxf@gengmei123.local",[[1,3233,"## "]],[3233,3233],[3236,3236]]],[1516957272372,["gengmei_pxf@gengmei123.local",[[-1,3233,"## "]],[3236,3236],[3233,3233]]],[1516957273743,["gengmei_pxf@gengmei123.local",[[1,3236,"\n"]],[3233,3233],[3234,3234]]],[1516957291681,["gengmei_pxf@gengmei123.local",[[1,3234,"## 实现直播悬浮窗"]],[3234,3234],[3244,3244]]],[1516957292862,["gengmei_pxf@gengmei123.local",[[1,3247,"\n"]],[3244,3244],[3245,3245]]],[1516957305649,["gengmei_pxf@gengmei123.local",[[1,3245,"原理"]],[3245,3245],[3247,3247]]],[1516957306615,["gengmei_pxf@gengmei123.local",[[-1,3245,"原理"]],[3247,3247],[3245,3245]]],[1516957371863,[null,[[-1,699,"\n"],[1,700,")"]],[699,699],[701,701]]],[1516957371863,[null,[[1,699,"\n"],[-1,699,")"]],[701,701],[699,699]]],[1516957367161,["gengmei_pxf@gengmei123.local",[[1,3245,"将直播播放VideoView通过FloatView.addView添加至悬浮窗，"]],[3245,3245],[3285,3285]]],[1516957370373,["gengmei_pxf@gengmei123.local",[[-1,3284,"，"]],[3285,3285],[3284,3284]]],[1516957431862,[null,[[-1,699,"\n"],[1,700,")"]],[699,699],[701,701]]],[1516957431862,[null,[[1,699,"\n"],[-1,699,")"]],[701,701],[699,699]]],[1516957378039,["gengmei_pxf@gengmei123.local",[[1,3245,"很简单就是"]],[3245,3245],[3250,3250]]],[1516957392088,["gengmei_pxf@gengmei123.local",[[1,3289,"。但是大屏"]],[3289,3289],[3294,3294]]],[1516957394281,["gengmei_pxf@gengmei123.local",[[-1,3292,"大屏"]],[3294,3294],[3292,3292]]],[1516957412433,["gengmei_pxf@gengmei123.local",[[1,3292,"全屏直播到小浮窗来回组黄台"]],[3292,3292],[3305,3305]]],[1516957413284,["gengmei_pxf@gengmei123.local",[[-1,3302,"组黄台"]],[3305,3305],[3302,3302]]],[1516957416952,["gengmei_pxf@gengmei123.local",[[1,3302,"状态的切换"]],[3302,3302],[3307,3307]]],[1516957429144,["gengmei_pxf@gengmei123.local",[[1,3292,"要保证"]],[3292,3292],[3295,3295]]],[1516957491866,[null,[[-1,699,"\n"],[1,700,")"]],[699,699],[701,701]]],[1516957491866,[null,[[1,699,"\n"],[-1,699,")"]],[701,701],[699,699]]],[1516957439168,["gengmei_pxf@gengmei123.local",[[1,3310,"流畅"]],[3310,3310],[3312,3312]]],[1516957466668,["gengmei_pxf@gengmei123.local",[[-1,3303,"来回"]],[3305,3305],[3303,3303]]],[1516957491646,["gengmei_pxf@gengmei123.local",[[1,3310,"，所以VideoView必须是同一个"]],[3310,3310],[3328,3328]]],[1516957551869,[null,[[-1,699,"\n"],[1,700,")"]],[699,699],[701,701]]],[1516957551869,[null,[[1,699,"\n"],[-1,699,")"]],[701,701],[699,699]]],[1516957501341,["gengmei_pxf@gengmei123.local",[[1,3328,"才能保证精度"]],[3328,3328],[3334,3334]]],[1516957501899,["gengmei_pxf@gengmei123.local",[[-1,3332,"精度"]],[3334,3334],[3332,3332]]],[1516957520462,["gengmei_pxf@gengmei123.local",[[1,3332,"进度的完全同步。"]],[3332,3332],[3340,3340]]],[1516957526877,["gengmei_pxf@gengmei123.local",[[1,2,"，视屏"]],[2,2],[5,5]]],[1516957536101,["gengmei_pxf@gengmei123.local",[[1,3244,"，视屏"]],[3244,3244],[3247,3247]]],[1516957611871,[null,[[-1,702,"\n"],[1,703,")"]],[702,702],[704,704]]],[1516957611871,[null,[[1,702,"\n"],[-1,702,")"]],[704,704],[702,702]]],[1516957569088,["gengmei_pxf@gengmei123.local",[[1,3251,"\n"]],[3250,3250],[3251,3251]]],[1516957569665,["gengmei_pxf@gengmei123.local",[[1,3252,"\n"]],[3251,3251],[3252,3252]]],[1516957581003,["gengmei_pxf@gengmei123.local",[[1,3252,"###VideoView"]],[3252,3252],[3264,3264]]],[1516957585011,["gengmei_pxf@gengmei123.local",[[1,3255," "]],[3255,3255],[3256,3256]]],[1516957592948,["gengmei_pxf@gengmei123.local",[[1,3265,"播放器的全局单例"]],[3265,3265],[3273,3273]]],[1516957604400,["gengmei_pxf@gengmei123.local",[[-1,3251,"\n"]],[3251,3251],[3250,3250]]],[1516957608344,["gengmei_pxf@gengmei123.local",[[1,3251,"\n"]],[3250,3250],[3251,3251]]],[1516957671870,[null,[[-1,702,"\n"],[1,703,")"]],[702,702],[704,704]]],[1516957671870,[null,[[1,702,"\n"],[-1,702,")"]],[704,704],[702,702]]],[1516957650179,["gengmei_pxf@gengmei123.local",[[1,3369,"所以封装了一个VideoView播放器的全局单例管理类，统一用FloatViewManager"]],[3369,3369],[3416,3416]]],[1516957651123,["gengmei_pxf@gengmei123.local",[[-1,3369,"所以封装了一个VideoView播放器的全局单例管理类，统一用FloatViewManager"]],[3416,3416],[3369,3369]]],[1516957653060,["gengmei_pxf@gengmei123.local",[[-1,3251,"\n"]],[3251,3251],[3250,3250]]],[1516957670946,["gengmei_pxf@gengmei123.local",[[1,3368,"所以封装了全局"]],[3368,3368],[3375,3375]]],[1516957731874,[null,[[-1,702,"\n"],[1,703,")"]],[702,702],[704,704]]],[1516957731874,[null,[[1,702,"\n"],[-1,702,")"]],[704,704],[702,702]]],[1516957672847,["gengmei_pxf@gengmei123.local",[[1,3375,"统一"]],[3375,3375],[3377,3377]]],[1516957673792,["gengmei_pxf@gengmei123.local",[[-1,3375,"统一"]],[3377,3377],[3375,3375]]],[1516957727416,["gengmei_pxf@gengmei123.local",[[1,3375,"VideoView管理工具类FloatViewManager，统一用FloatViewManager中的VideoView保证使用的是同一个"]],[3375,3375],[3445,3445]]],[1516957776889,[null,[[-1,702,"\n"],[1,703,")"]],[702,702],[704,704]]],[1516957776889,[null,[[1,702,"\n"],[-1,702,")"]],[704,704],[702,702]]],[1516957735090,["gengmei_pxf@gengmei123.local",[[1,3445,"VideoView。"]],[3445,3445],[3455,3455]]],[1516957736326,["gengmei_pxf@gengmei123.local",[[1,3458,"\n"]],[3455,3455],[3456,3456]]],[1516957756146,["gengmei_pxf@gengmei123.local",[[1,3456,"·"]],[3456,3456],[3457,3457]]],[1516957757030,["gengmei_pxf@gengmei123.local",[[-1,3456,"·"]],[3457,3457],[3456,3456]]],[1516957758752,["gengmei_pxf@gengmei123.local",[[1,3456,"```"]],[3456,3456],[3459,3459]]],[1516957759213,["gengmei_pxf@gengmei123.local",[[1,3462,"\n"]],[3459,3459],[3460,3460]]],[1516957759734,["gengmei_pxf@gengmei123.local",[[1,3463,"\n"]],[3460,3460],[3461,3461]]],[1516957760446,["gengmei_pxf@gengmei123.local",[[1,3461,"```"]],[3461,3461],[3464,3464]]],[1516957761844,["gengmei_pxf@gengmei123.local",[[1,3460,"public class FloatViewManager {\n    private static volatile FloatViewManager instance;   public PlayBackTextureView mPlayBackTextureView;\n public StreamingPullTextureView mStreamingPullTextureView;   private FloatViewManager() {\n    }\n\n    public static FloatViewManager getInstance() {\n        if (instance == null) {\n            synchronized (FloatViewManager.class) {\n                if (instance == null) {\n                    instance = new FloatViewManager();\n  }\n            }\n        }\n        return instance;\n  }\n\n    public PlayBackTextureView initPlayBackTextureView(Context context) {\n        mPlayBackTextureView = new PlayBackTextureView(context);\n return mPlayBackTextureView;\n  }\n\n    public StreamingPullTextureView initStreamingPullTextureView(Context context) {\n        mStreamingPullTextureView = new StreamingPullTextureView(context);\n return mStreamingPullTextureView;\n  }\n\n    /**\n * 释放PlayBackTextureView资源 */  public void stopPlayBackTextureView() {\n        if (null != mPlayBackTextureView) {\n            mPlayBackTextureView.stopFloatWindow();\n  mPlayBackTextureView = null;\n  }\n        instance = null;\n  }\n\n    /**\n * 释放StreamingPullTextureView资源 */  public void stopStreamingPullTextureView() {\n        if (null != mStreamingPullTextureView) {\n            mStreamingPullTextureView.stopFloatWindow();\n  mStreamingPullTextureView = null;\n  }\n        instance = null;\n  }\n\n    /**\n * 应用进入后台 关闭悬浮窗 */  public void stopFloatWindow() {\n        if (null != mPlayBackTextureView && mPlayBackTextureView.getIsFloat()) {\n            mPlayBackTextureView.stopFloatWindow();\n  mPlayBackTextureView = null;\n  }\n        if (null != mStreamingPullTextureView && mStreamingPullTextureView.getIsFloat()) {\n            mStreamingPullTextureView.stopFloatWindow();\n  mStreamingPullTextureView = null;\n  }\n        instance = null;\n  }\n}"]],[3460,3460],[5308,5308]]],[1516957814828,[null,[[-1,702,"\n"],[1,703,")"]],[702,702],[704,704]]],[1516957814828,[null,[[1,702,"\n"],[-1,702,")"]],[704,704],[702,702]]],[1516957792285,["gengmei_pxf@gengmei123.local",[[1,4394,"\n"]],[4394,4394],[4395,4395]]],[1516957799957,["gengmei_pxf@gengmei123.local",[[1,4366,"\t\t"]],[4366,4366],[4368,4368]]],[1516957801645,["gengmei_pxf@gengmei123.local",[[-1,4367,"\t"]],[4368,4368],[4367,4367]]],[1516957810036,["gengmei_pxf@gengmei123.local",[[1,4642,"\n"]],[4642,4642],[4643,4643]]],[1516957812447,["gengmei_pxf@gengmei123.local",[[1,4891,"\n"]],[4891,4891],[4892,4892]]],[1516957874830,[null,[[-1,702,"\n"],[1,703,")"]],[702,702],[704,704]]],[1516957874830,[null,[[1,702,"\n"],[-1,702,")"]],[704,704],[702,702]]],[1516957853439,["gengmei_pxf@gengmei123.local",[[1,5316,"##"]],[5316,5316],[5318,5318]]],[1516957855444,["gengmei_pxf@gengmei123.local",[[-1,5316,"##"]],[5318,5318],[5316,5316]]],[1516957856892,["gengmei_pxf@gengmei123.local",[[1,5319,"\n"]],[5316,5316],[5317,5317]]],[1516957861773,["gengmei_pxf@gengmei123.local",[[1,5317,"###Activityzho"]],[5317,5317],[5331,5331]]],[1516957862420,["gengmei_pxf@gengmei123.local",[[-1,5328,"zho"]],[5331,5331],[5328,5328]]],[1516957868013,["gengmei_pxf@gengmei123.local",[[1,5328,"中使用同一个"]],[5328,5328],[5334,5334]]],[1516957917491,[null,[[-1,702,"\n"],[1,703,")"]],[702,702],[704,704]]],[1516957917491,[null,[[1,702,"\n"],[-1,702,")"]],[704,704],[702,702]]],[1516957881542,["gengmei_pxf@gengmei123.local",[[1,5334,"VideoView"]],[5336,5336],[5343,5343]]],[1516957884854,["gengmei_pxf@gengmei123.local",[[1,5320," "]],[5320,5320],[5321,5321]]],[1516957886171,["gengmei_pxf@gengmei123.local",[[1,5347,"\n"]],[5344,5344],[5345,5345]]],[1516957898044,["gengmei_pxf@gengmei123.local",[[1,5345,"·"]],[5345,5345],[5346,5346]]],[1516957898739,["gengmei_pxf@gengmei123.local",[[-1,5345,"·"]],[5346,5346],[5345,5345]]],[1516957900142,["gengmei_pxf@gengmei123.local",[[1,5345,"```"]],[5345,5345],[5348,5348]]],[1516957900475,["gengmei_pxf@gengmei123.local",[[1,5351,"\n"]],[5348,5348],[5349,5349]]],[1516957900971,["gengmei_pxf@gengmei123.local",[[1,5352,"\n"]],[5349,5349],[5350,5350]]],[1516957901605,["gengmei_pxf@gengmei123.local",[[1,5350,"```"]],[5350,5350],[5353,5353]]],[1516957902968,["gengmei_pxf@gengmei123.local",[[1,5349,"mVideoView = FloatViewManager.getInstance().mStreamingPullTextureView; if (null == mVideoView) {\n    mVideoView = FloatViewManager.getInstance().initStreamingPullTextureView(mContext.getApplicationContext()); } else {\n    ViewGroup parent = (ViewGroup) mVideoView.getParent();\n if (parent != null) {\n        parent.removeView(mVideoView);\n  }\n}\nmVideoFrameLayout.addView(mVideoView);"]],[5349,5349],[5732,5732]]]]]]}